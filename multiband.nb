(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    592587,      11218]
NotebookOptionsPosition[    584079,      11087]
NotebookOutlinePosition[    584730,      11110]
CellTagsIndexPosition[    584655,      11105]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<multiband.wl\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74526086889017*^9, 3.7452608839801407`*^9}, {
  3.7452612242723722`*^9, 3.745261224661151*^9}, {3.755488327041394*^9, 
  3.7554883273854966`*^9}},ExpressionUUID->"3793eb9a-45c0-48a2-a8db-\
52706051035f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmb", "[", 
   RowBox[{
    RowBox[{"a_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Mu]0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[CapitalDelta]0_", "?", "NumberQ"}], ",", 
    RowBox[{"V0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Alpha]0_", "?", "NumberQ"}], ",", 
    RowBox[{"dim_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       FractionBox["25", 
        RowBox[{"a", "^", "2"}]]}], ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["\[Alpha]0", 
        RowBox[{"2", "a"}]]}], ",", 
      RowBox[{"Vz", "=", "V0"}], ",", 
      RowBox[{"\[CapitalDelta]11", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]12", "=", "\[CapitalDelta]0"}], ",", "H11", ",",
       "H12", ",", "H22", ",", 
      RowBox[{"\[Epsilon]", "=", "0.75"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Epsilon]", "-", "\[Mu]", "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
          RowBox[{"\[CapitalDelta]12", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", 
     RowBox[{"Chop", "@", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744403259416606*^9, 3.7444033007640505`*^9}, {
  3.744403358268156*^9, 3.7444033682684417`*^9}, {3.7444204144078417`*^9, 
  3.7444205655563374`*^9}, {3.7444207194582453`*^9, 3.7444207486469946`*^9}, {
  3.7444207829777308`*^9, 3.7444207917912693`*^9}, {3.744420869884759*^9, 
  3.74442088070385*^9}, {3.7444209300240135`*^9, 3.744420930694166*^9}, {
  3.744421711252468*^9, 3.7444217164585667`*^9}, {3.7444669580954065`*^9, 
  3.7444669645427246`*^9}, {3.755504292150902*^9, 3.755504292400214*^9}, {
  3.7555043755753098`*^9, 3.7555043773066816`*^9}, {3.755506464885172*^9, 
  3.7555064657349043`*^9}},ExpressionUUID->"5eb6bed8-f965-40ad-858d-\
6172a270e736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmbdis", "[", 
   RowBox[{
    RowBox[{"a_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Mu]0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[CapitalDelta]0_", "?", "NumberQ"}], ",", 
    RowBox[{"V0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Alpha]0_", "?", "NumberQ"}], ",", "vimp_", ",", 
    RowBox[{"dim_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       FractionBox["25", 
        RowBox[{"a", "^", "2"}]]}], ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["\[Alpha]0", 
        RowBox[{"2", "a"}]]}], ",", 
      RowBox[{"Vz", "=", "V0"}], ",", 
      RowBox[{"\[CapitalDelta]11", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]12", "=", "\[CapitalDelta]0"}], ",", "H11", ",",
       "H12", ",", "H22", ",", 
      RowBox[{"\[Epsilon]", "=", "1"}], ",", "mux"}], "}"}], ",", 
    RowBox[{
     RowBox[{"mux", "=", 
      RowBox[{"\[Mu]", "-", "vimp"}]}], ";", 
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"+", "2"}], "*", "t"}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "-", 
             RowBox[{"DiagonalMatrix", "[", "mux", "]"}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Epsilon]", "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "-", 
             RowBox[{"DiagonalMatrix", "[", "mux", "]"}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
          RowBox[{"\[CapitalDelta]12", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", 
     RowBox[{"Chop", "@", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744403259416606*^9, 3.7444033007640505`*^9}, {
   3.744403358268156*^9, 3.7444033682684417`*^9}, {3.7444204144078417`*^9, 
   3.7444205655563374`*^9}, {3.7444207194582453`*^9, 
   3.7444207486469946`*^9}, {3.7444207829777308`*^9, 
   3.7444207917912693`*^9}, {3.744420869884759*^9, 3.74442088070385*^9}, {
   3.7444209300240135`*^9, 3.744420930694166*^9}, {3.744421711252468*^9, 
   3.7444217164585667`*^9}, {3.7444669580954065`*^9, 
   3.7444669645427246`*^9}, {3.755504292150902*^9, 3.755504292400214*^9}, {
   3.7555043755753098`*^9, 3.7555043773066816`*^9}, {3.755505148652008*^9, 
   3.7555051766903663`*^9}, {3.7555052917615795`*^9, 3.755505296742588*^9}, {
   3.7555054475547857`*^9, 3.7555054769555545`*^9}, {3.75550552371463*^9, 
   3.755505525151819*^9}, {3.755505615355047*^9, 3.7555056257889996`*^9}, 
   3.7555086697618465`*^9},ExpressionUUID->"b2843131-6f27-492d-a187-\
ef1eed0b3b28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfmajoranamb", "[", 
   RowBox[{"a_", ",", "\[Mu]_", ",", "vz_", ",", "dim_", ",", "index_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testp", ",", "testn", ",", "gamma", ",", "test", ",", "gamma1", ",", 
      "gamma2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"testp", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{
               RowBox[{"Hmb", "[", 
                RowBox[{
                "a", ",", "\[Mu]", ",", ".2", ",", "vz", ",", "5", ",", 
                 "dim"}], "]"}], ",", 
               RowBox[{"-", "10"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Arnoldi\>\"", ",", 
                  RowBox[{
                  "\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], ",", 
                  RowBox[{
                  "\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
                 "}"}]}]}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"test1", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"4", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"test2", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"4", "dim"}], "+", "1"}], ";;", 
          RowBox[{"8", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"gamma11", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma12", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma21", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma22", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
             "gamma11", ",", "gamma12", ",", "gamma21", ",", "gamma22"}], 
             "}"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"dim", "*", 
            RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{
             "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\""}], 
             "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "LightBlue", 
             ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
          ")"}]}]}], "]"}], "*)"}], 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma11", ",", "gamma12"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
L\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma21", ",", "gamma22"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
H\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.731009307860541*^9, 3.7310093144840508`*^9}, {
   3.7310094623189073`*^9, 3.7310095289331765`*^9}, {3.731009593886669*^9, 
   3.731009623916932*^9}, {3.7310097067416854`*^9, 3.7310098660843983`*^9}, {
   3.731009907857611*^9, 3.7310099602847843`*^9}, {3.7310099990949516`*^9, 
   3.7310100376784306`*^9}, 3.731010210638008*^9, {3.731010301243558*^9, 
   3.731010336496057*^9}, {3.731010425731599*^9, 3.731010432611382*^9}, {
   3.731010551442548*^9, 3.731010579833372*^9}, {3.731345428154691*^9, 
   3.7313454460978193`*^9}, {3.7313483897172403`*^9, 3.73134845543322*^9}, {
   3.731354124333572*^9, 3.7313541643886366`*^9}, 3.7313542012939205`*^9, {
   3.731354367711606*^9, 3.731354383631094*^9}, {3.731354488319127*^9, 
   3.731354615788125*^9}, {3.7313546506493425`*^9, 3.731354918408995*^9}, {
   3.731355001090394*^9, 3.7313550111528625`*^9}, {3.731355054505972*^9, 
   3.7313550673588057`*^9}, 3.731355102593439*^9, {3.7313552339224696`*^9, 
   3.73135524239561*^9}, {3.731361070315897*^9, 3.7313610704669523`*^9}, {
   3.7313611011267104`*^9, 3.7313611068777103`*^9}, {3.7313704994653845`*^9, 
   3.731370499624531*^9}, {3.7313725482458*^9, 3.7313725507305136`*^9}, {
   3.7495591924184437`*^9, 3.7495592369939537`*^9}, 3.749673075088195*^9, {
   3.749673133424844*^9, 3.7496731445554543`*^9}, {3.749673225169801*^9, 
   3.7496732252817183`*^9}, {3.749673263874672*^9, 3.749673265786564*^9}, 
   3.749673312467374*^9, {3.750364267378563*^9, 3.750364277474763*^9}, {
   3.7505223451301546`*^9, 3.7505223690384827`*^9}, {3.7505224103108854`*^9, 
   3.750522410966509*^9}, 3.750522495417222*^9, 3.7505997667550497`*^9, {
   3.7507786674780893`*^9, 3.7507787524265356`*^9}, {3.750778792868393*^9, 
   3.75077882179885*^9}, {3.750780747113298*^9, 3.750780779785615*^9}, {
   3.7507996863500943`*^9, 3.750799687036701*^9}, {3.750800157581446*^9, 
   3.7508001800695868`*^9}, 3.750800235684786*^9, {3.7508004339814043`*^9, 
   3.750800439548221*^9}, {3.7508006793980947`*^9, 3.7508006808012733`*^9}, {
   3.7508036242894397`*^9, 3.750803626796007*^9}, {3.750803740104218*^9, 
   3.750803799027543*^9}, 3.7508038769199867`*^9, {3.750803930263486*^9, 
   3.750803937853145*^9}, 3.7508041767715597`*^9, {3.750805401525052*^9, 
   3.750805430625412*^9}, {3.7508054754327917`*^9, 3.7508054889190807`*^9}, {
   3.7508056195474052`*^9, 3.750805621890048*^9}, {3.750811691007468*^9, 
   3.75081170062397*^9}, {3.7508779011247716`*^9, 3.750877906670597*^9}, {
   3.7508779666582336`*^9, 3.750877969661532*^9}, {3.7554902385267477`*^9, 
   3.75549024884232*^9}, {3.7555031425775185`*^9, 3.7555032683725076`*^9}, {
   3.755503318993563*^9, 3.7555033904428706`*^9}, {3.75550348780023*^9, 
   3.755503555060257*^9}, {3.7555036411386633`*^9, 3.7555036744984283`*^9}, {
   3.7555037088210106`*^9, 3.7555037506692777`*^9}, {3.755503787033637*^9, 
   3.755503853185321*^9}, {3.7555038842296286`*^9, 3.755503913052633*^9}, {
   3.7555044649641657`*^9, 3.755504575450695*^9}, {3.755504619844681*^9, 
   3.7555046303816648`*^9}, {3.7555048554353027`*^9, 3.7555049666235313`*^9}},
 CellTags->"\[Gamma]2",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfmajoranambdis", "[", 
   RowBox[{
   "a_", ",", "\[Mu]_", ",", "vz_", ",", "dim_", ",", "vimp_", ",", 
    "index_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testp", ",", "testn", ",", "gamma", ",", "test", ",", "gamma1", ",", 
      "gamma2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"testp", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{
               RowBox[{"Hmbdis", "[", 
                RowBox[{
                "a", ",", "\[Mu]", ",", ".2", ",", "vz", ",", "5", ",", 
                 "vimp", ",", "dim"}], "]"}], ",", 
               RowBox[{"-", "10"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Arnoldi\>\"", ",", 
                  RowBox[{
                  "\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], ",", 
                  RowBox[{
                  "\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
                 "}"}]}]}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"test1", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"4", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"test2", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"4", "dim"}], "+", "1"}], ";;", 
          RowBox[{"8", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"gamma11", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma12", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma21", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma22", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
             "gamma11", ",", "gamma12", ",", "gamma21", ",", "gamma22"}], 
             "}"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"dim", "*", 
            RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{
             "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\""}], 
             "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "LightBlue", 
             ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
          ")"}]}]}], "]"}], "*)"}], 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma11", ",", "gamma12"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
L\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma21", ",", "gamma22"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
H\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.731009307860541*^9, 3.7310093144840508`*^9}, {
   3.7310094623189073`*^9, 3.7310095289331765`*^9}, {3.731009593886669*^9, 
   3.731009623916932*^9}, {3.7310097067416854`*^9, 3.7310098660843983`*^9}, {
   3.731009907857611*^9, 3.7310099602847843`*^9}, {3.7310099990949516`*^9, 
   3.7310100376784306`*^9}, 3.731010210638008*^9, {3.731010301243558*^9, 
   3.731010336496057*^9}, {3.731010425731599*^9, 3.731010432611382*^9}, {
   3.731010551442548*^9, 3.731010579833372*^9}, {3.731345428154691*^9, 
   3.7313454460978193`*^9}, {3.7313483897172403`*^9, 3.73134845543322*^9}, {
   3.731354124333572*^9, 3.7313541643886366`*^9}, 3.7313542012939205`*^9, {
   3.731354367711606*^9, 3.731354383631094*^9}, {3.731354488319127*^9, 
   3.731354615788125*^9}, {3.7313546506493425`*^9, 3.731354918408995*^9}, {
   3.731355001090394*^9, 3.7313550111528625`*^9}, {3.731355054505972*^9, 
   3.7313550673588057`*^9}, 3.731355102593439*^9, {3.7313552339224696`*^9, 
   3.73135524239561*^9}, {3.731361070315897*^9, 3.7313610704669523`*^9}, {
   3.7313611011267104`*^9, 3.7313611068777103`*^9}, {3.7313704994653845`*^9, 
   3.731370499624531*^9}, {3.7313725482458*^9, 3.7313725507305136`*^9}, {
   3.7495591924184437`*^9, 3.7495592369939537`*^9}, 3.749673075088195*^9, {
   3.749673133424844*^9, 3.7496731445554543`*^9}, {3.749673225169801*^9, 
   3.7496732252817183`*^9}, {3.749673263874672*^9, 3.749673265786564*^9}, 
   3.749673312467374*^9, {3.750364267378563*^9, 3.750364277474763*^9}, {
   3.7505223451301546`*^9, 3.7505223690384827`*^9}, {3.7505224103108854`*^9, 
   3.750522410966509*^9}, 3.750522495417222*^9, 3.7505997667550497`*^9, {
   3.7507786674780893`*^9, 3.7507787524265356`*^9}, {3.750778792868393*^9, 
   3.75077882179885*^9}, {3.750780747113298*^9, 3.750780779785615*^9}, {
   3.7507996863500943`*^9, 3.750799687036701*^9}, {3.750800157581446*^9, 
   3.7508001800695868`*^9}, 3.750800235684786*^9, {3.7508004339814043`*^9, 
   3.750800439548221*^9}, {3.7508006793980947`*^9, 3.7508006808012733`*^9}, {
   3.7508036242894397`*^9, 3.750803626796007*^9}, {3.750803740104218*^9, 
   3.750803799027543*^9}, 3.7508038769199867`*^9, {3.750803930263486*^9, 
   3.750803937853145*^9}, 3.7508041767715597`*^9, {3.750805401525052*^9, 
   3.750805430625412*^9}, {3.7508054754327917`*^9, 3.7508054889190807`*^9}, {
   3.7508056195474052`*^9, 3.750805621890048*^9}, {3.750811691007468*^9, 
   3.75081170062397*^9}, {3.7508779011247716`*^9, 3.750877906670597*^9}, {
   3.7508779666582336`*^9, 3.750877969661532*^9}, {3.7554902385267477`*^9, 
   3.75549024884232*^9}, {3.7555031425775185`*^9, 3.7555032683725076`*^9}, {
   3.755503318993563*^9, 3.7555033904428706`*^9}, {3.75550348780023*^9, 
   3.755503555060257*^9}, {3.7555036411386633`*^9, 3.7555036744984283`*^9}, {
   3.7555037088210106`*^9, 3.7555037506692777`*^9}, {3.755503787033637*^9, 
   3.755503853185321*^9}, {3.7555038842296286`*^9, 3.755503913052633*^9}, {
   3.7555044649641657`*^9, 3.755504575450695*^9}, {3.755504619844681*^9, 
   3.7555046303816648`*^9}, {3.7555048554353027`*^9, 
   3.7555049666235313`*^9}, {3.7555054979724455`*^9, 3.755505501236388*^9}, {
   3.755505534789892*^9, 3.755505558009536*^9}},
 CellTags->"\[Gamma]2",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wfmajoranamb", "[", 
  RowBox[{"1", ",", "2", ",", "0.55", ",", "1000", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555035681947775`*^9, 3.755503637234108*^9}, {
  3.755503935835513*^9, 3.7555039576387005`*^9}, {3.7555040032351894`*^9, 
  3.7555040251570263`*^9}, {3.7555040715824814`*^9, 3.75550414315926*^9}, {
  3.7555041770352793`*^9, 3.7555041789940405`*^9}, {3.755504300871888*^9, 
  3.7555043055623484`*^9}, {3.7555043499484262`*^9, 3.755504426537844*^9}, {
  3.75550459042973*^9, 3.7555045905783377`*^9}, {3.755504642385866*^9, 
  3.755504674588169*^9}, {3.7555047359772277`*^9, 3.755504744747207*^9}, {
  3.755504839801261*^9, 3.7555048602543073`*^9}, {3.7555050149067593`*^9, 
  3.7555050151387887`*^9}, {3.7555050457709856`*^9, 3.755505045870902*^9}, {
  3.7555050826382823`*^9, 3.7555050828287582`*^9}, {3.7555100469752274`*^9, 
  3.755510051982093*^9}},ExpressionUUID->"c7af5f6b-8df6-4f4d-b95b-\
d5a155001542"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
N/Lhb/CeX8hr6zMJetQgfvFhZt0lr1DE6QeDuCNPKTJcLw0lmv18zFoiPKRU
6lahWYc4/WEIT7jtSn+/pg8V7+KVZ5gMYZHfzbr5ThOI0y+GsK8xb+WVB9y4
f99Sf0bgEF5fYzrvRDgP6R9DOOPZ9JnLblyYs71DWHSwQHTfoxHE6SfDeLQu
Y+O+sDa06GjgS+a6YTz/8HH7wqlviNNfhvF3+fKN5lo+iH07PsN4yPuxlNKt
QsTpN8PYe6uuycprrcjxlOArrdZhnGUpG2DdMog4/WcEmxeaKNhenUBe51bq
ai8fwQuX8Yt135hCnH40ggW22fkKmE6gRKfTMdoPRnCg7X+vQ+gjiNOfRrCp
6h4tofgBxC7PmhHcUu6rcfNZP+lXo3jP0LJJy8QB1O9GFewo3jZfKv3O9iHE
6V+jeOdjiWsdIUNI5j/RxTo3RnHt1tjvHV0DiNPPRrFc8RY5q9l9aNFD/EGn
ZBTbLt3lPK+lG3H62yj2s2LyhaT1oh3sBxjDs5TQ8XjnIcTpd2O478DBTgPa
JHL0i0jXvTSGP/wJPV7YxkX63xjm0U/u4Ovkxk+eV6+Z/XUM78ptTTx4n4v0
wzHs9+NhqUXiOHobzC5IrNEdEC/qPIA4/XEcF+xdZSuV+Q+VhK/brHdyHBtv
aKigS3UgTr8cx7ir55qGeDcaiLn0TS9jHA+3jTjkWfUjTv8cx+IHro76VQwi
2YQY0znSE7j09BvXh5ZDiNNPJ3BTUYSnjc8gMkiu+8UqMbzaUO1D+r5BxOmv
E3hAMkV/u/kw2pkqu3vuuwkcKTDTbp85TvrtBN4s9SFs7+8ZdC5zU+VcwUns
fy8v84IVN9EPk/iofPyDwMtc+EmOq8W8fZPY4nG8Ya/mOOnHk3ieT/NH2sFe
9LbgTe28mEncd9+2NORvLeL050k8WNHtERpThEp+Nh6ePzWJXzdcfnC3uxZx
+vUUDvLKujB6sA8NlCo2zzebwlVvpnoXWU4hTv+ewl976dsenOfFslVGtguC
p/DsKft18Tr8pJ9P4Tap2efLlvNig7prnQsGpvDpSZ0eZ9oU4vT3afzQ4GHy
W75+tLPp7Sn9DdM4k9nwec7kX8Tp99N4/Cn9jOzyYnSuvbVP328aG9HpKY9C
ShGn/0/jLO7WTxpCjYjqngvbp3HbLxV0W6eHzIMZfGLL+ufb7g6htwNmowtX
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
VWG91Y/0kMAowmNVgfZcBDupxKI3K6gFVQUHs4T1JQ2xhM+qgkDNmj+uP6LR
CDW+MlTBQ0BoW8dIKOG1qrDHueHp9Ru+CK/exBrxqvDUWfHV0PLrhN+qwpE1
G2OeZZ9Fd9kNQhWu6306d0zqMeG5qiB79W6/tX0E+slSz/8mVeE5v+7t2cuT
Cd9VgwHeMsuA5EykSLUHaTX4UZ+zQAblEN6rBlw2Wa8Vr+ahg+yBpwYPO7iO
B5TlEv6rBuqldbSg419QBHWcV6jBIatrGq810ggPVoNl9z6e0j4dj3rWyxt1
mapB61lht7U6zwkfVoOqlgRX3w3/oaVsAacGLhncyRe9AwgvVoMu4eWtzj6J
6NqmN+5dl9TAZB4zQvV7FuHHauDvdEGjdcEPlEf9ubsaJM88/7bldinhyWrQ
IugccuVQJZJkGxI1eH7/XKx/zG/Cl9XgyIN3/6zUKpG5EaWA1GCtpZOk885S
wpvVIKj9hFHO/Z8okKU+u7+qQa+W5N2lL/IJf1YDHf1bl17T8lArhVNr1UCo
1Hq1ROB3wqPVIGn3t3eiiqVogdmV7d39alDDn2zlvrma8Gk18Ozf+2H6Rz26
tI1STOqw5N5K2gqnBsKr1eHR8d0L6NN/UcZ2Chipw5wdXXm+Vf//fIg6JDcv
u5bNX4EE2cBXHYxWy9DnlhQSnq0O/4xzZXbuzEJmuxJKu9erw8qMvS6x5zII
31aHC4a6Xyr685DfbkphqcN9rlNre+XKCO9Wh6+G4qUfM+tR3R5qgVi/57Yq
jNnfSvi3Ovz23/FpUd8/pLNXaelpN3XQ89AdmJ7VS3i4OrS+OhCta9GLTrPU
W4+vOtj/7GtR1OgmfFwd+noNj1cYtqP3+6mCV4e4lQYXuNc1El6uDoIXL7Un
JFSjGYtrT3sy1OHEOq/nahmlhJ+rQ5XFi+xI8xK06YAxS7KqQwSzIjb5VAXh
6erA82t286bVdegRe4CpQ7t9/PH4jkbC19WhIz3kqrt0K6o4SCk4dQhUHey3
4m4jvF0DrO8s7H3l1oI4uEsDas73fawzaiT8XQPcny4Pq71ch2zYgkwDTCcd
7HK+VREerwFmSguXvCqpQmw8s0IDdvxewDWtXU/4vAY8fbT58HXRZkTR2DNm
GlBncWr/il8dhNdrQPkv+enNNT2IjROsNaCCdrli26E+wu9ZP/eNpAWY9iGW
+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
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwc4le8bx63M7L2OM+y2tup57pZ2NBXSVqHSIPkV0tCQpIw0bJGSVRLZ
MqKEUJlly977f95znr+r6+pyOec973me577v7/fzPYdx5OzO43w8PDyt/Dw8
1P///+ktu5d/6KYA5tvIW0x3vYGFvsS35K5mkd8f495i5ZxjtxZi/n/XFi7I
eIGndPpj7fgR+XsYVtXf8y3g8FrMF7CaRy8oCut+HleMallPHh+Dm+68bzow
sR7zaRxOUOuJw0q0uherHq8lz0/EIUJWK1Rd2dc7F9ysKZWEBw4LRBfPWUSu
l4x5JMsW95ZoYf7sBuU581PxyCL5nleRcuT6aTjPBT+/4iWN3UQfRqhEZmD1
gs2Cun108nqZ+OS36R2f7edhN/ajacuycfVCd3Ha5aXk9XPwVOShO/L9K7Gb
xfefzPxcTJfWa76+6//3k4ebI5lbXu5egd1unuvX3peP98+1b/2wbTG5vwL8
687ILHHjOfh6jLT4rNZC/Ji368dAI4vcbxGeR1vnUzvAwNcr47TnORZj8W1z
g+Isdcn9f8WmrPU2u7wN8Br21ZQFSvBPxfDPxXRD8n5K8LVAw3eH1gPOkht9
rbr1OzbXNFnTNbSavL/veJhVbej7ejVeo1eQrP64FFtHhxa1jyLyfsvwifFl
EWv7l+KsVU8+a1SXYcsLtP37huaR91+Omy7fO9qRzsBrdp4qY2j+wHXGOx0n
LKTIevzAbSt35NJt+HGW1fJ6lm0FzunqMzKTliTrU4kFVjdvm/pJw2v+E+nU
SqzEC2Cf5ultemS9qrBNR4O5zLoFOOvBz1GdiSqMKo2aA0z/v78/8djC+Qtt
Fy7Ga8OiBPXX/cKuxZ93KP9aSNbzF1b3TxQ0756Psz9clp3t8Run0lbBpi59
sr7V2Fx5VumTfk28tngTfW55NZ7t1XHrkvn/17sGHxyqSPx6m445D1erxcUH
uluOlDPI+tfiX9es9la0sfDaobblBsfqcOVn7WAvUy2yH/U41cjDZ5WSFj4y
4wBLZW89tv5EN0JNTLI/9Xj9p3XXJC7RcIhkrp7qWD1WkKvO7VmiQParAW/K
f6pZe18C/6Fe/kUDti19+3BmoiDZvwbcebT+IN1AEDM1fZaor/mDg47rBXuI
zyT7+Qen2GkMSmbJ4CNzJ1fSmv/gmJ8LslbcVCT7+xdLRulqRyeq4JBlx9dq
3P2La24+NW3foUr2+y82uCaSoLlYGf9ZQy1QI/7w+g09nFee7H8jdilN33U9
VRIzty02YZQ24mTDj1eiFAXJeWjCYitNHzwbmkRHTJ/vZTo0YXTtxZeEfUOI
ez6asKHrls7qCwMo5DC1QM04ZI7F3KDEQcQ9L814Yob8j2ClYfTH5vRRzbRm
/K9z/peys0OIe35acLLxz5etKv2I6fDjlNaRFnxC0dXvnvg/xD1PLXjTWr8V
dyYa0BHXVXbagq14vGnznOHiCsQ9X624uerye7+aMhRyN9xB51Ur7h44Mj1S
9BNxz1srLn/z83rKnwb057H4Vd3tbZhHbc/zldNNiHv+2nD9/uc19fotiBVo
f12vrw0XDnrFX21rRNzz2I5FBop8Du+sR0ejau7o+7ZjNc+MC96NFYh7Pttx
zVvraKHfJSg0Yb3XLMMO/Hov88NHx++Ie1478J7W5W5HT/1Efz+98Z1d24HL
V+2fvdDmL+Ke33/Y95S04ZymdsTKl38+x+0fHtm2pPzr5h7EPc//8ELBVyeq
JXvR0dKroXO1O3FmZMODI6u7EPd8d+LRMz/K/nvehEKrm6LmFXbiYWGjbuHJ
H4h73rvw5uSb2zVq36G/zdti55/pwiM73v/kKw9F3PPfhXdbe9dkaJYiVu+7
9wtkunHGtaJHMafbELceurGUhlvrtq4hdHRc/ZPB+2586NgrJ9r3acStjx5s
YqSps0CRD5fyUa/Yg5nGrreXGvKSeunBEndP7FntN476hIaPqbj0YCXZZwEe
XX2IWz89eMe9d7+HJ9qQDHs1Vb734ITEcK0ZqANx66kHB2rv0j6ycQgZyBy0
UWX1YsNrBaZRIXykvnpxxukayQF5MbxT8VGXqn0vVtGdOWVTLUXqrRcP71kl
XaEug8+r5Z1Ty+vF904t7s39KkXqrxdvejLJ99tdFHszxgfUlPvwwj7H5Esy
vKQe+3BXq0FQg1YPimevtrpNH763LUlfZuQ74tZnH9bWcDodX/MZlc6iVqgP
L58Su1/9shVx67UP38FnbKNXT6O++X7ONMl+/ERiXuSFBjFSv/34a0/DnjAd
OSyz5AuvxuF+rN+vdWZYSZnUcz+WfFakqvJSFRusmL6hkdCP199kqdsv/399
9+Ow2erdWzoV8U5YKEyfMYB5xLbsf/ZChtT7AF7Sv7Kyx0EEn19/4h7ddAAf
ySlNX+k5jbj1P4DnLbVX+Bs9iLw3P5VgRA3gi+YvDTJDhxG3Hwzgwlc1BkUT
vDje+NtD9hJhm0+7UgLqRUl/GMSNKx+uDvOWxqW7+eWZ2wZxxa9zhUr1spjb
LwbxcZ7pbz03ZXHf/qX+zMBBnDl2xfRuzP/nyyAeTDAxXlItjLnbO4gf5YSF
Crzjwdx+MoQjSiL1d9YNI4NjgS9Ya4fwokXnd7/PGyH9ZQhraRzq0dPiw5zb
8RnC5svWfF3pLYa5/WYIv9TepRo4wt7/M0Lhmi1D2OXO4c6D+opkfg3jINM9
Sw1WKGPvCyt0tZYP44pO03mOoUqY24+GsYl6pcLwPXkc73g2WuveMH7olhwb
mCBF5t0w3jesmnfCRhBzyrNmGJ/8YtWhJTpK+tUIXn76c4lMeTPqc6MKdgTr
7Fpx4fmZn6R/jWDdqVutJdsakcxtscU610awkZjmhyWdA6SfjeDm0p4T1715
scF9/EGnbARLmJ5YpL1emMzTEfzoNF6UGTET7+S8gVG8/cCakUs+4pjb70ax
XRuzvFlQDJ/3e5mme2kUL4/z6s/hESTzdxQX2LrVjy7lwY+e/V6tVzCKGzdW
ju1g1zu3H47ipCtSuyaF+lBCMKcg8Ya2YW95hz7SH8fwjqQ5kl+EhlFZxNqN
+qfH8OfDeOLWsknSL8ewdJTmz3RFXtwffemLfvoYVij88V6vgZfM9zF8zOnK
kz+ePFg2Lnr7LOlxTKuguVs3jpF+Oo5Tz9MbbIr60ML3dd/ZJYYnnh49n9nY
RPrrOJ57brehc2A52pUiu2f2u3G8bv+j/uaUbNJvx7GS/tTstII8dCFjQ9Vs
oQm8QmrJkG1+Jem/E9igY1tgyKZG9Cj3P/M5+ycw6vj4YIPVP9KPJ3C9Q3GR
3FAPSih8WzsnegLvrbPQoqf2kv48gTeHPmrOP96Dyr79PTx3cgI/WtmOxlLb
Sb+exO3K5biy7Q/qL1dsmms8iaVHvg5dtqsg/XsSFy/deqZzVi6S/bXl5Lzg
SWwnp3hW0zWW9PNJPPXg0tfzZZFoYZ1Lx7z+SfzywLDtwdok0t+ncOL6vSq6
fjloV2PCmfnrp7Dxtjhe76tfSL+fwnf2RlzdHFeMLrS19M73m8LNRU4RGnGF
pP9PYa/5BYs/S+cgqnsuaJvC2lbhs2QLP5B5MI31bWffGq55iRL6jUcWrJjG
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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw1mwk0Vd0bxs3zPM/uEEVSSZJq7zekviZJg2ieQxKFkkKaDGkgosyJpIgo
lSRJhopQUUhChpJ59j/n3v1vfWt9y7r3nnP29L7P83vuZe4+sn4fHw8PTzs/
Dw/9////sxd4/KG2QBjzreCtYPgG4CtSl2+Gn9Ihf4dhpYPSNV+8jTF/l9+8
uQUxOHDnKvfBnsXk9SQ8valp2cIWwHxRS3n04lLxLuQ9S0N/KXn/A4zj/Eo3
u2DMp70rS6MnE7/45+B1KsuMfD4bzxUf2fPw9nzMdzS+dZpMLj7C29FvIDCX
XO8plv7ducXykD7mf/1Dddac51hnR/sjh8Zp5Pr5eHut6IaKBBb2F7uarJZS
gC/0FAbO8dUh93uFM95Evruaaoj9qXdrmb7G9t+FP0beNCH3L8Kbhou6ftxH
2H9r5VdWyRtsNK/29enN5uR53mJdCfcXhYPm2P/c0T5duxL8RXXJ5Wfx/x/v
O5wk7LKotnsBPvtAVnJmeynu3F/wjefa/5+3HMvLMuR86hTx2c+ZurO9KrCm
mm1JwAwJ8vzvcelIYE0LLwObU1dTFfiIi/tmD+g9nEPG8xFbu3lZ/o5aiAsV
Ru6rr67EG9YzN13uR2R8lTjsZaB3VSXC5nrvnmqGVeGByPJdnT0LyXg/4WlO
/NOYuvNw4ZKbxdrfPmFBb5BViJ5Jxl+Nr9k5LppnNAObrz/0iTmtBrspx3rX
mBiQ+ajBdq8PFybwGOHC/Qub2M61+K2YaNNu+P96fcalKV42inIm2NxbtFsn
+zN+4tcU07TBmMzXF7ztyv2Qcx5zcWHo15Hp419wZu3ZeajPkMzfVxyferCk
5PBsbJGUKqRvWYd3j5lWjcgZkfmsw0+OL1R7pjQfv35yQt4guB5rCW23HKk0
IfP7Dd/pXGp1eHI+tqj4j2FY/Q0fzGqtfvHUiMz3dxya6stf2WiAOW/XaMCJ
qd8vCMvrkvlvwBVpT92X5bKxxeDvhUZ7G7H9u2rRvE4dsh5N2KCp0kt4hz7e
LbiNrbapCe/xXvif/LtZZH2a8Oj1489EG2bhBOk3euqjTVj6xtOSrRH6ZL1+
YHuFP5/z1XRxM337mB94QL87TMCOTdbvB9Zamrvdf940zJoWbqJp3oxr/x35
vG/dDLKezbj/zOtfqw1n4d2GE4u1WpvxULdRR9yl2WR9f+JbH0QUMhZQ9zfd
Z6Ed+BM7C/6oLnTXJev9E5su+2Ty6q06bjanJ6gFF7b4JGgtkyTr34LT16rM
LZYUxqw189cxq1pw3rJbWXrD8mQ//MKKM0JTtqqw8O7NtzexPH7hAEfbQ1o+
+mR//MIF7TfvWgXOxgm76AlqxSfCs4fdTGaT/dKKzzNE2nw/6uFmp8N7puW3
YoXax3Iy8Uyyf9qw3yKDF81H5THLo+aQzu423PtpXMNgEx/ZT214y5KlK9z5
R9Fu3yWuukLtOLh5+Y20VgGyv9rx5lUJBzxV5HBC4B2P6ffaccHucWo21Mh+
a8ezinqF/GwZuDlM0mfG2t/4xdywNvuZLLL/fuM/5jOKAqNYmB17/Kxe72/8
bEpKvugxk+zHDmywZcVnS2VtvCf1+yX9Gx1YN6K3MN1DhezPDvxAVbHXb5MM
TsxadmWmWSeWfaafsTKKh+zXTvzkXuk0qXM/0c8X6TcMGjqxEL/+9sLPrxB3
/3bhVRnGk59WdiB2ieLtWf5d+EZ0zCtNY36yn7vwr8O2c6plZfGeKp9EQ91u
HGj3zcforRLZ3924WlKvreCCCk789it1dmk3LvDNZGu8UCT7/Q/+rX0q1s9U
Gv9sXZMxx+UPtvQSiXRk8pL9/werP1jJszjwN2L/e5wzV+4vrjEwvOL/5BPi
noe/eMsfsTotxXa0Z0zzhVHOX1wwcPD2hsEJxD0fPfjY5UzFojRRXMVH37EH
B+jss1w3Q5aclx78om6XyB4dedwrPLRX7UwPRvO9q37ukCPnpwc7v0pvZl2U
wnLUbKpV9mDGGZl3MncEyXnqwQox0RMG0iPISG6Hkzr7H37wNPjKzku/EPd8
/cP3d3mkx1qXovXK1/+oH/+H1xmmJhX0lyLuefuHq4Y/nSlS/4ncNN4e1Xj7
D199o5y1+WEv4p6/fzi6ouOeas8ousYc69dQ7cUaCrLZNawpxD2PvfjO9v1u
n5sn0CNqtjWdenFleO1FDdlhxD2fvfi4qJDtdKceVDWTnqFebHrxpSwzvwVx
z2svVjysHSi08AfqnRNxWku6D/923/LeU6gdcc9vH06tOrRgfGcfkjMp49Xe
1YcV9DYEOIqPI+557sOCp2dvzT/Ni40WTQVoZ/XhJ25TfbuG+cj57sOb3Ge7
6vLx4fUwT4Qh2I8rZczaBComEPe89+O3Y5L7swf6kduyA0GMzf3Y5v30uyzH
NsQ9//046PuM408XVqJrK6OlmKn9+Kf37Lyx7iTErQf9OLQlKV5dLx89sv5w
lZoiPGxsfkirvRFx68MAPjjjltchn3+oagO/ImvNAD6U4/ZkfuYY4taLATya
NCu0LoYX925ZEMmKHcBm101sWWl8pH4MYIUbnzaWevBg7vIO4OtjVgsO7BhC
3HoyiNeG8267sqgdGe2NjWFbDGJ0CNQWipchbn0ZxH8vXToZUx2JOI8TPoij
TPjq/979gLj1ZhA7eZvsq7RvR24uwnemtQ3izIfxs8K2DSBu/RnCLqreYUa1
Y+ia+6IZOguHcHGh05WayAnErUdDeJr5tuoRlTH0yOtImk7QEB4Zt2AaZA0i
bn0awqFhC/eUzutDnOP5fQjnDPL0WSzvJfVqGAvzJCb7PepDvf70gR3G1Sa2
/o1PBhC3fg1j0bYP69X3DiK5i+Lzp/sNY2sNu/s+Tf2IW8+GcXLAwK485V5k
FIKfTP80jOct2pPvObMHcevbMN5yLBh1av1D6zkDGMHTT6pJWJ8eQNx6N4Lz
+d/XBn4eQ24Rd/NneI5g9lXzK5MPeEj9G8Gayiom5zN58fVb9Uv13o3gJkUF
6YH9PKQejuAQB4FBZt4oyornHEi8SvW36dWmPsStj6N4o/iL2q9L/6BPyRYr
9A+P4idmCjLKgl2IWy9HsR02lLUR6kF9aZ5l+i9H8YYV/I8vTe9D3Po5itXv
2K2QWzCA5DPT1s6UHcMHd8i9X794AHHr6Rie7ixhd1+wH83Laaykjhi+Uro1
+FZoH+LW1zH8U0pDIOj2ALJ9Jr/R4PEYfqY523nJjlFSb8dw1Xj1uf6JKeRe
sPyLgfA4jp5+9sNgNi/RD+O4OXttuQA/Nf433g6ztozj05+/2sssHyP1eBxv
axk5KrTpH8oqfdgwK20cCzOfXOq+3IS49Xkc/7n9rfDBwEf06cPPXYYT41ho
whtpB39H3Ho9gRVN3SJKS6nxVyv/MrSewKuTdHu834wjbv2ewOFn1tWutODH
8nWrDs6On8B7q2L4B5iCpJ5PYMagiM2Svfx4XuOZztl9E9jDVMXY980E4tb3
SSzx0iDcuLYX2bZkucxZNolNVra1yURT/YZT7yext/yWAz8eVSP3323/5kRM
4tq5PPGDRTWIW/8n8flvA2flSpsRXT3n/p7Ekz+CjYqn/yH9YAqzynz8Kt70
o6w+6+G5i6awRoV/9d1TI6Q/TGE/kzf8bTXj6NPwWW+jkCk8+n2yruXGJOkX
U9hWenO92qZJ1DeRO2nUOIWH59u4zrgyRvoHD5xfxbxczBhEgbyDBTdVeMBK
aCM+FNqNuP2EB65e2tRYO/s7UhO4Qm9Z+Cm2K6lfuQBx+wsPzLILt+fvTkP3
qN0Y5cgDUzsrB0s7KxG331DX6wphPDFvQ2aiReeirvNAlemckqG7fYjbf3hg
xZM1LUc9R1Cp+Pa3Uc95wCLezMy4chRx+xEPJDzqx8JmQ8healgk+hcPoGiN
hk/aPYjbn3hg3uqsjhU7m1CHDF1BeeG74Am5ybRXpF/xQvD2vZfjPyxDJ6nd
Gr2AF8LWzu3bIJBP+hcvSCRcLNoTV4fElIoronfygsjZoTTdT+2kn/GC1oO+
zQUL/6EolZ3Sty7xwqypjo+dVX2kv/HCX7mzYwEf+5C++ui6W4+o+zu+bpIO
+Uf6HS/EZnfmr4jtRHmaYddu1fNCo9CucrmRZtL/eMFHMXVcLKIGraR28y0B
PvDqE9jC9+4V6Yd84Lfw1G7tR7dRHYs+EHyw/0XD8sn0CNIf+aD/ZOCGVscX
yFGHrvh8wLPr1tVDrpWkX/JBq6tJrdKub2h0+njk7TN88NzG7a2hWTPpn3yw
TujfWQHXnyhQ/0bd7RQ+cM07893O5Qfpp3wgeTj5b9/IV6RGD7eSD7IXt/V7
jL0n/ZUPPA6s1hvFz9G92aXbYkb5wJT3y/36jfdIv+WHN6p574cXZyEzTgPh
h1NGoX5szyLSf/khZEnFC50/H1Gp8WRTzGp+cF37tUDEoJb0Y37wzJj+fZT5
BdnT7es4P5wRLTsVuaOW9Gd+8DkUkDjvSSXqWEjfgB/kMhINmo+9Rdx+zQ8n
lCrT/Rc8QScXl9+JfcsPuYKPjgp5xCJu/+aH5Afm1hZD25AY3t8W28MPcUeK
h+e980Xcfi4AjW6BZe8O3kGccq0qAIue1rucL8wh/V0AlDNv71OSeIXo3R9n
Tr2/V9qpjRoft98LQNQasdZyvyKUZ2V8P85JAPjWNq1HBq9I/xeAFj9n6+HV
uWjlf++748IE4GCM4gw/r7tEDwiAbF3rK8GKIMQpTy8EQKDMJDL44iGiDwRA
8fN/S8s0Q5DjWrqjCkCYV7zi+tJEohcEAG5NP9d6OwPRuzNeWhCUN8Q52x55
TPSDIMQdverb6JaLAm1N+uNNBeGuc6BrwexcoicEYbysX9j1/WOktunjfEoT
wLCf+fA6nWyiLwShavJ4grH5I3TPztEzIVAQeObnpaUdeIi4ekMQDG+ZurOj
U5CZg8DThCxBKMsoa4y+Go+4+kMQPBYcs7r/NwrRuyfhmyBIx7P3LFoei7h6
RBACKsZs5h5MRfY7TRcnCgpB+HMH2TCHbKJPhMBY87WZ3YrnqGM3XfCF4Pe6
OKHQ8gKiV4RgjnXB+wSTV+jkPueXiZuFYGaKyA77knyiX4RAZmXBZOOxJ0js
oBBvkq8QONt8HVg4kUn0jBBItHTeSH52D9GrS7Vc6OfJ4m85lkz0jRCcO3bs
xybpZKR/2CwgqUoI5n+YXqr59y7RO0IQ6r/u9PjvNJR3pPpN0pgQXHoad2iw
I5PoH2Gq3h214BF/ilZyPiAMC+waVaeevyJ6SBjUpXaWSN55i+qOifx3Z40w
ZOe7QeaacqKPhKGjyHl12uUKRM/+HQ9hOC36yzFjRinRS8KQ3r5bWzi9EI2e
oA+AMEQf2ftOa0EW0U/C0M361iZnEoYCT9VKJpcIQ7vCzQV3TNyInhKGi59D
lV/1JiK1M67Wyf+EIUHBq3tl33Oir0RgnpC4276kd+ieH13QRQAnW406zq8k
eksE7kenJpd9r0L07CRbiEDJoUfmz7dUEv0lApZG9z0vvStFpeeRwl1nERAL
eTC5daKA6DERaB1d6rxXKBPZX/qy8W64CNw+kVK0tvAW0WcikONkxIKfEagj
iFZYIpDUrfm85UYK0WsioNFUdnB+YS46eVni6902Edifq9y/4nch0W8i8NGl
SjyUXYo47UhGFCxGLvSNw0ei50Th0DPH50MHq1DUddiaslAUXPbPuCzXWkX0
nSjwnLD93GFRiTjlc7coJHyPflrMKCN6TxSGmypq5+i8QnmRxxpTgkTB8WVs
nldsOuLqP1Eoswr+fumHH1pFH/dsUQg5a39UWMQdcfWgKPS2LtdanJ6C6qmr
p34XBe9Fq1UanrxEXH0oCo8+HSnQFi9FTpztKQaV85TuDRz+SPSiGBQb68Qn
Nn9EYwm0oBGDlm0G63qCy4l+FIO42RpNrBWvURA9nXZikNL0aNWzykdET4rB
/GGjMcmz15B6iswhao2hys9Ipf2pGdGXYrD/oLGExtIbKO0e/U8MfHWG+a/z
PyJ6Uwx0I00WZB8oQIvSLbvufaLuv9EsWaG4mOhPMeg3eXWE8aAUlXHknRi4
GSUaecWXET0qDjVJOopq9e+QA2dDi8PaqYcz04feEH0qDpFBHQ+WPi1Andly
1CfEYVOP3frsvsdEr4qDm/LOs7PeJyPv3Pu9aZ7ikGxtVL55ZijRr+Lw7Hza
gNp0dyTOKdDioPVoZlGv3BWiZ8WByevyULYtGUU/bzp+/504xFzp6ssazCb6
Vhx+PnU+O3vaCzTz5UnqDuJwYvvnc3O9CojelaD66T//ltZ89OwVLTgkINjH
P+9XcS7hDxJQH3BQwvTAfbSq6IFZuqUEdCUYCR3cdwNx9bAEZGWM8+irHEL1
xStOpR+WABM9SxFdycNEH0uA3X7JyaqsMOT0rpl6IglQ+T12PqYkmehl6nWF
McH7UxlorOzUVPpLCUgYEa74oZJN9LMEOB6/uiZHIBsFvVda+qBdAr7tS3Qa
+i+T6GkJWK7cvGaZ1T2kXpnhTy0ZKCd+67r6LJ7oa0mwdgn61H8zHKV9WkmN
QBJO2Dq8VDC4RPS2JGBd/7oH3b5oUW2L4MM9kmDuEXRtu4Qf0d+SYNmgtzX8
/gVU9uX08ofBklAwYRK1aM1VxNXjkqCTdDpP0y0COdSrXHr4WBKkeJX2Szre
Qlx9Lgl/So5emNgTgzq/P6JGLAkXRXuzZ9ncQly9Tl0/yMD126kbyLtptUSG
sBTg+idxtw1CiH6Xgnmfm/Bv41NInCPYpWBp1T/jdPOdRM9LgXf/jzVdpzGK
/uUbmrFFCmrcrX5tPbKd6Hsp6BjkP7E2xw3RajXDXwrQ88d5Q2tOEb0vBWlS
8w42q/iiZx30BpWCJ42vBsJdTxP9LwXFrWtq39icRKu6127IrJaC9Nf+2SWP
PIkfkILxs5ZFd7y9UP3f9vDMCSmwPju3vjvGm/gDaWjUt763VPI0cuIUXGk4
uddG3efzKeIXpEGmCUd0ankiWk0+spaGextyzxQfOEz8gzQ4+kTMtA3eioKG
cuwfeUnDvCZm1rfmtcRPSMNK/8Tfh3XskTpXQMC/ct3XjlXOxF9Iw4a4p8+N
vnihtPEOagWo9y/9+2O+hR/xG9LQ5f9ojoltAOLiE2lYX7KneGVFAPEfMqBr
ksP3NcQftXKmVwbOGwixUpiniB+RATse77OFFa7IkCMYZODpYAHaaLiF+BMZ
2Bfe4HzcUhl5UNVwywIZ0EwYzW9PMCd+RQbuhewuc7J0QvkBg3J1q2Qg6kSZ
P88aX+JfZCBGu/1Km1YQEjr/ep79ThmoEWLYbGq5SvyMDCxIXyScGnwdrb1w
ZUPdMer14boVjWVXib+hXk9tqbDdFohuXNx23P6SDBhLSOrZvvEhfkcGlq3e
tvdv137UcInuEDLQyxvL8FbbRPyPDMxyP6+QYeKCdDkLIANC6va4+LU/8UMy
UOo0ulVy6xXkElz0ua5YBqxcPcXXuNwg/kgGvKttn+Xm3kQ5IVeH7etloLN+
xWb+TTeJX5IB1u/6oyKh4Wjy8nbV+r8ysNfA2ElWJ5T4JxkY13snHCPqj6yo
auogIAvXzttWd6xzJn5KFu5eDNIX612MLtOXV5EFH7upr0m9S4m/koV253Xb
UxiuqPYaXbBkoeO00uG3kQHEb8nCC49F1vxi15AWbX+WykLvTFmWt91N4r9k
4ZHQmtD5M2LQ/vAdLxw2ycKT6O1609tjiB+ThWSNT3vP6EWjB1S1rXeUBTeD
sMnxvuvEn8nC7XPrNwsyL6DBiJFJhzOy4Jhaq7SB6U78mixUlPJkZD7bhhAt
96/LghUzR9jlnzPxb7KQPpt3eMcSf3Se0+BloUaiZaGGyBXi52TBUmro5tFr
4eh99M5d357LQlTd5ri9tyKIv5MF67kvKg8fC0dKVDXeWikLx5RX6bryXiF+
TxZWvnPXbKb293Za3v6SBQ3+JJmDK5yJ/5OF7yrlojeuLkHJsW9fbx2VhRgz
5U9ygcuIH5SDF/Hf5s3OO4z+xIW1fJOSg3m7DrHmN/oSfygHjkZ2kzf/BSIT
jiCWg22z/uuZk3yV+EU52PPNoGNMPwydpuXcAjkwM302f31sGPGPcmBY/N6W
Z+gaKk4as9q2Wg4u76iuWDx1mfhJOdC/2N5t/e4ckkouOfB9pxxcOzJkPHHF
i/hLOZgenDkVMrwbbbobTp0AOZALMHrtvQ+I35SDOLM+U8Mfa1AMLV8uyQHf
Nq/V5+oPEf8pB6P8D07qWZ1Aram0gZSDg0sK8b54P+JHqb/768peLzqLDDkF
Ro7yi6W9K576En8qBzGXL36cuc0DeVDNeftbOWh4+su6hm8v8atycCtqJKBK
1Qzl0+26nnrdI9j3s8o04l/lwC14gcwmy61I6OGeNdt75CDid6zc7rKjxM9S
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
Ohtzf20+DXZvvheS800A/w96wRKD
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
tC7mfdtcB+Dj4w/VeaL4f9xyJog=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1: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
wp85sj5FfkX/A5CIL6U=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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

             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1:eJw1Wwc4ld8fv/ea2eva4w6lqdKg4pxvKor2Ii0qaQqJhkK/lpL20BJRaQ+l
JUoZJREhlL3nNa7N/33ve/49PU/Pfe543/ec8/18P+Mbf8Oupe4cFotVK8Vi
0f/+/49Pz8eFY+OrEWcu+wcv6AjWfCLlYeUijZnXF7G9utHon3KaWKoxeNLE
pFs4J6/klUW/Hnk/GjvdzNeEGEPMuTaTNep2LD47ZlO4zRF98vkn2DkmW35m
hxbmmLi9NGx9jv23Pb269oES+X4czp1WOfNhCRtzvCOrTdXi8Q2ZBdoTwroR
83tvsbWd4eWhN91IKrlMb9yED3hlk+8BiwEW+f2P2MG7P9zIWx4fVjh3V/9+
En4kXh1wMkyNXO8TNlg0VJCbqoUPU582tkrGgSqft6/U1iXX/4JPmt/VFxzT
w4fXZP8RpH3Fr/ZGvW231iX3k4pdJ368ntmviQ8f9W4f4ZyGv+Xzvp6YpEie
Nx1f91sXUcnpR/89UVceU/sNy8unRWV2VZL7zcCxv42CpyWWo//yn48Yv/cH
PrjGX8nYqBcx95+JeUutrVNtFLEt9Wt60lm4cJFxasBDLfI8Wdj+wOWV2ld0
8WetnkcG87Pxj0+LfOsu6pDny8ZO+zV3JnE0sO2o9LdGF39h7dYVnlkXpMnz
5mAl6ylBYN+MPtuEp5gU5+Cm2+s+zkvIJfudi99WPlN+cLwZ2S7dmsM3/Y1t
ro5x6KT2n1mP31hTmq03+oU6/rx5WqlwRx7W83c/qemtQ9YnHx87ZsUXHtLD
tgeGNQ2Py8cV/ocDVlzWIetVgLeU/vI/16GBP5/502PWX4DPm83/oKH5//X7
g+fvOZNxV8DBs6JjZUfPLsRTk3cWO3X0kPUsxKo6pfM2nutCyW/2aY4NLcL+
k51GhO/pI+tbjEeywr7P/MXGs37M45nnFuPjnB3J0QvkMLPef7HdottwxV8Z
Sz5u+A/rGpyTNghXJ+fnHy46sbporLsmniWum2axqQRvj7GINZ+qSfajFIdZ
6TedOK2GN8isFeqvLMUGhnIGBtfkyP6U4lSPyLMVdj0oSvXrKIPeUiz72GxH
76JSxOxXGY7iGwb7KHxF5fTlb5XhBGXvh6POU/Um2b8yHBi7oLihdhAJTC9N
NbItx4PR/o/DviiQ/SzHNsLunxne6niD+YC1cXU5bttsFb9ohgbZ3wr8NSpo
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
bh7z4FCFhuu4YYUkD+KB1/Oe6tXX/6K9FNvcH0+dh93ZMdOSi0g+xANnRcMs
qM5FhvPP/Xz3iQe5KQlPlhxJJXkRD0KNBpRsVJ6jJNo+/c4DUaij/cPXN0l+
xAPeZn9r+VFv0CYaXvN4oD+qK0948CfJk3hwsXpd0z/qevISA5QHdiMcjqtL
V5B8iQeXVm8UmVyoQo8W0gSZB9IfM9zF6ZUkb+JBRsFr80jpMrRYMr7Mg63f
PrlEcvNJ/sSDcNnlKc+XpKEOyXgj9ft/lp6MbHmOmDyKD6EBBtN1IyPR1ax1
FIPig5PG2mGC5/Fk3o8PJhu2PZC2+4Gsl3xd+l6TD9Ly1a6n+/4gJq/iwzaN
Ez5z3MpRKW2PGfFBIbps056CKjIfyIfm2sLrSeOq0RGJoOSDw5LFhxKUKxCT
Z/HB+M0kq39XCtFICeDwQf/axbLzo76TeUI+JInqWgTyT1HGsvUX31vz4cOi
lB/+X8MRk3fxgc1j2SnVJyEv2g6y48PIXn/nkLt5ZP6QT+lbA2t0vwJpUWx2
xhI+vPkT2WKpV4+YPIwPRmVzpg7oNqI3v+kb4kNK3QmzCT9rybwiH44+rPm1
42IZWiMxYPjw2eb+LnfFHMTkZXyIsTb2tLL7hFiSBs2Hv0veJHxo/kzmG/lg
qxE7lNOUh6Kd6ALjg2Hhf723s6pJnsaHovnsnbfvitBciu0GHOHD7S3+Fz77
i0m+xod0tWdDG5Z0o0bnCzofwviw5LRihiBCTPI2PohidWo21YjQWVruX+XD
feshsyjTGpK/8eHOi0tbyn/8RpMlhiUf4rlfHn+wiSN5HB8WnJk/SX9HCCoo
pAktH+Qco7Ys4P5/3pIPSjOdkpaOLkUBFBv+EM+HyfZ3HA+ENpO8jg+752fb
/PQSIx4tbz/xwe+vf47m2z6S3/HBCmVNtng8gL7Q8JZB7aem2mzHhD6S5/FB
5Y+NSmugGG3563oyII8P66uN1ppNayH5Hh8OjZ9f+OV2OVKSGPx8CNh+YuKW
p3kk7+ODtae37LGp+egZLefq+dBtV73cuKCczH/yIYIn96TxRxNaTh+fTj6c
Nov341W1IyYP5MOXCLflfrPEqJuq3oAhPqwR/Ig70dFB5kUF0LucvV7o04pu
0I87TAA3pOxL3XlViMkLBVDYoHlOXS0fAS1fNAWww+yIUturLDJfKgDHgX1T
nhkUoUo32mETgI3OGesmbj1i8kQBNGeOv2o4phOdkBgmAhjVdFtX9LqfzKMK
oNx0zopfr1l4rKShCiBhsU3kpC4WyRsFEHpUd46h1iDKoum6tQCmXnPoeNgk
JvOrAmhrd7+gk9aIfDelIRt7AWwN2r/uZGIhYvJIAdjaikteTv6AdCm2fXCJ
AJZdLS514MSSeVfq+x0LH9d7Z6IPdPy0WgD/9ZnJhf5XgZi8UgDf9Nhzi162
IleJwSgAca/BuF5PMZmPFYBLSeCe0xN6kLSEgApAEF+h5+PQjZg8UwApFeMs
z27rQPdr6AYggAI3X+cDSc0k3xRAi6+1zr1f1Wg+Hbccoe5vzzhOVVglyTsF
kFTcbybsr0WtNB0LE4B57M3IHWoikn8KYOn8ja8WVnSii9TptAkXwMMreL5r
RDfJQ6n76bFYof+6C1lJDHlqf1LmBXTptZN8VADHPrwTB7+qRcV0vPBYACt1
Ny55tbmA5KUCWI6tjA/uS0NBNP2IF8D6eCTXrpdL8lMB2D8fpfzcrRaZ7qAd
TGr9gspmWyp0kTxVADc/u09N8WDjNOr0HMqgnmfblVjHMbKYyVcFMHL1Po3b
gfJ4B22n5wmgdiKrJeyDHGbyVgGopWgFXOZKYzVJgCUAqxEH/v4xHSDzwwJw
bbo449RVEYrzpA0OAaxxEr6+0laGmDxWAG8Fu1e+TMpHzi2XKYUlgJBlFXf/
1peTeWNq/7nJvC+ubaifto+HBGAyOdZtLlXPTF4rhLvffjt/eyeFb7du9Bsc
Rr1eugr/nCBL8lshTH/pumJ0sAye7U07rkLQuj9tx8TZHJLnCiFywpv+t3v6
Ua2I/oIQjrV8U/64qIvMMwtBYb1CXnhaNwqVGIJCOH9ih/kCFTbJe4XwaNPi
rvsP5fEECWEUwhq/pgnX/dRI/iuEo7Oim4oPaeLc3XQBCKF5fO/lHXZaJA8W
gktYsONBJw28t+MbpQiFkLZr47EMpETyYSE4Td7JDopkY0PaHlwiBNu7A4Gf
tFoRkxcLQfn6azHXJBclddKALgRf9V19EbsKyHw19f7R46YzjDrQJomBTv2+
5UvHDxNlMZMnC8F5WMa97as1sLxEYAlhYbRm8FwlPczky0IQnBGbRvkZ4Ue0
HbZfCPjK8PRT24wxkzcLYZ148p2dtwzwYrq9HxHC7y+BC5oLueT/SwrhiIvP
gN5TZdyx96ojPiOE78GfV405ysZMHi2Es+sS9yjMEKOrdDsKF0J13e+x6we7
ST4thHD3rztDO6WxtSRwEsKvmdGBPy+qYSavFsKYxLHPsgTauJSGz8dCOBxq
+dK8Qhcz+bUQAru/mM2N1sFHDtCOthA2LRyucShdAzN5thA0jK4PznGXxyPp
cv8sBPsTalsMR/eSfFsIO4qnLRuSF6EM2u7IEAKArS73RC9i8m5q/fRm7n52
XQF70cczTwhZP25ErtyqTfJvIVzQLV2RPssEa0kCWiGMvOO22TBSQPJwISQ5
RFlPcRLiN/RyNghhtt2IGXsv8kk+LoRa06kjfWMN8Bpa3ncKQT0+c3+lQIPk
5dT52m1sY9TMxsz/NjeFE/XHSnz1KtD/AKFya+w=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1mwc4VW8cx++99uba+w6lRdIg6X1/lVTaU2lJaUpR0VAaGlRaGloiKUnS
0jAbUsmOQrK3XOviWv9z7n3/np6nx3PHOec97+/3+34/34PrtmuJO4vBYNRL
MRj0////yP069XevfhVizWb+4BwNwKfcTKYa/2Niye8huPZB1sFqHhtLNR8b
Py71Ll6jNGnE3mhD8nokvjFp+JT9IVzMujmNMfJeNJ5kF2E/0ZlP3v8UnwrZ
sNkonIdZphteGAni8W9W+fKvM0zJ51/ilJTb4Su26WCWV3itmXoCnq4wbc+z
W4rk+97iu+bT9bTPiJDUxwp9C6tEnPlu8tIh+TYk+f5kLL9UfavRKBE6rngp
yuBRKv7Wc3Nwprs8OV4aHpg8jH3kKxsfp95tYvsR36r5ZD47Upcc/xMef8Tm
hWWVHj6+Jvc3L+Mzbn895lkO7//z+YKPoUj/7BB1fPykV8fwlRnYzO3zznNd
0uT8vuL24p9j1g/2oBNPNVRG13/DJXYp+xSnCMn5ZuKLGz+sGn2SiU8UxQ8f
u/8HNhnnPaAfp0LWJwsrx/rP/1esjadT36YvnYMzyibc33nXEEuuJwcHHR/2
9ex2E/xBq/eJ4bxcLPQXmkX4GJPry8UytzSPzVbWx9NHfn1rHJKHvWUyH+5Y
/f/15mP7SS/mJo6TxR+mhqablubjzpOnzaYYd5L7XYDlBzz7wnb9QtOXbMvn
mv3E7JWvhdqmBUiyHj9x+pkB/zQtAfqweXI536MQb+LuZB4NZ5L1KcKpqzee
ykTKePohhZZhL4vwuZPH5h52ZpP1+oX7R4iueThq4Q8Xfvea9//Cm1BkS+kR
TbJ+v3G2V4vVLR91PCMyWnaUQzFesnJR96MYeSxZz2I896CH5XxVJv745oDm
mHMl+M00xcLQjB6yvqVYo/CbSvLCbjTjxxyOZUEpvs550/92Xz+SrPcfvD1q
ssc4BxYWv92oDFsluC4fdUyGrH8Zblm1CmdbyeIZwobJ1pv+Yvm8nyu/vZMi
96Mc46nRG2bHDiA3mbV8gxXleLj2R84n13ay38rxo6lVUX8aK1GE2ueRhqJy
HP3be8WL1CIkuV8V+L4l//X19gpUSR/+bgW+XBoy5eyNNiS5fxU4xOjQn99m
A4hndnWS8fRKrJOu5XdNW5rcz0q8fxKjNThRDrtZDtib1FbiF24H2Pf85cn9
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
L/lrczNQFCUvGJNQi/4D5VyIzQ==
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.0006820909392660997}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=0.55(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.0006820909392660997}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
/wPLTfMG
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwVUVF0XhumWbhiYIKRTVNBzNiEqoaKiIgZgAHYXfgZiKyrYiYUY2BiI
CoqAgEiDdLc0SPPfO/f8rm+tb81imDn3nH32ft9nbzgBm+evERIQEGgSFhCg
////f5+btknLPGFhoVmCv9iHwvC3cbeEL37TyOuL+MR9uR28M55YuO2wjVXi
bbwn31bHY+Ni8vMHWGlZvrHE/JVY6LqjgFHUY/wsR0zHJTiAvP853nbRo3NL
0CospOv/RrvzFX7qUHF745EA8vtvsYP9BNEUBT8stPVug578eyy9ejzH7K4P
+byPWEWivnPi0gVY+Hu1hpllAt5eN54gPvT/9XzBzqu9/B5quONQqQvRmjGJ
WG08d9dOqznk+5JwyTRtjZqk+TiUerfOlO/Y+tfaqyul/7/+ZHw17ZjQiUVL
ceiynD/ctB94QfOP0Ro/X7KeVBx66c4R55s+OPTo1h6DJWnY+O5lXeTmTdb3
E9tPUjm4PG4OPvJcYYJJUzp+5VKpyAYnst5MnDov9FrVMwt8pOiVgcWeX3jr
NsnHW3iyZP1ZeHTlvbcTpcSwE/VpGiLZWNxrr9oXC2PyPNm48sRkCdUjgL8p
Dz7T8sjBWrO3mlRGepLny8GufaqVbsne2Mno50fWxVwcZ3SwvUxoGXnePGxw
sbXHYJof/jb9WopuWR7+dq3SM8fWnzx/Ptab07E+Pt0PO80PzuPoFeC3RkNX
LWasIPtRgPd+WPz8JvbB39ZOreJtKMQ8nzr/izcWkP0pwrKfzwym/PPATiGS
f/XfFuEbezjmv87MIPtVjE+WNIY8LHLE3879GTQcKcaO2xTC9e87kv37gy+f
9zeW/+mMnR88FjN2KcGJr/Ur5tx0JftZgguTFyY92jELf/+wV8n0TCkW+W23
19JiFtnfMmymut2ja/8M7PxrNts8vwyXVGbhvlYg+12OZ6nEqB1ePhnz365d
gWNkFh+SbjIl+1+B3x3VyboZyMPO/c1TrVdX4r2VUtK2u/XJeVRhY57S/ZQS
KxwgupynuagKN7TWe8SoIHI+VTi/9Pv9sg+u+J7cDyOtoSossrcuVYyKB+a8
qjGevmq/eul8XEN//e1q3Ov7IqjTy5ucXzXelbEnWt1vEebqXbJjOdXgRif1
M51V/z/PGsyJPDD6uH0BDjAfnabTUIM7Ijd2RJfPI+dbixtftBbGLnPD96as
cdY9VYvXX9lh09TmRM67FofUB/fkKk7FNU70BtVhKL/he0fBkpx/HQ4O7D25
FhliruekeZzcOpwfIDEPDRmQeKjHb6Prn6mLmuGAxbcWcXfV45pXzTf8eq1J
fNTjpNxb2asEJ+N7/vQGNeCgvh2GMXgqiZcGPGwUsvm1OPX96zeu0vvSgMOf
m+mevWhH4qcRW4epX1lfY425uwqC9QMacfDaMKUPr81JPDXiphvtnyUSjXHA
oelbDMSacPSfrgH1dhMSX014243w+K7dVvjeqYe7DJ804eS7x9/cCJtM4q0J
a53dmHNUH+OaixP+mzinGefpbt4jFeZM4q8Zv1NEuy/WuWLenZ1HjLqbseSE
d+9+aM8m8diCtQPq7mumzcarHpefNL7cgtFv0/bOb7NIfLZgaaNzvG1mrvj+
mxnnTexbcW7wpYWma5xIvLZin5gLy9f+dcC1n2Mvm1a04imS55f/J29D4rcN
N0uIL/5M7TcvTeWWWWgbnmksNcoR0CDx3IZbHtyHEyfk8Krc/+6bG/zFhidr
ywvdFUl8/8WBApe+DNvr4Ptl9Y8t0v/igORQsbSnhiTe23Fs18c3RXqWuLbB
86XlpnZ8afaGihOLbEj8t+MzBdOTsl7ZYl5X3DsrxQ4clNEofEnDltyHDlxR
bWFzQN4arxpmfbZ+14FXvHYzjNC2IPejE8vM/JzxLtAE5wrR39iJK7dqaC9v
MSb3pROn5hkl33hojrvF/63WPNiJR3bJl4Xa2ZD704nRpW6HtH1TsCK1m5o5
nVhNTHi6pxoi96kTHzSwXrdzqyO2Vly5XovXhWs77hq2tDqR+9WFxS0dE7L1
nPF8tch2rZ1dOI9TvK1C0Incty6c+W/o7JI5GG/TTt2qndqFJZ51HtpXPoXc
vy58q/6FUucLKxzBGe7V1ujGgyH4WXyqPrmP3XidFVqxQF0Vv6Z2m7W+G89P
+VB1T06Y3M9uvFzIXpl1aRTlmtA71I3vqrx209woS+5rN2ZN2hm59LQO7ra8
ckBHrgfr3XrsH/51Irm/PXg0OPT7jCZLrGiXIajr34NXx64peeVsS+5zDx44
an25omwStnYYD9N904N/vsvOjHk0idzvHlxxvNFzua4tng82EmzRXmxsN+M/
RZY1ue+92HzwrsW0CEu8bUbgafbiXmzw826y5vT/3/9evEtvh+ntTdTzu92Q
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
NBBerwOWxzojFfE/xMcJq3QAH9MqlhATJvOYOlDm/urQpTYpTImfxC17dEDj
bOJCb1UFzPB8HdjzwjX/cq4S5tvfMzrQ7/77zkQrFczwfR3Q/a5+VaVOGavx
DTO1fveLPQcrFDHD+3XAnLXU41qaLObbtTgd+Jhw+/skdTEy/6MDA0Xv5zW8
GEK0OtmargPHRXS8B3c2k36ADnwz99wjfa4A8e1FhQ6kL0uqc8wvJv0BHWjw
tIhXNv2LqOChFKUOyOBeK07KMOkXUPu9ZZNP5w8RzLRvdeG9kJJt7AdJMl+k
CwZxEW9XqUljmmZu1dYFqwAhuXmrJTDTT9CFNMeccwH7hTBfvlnqgmn419Cc
d/2kv6ALXeHFya4SDWjxDlqB6sKmSduXpV34Q/oNuqDNES/dJNeI+HLDRxcq
dmmNBUYMkf6DLmCXzy/cr0rgxl30BdaFxzmt29gFipjpR+hCldJ64TOKGphf
HkN1YX/h2eDwDhaZd9IFr9DGmKg5bExX921XqPdbrXhxbyEbM/0KXdhmI73+
s4gO5qfzp7rQvqjprJKYBpmP0oUVC7XvHApWxOL7w35tS9SFvaimcXKkGGb6
GbowoJHL7ZLoRfz0k0/tj3J8m1xgFulv6MK6cG/3ntD7iKaB25t1Qbb62HnH
h42k36ELf3OSdm8JE8TM+Jgu7JzWfviBtDyZv2LDooDY8KEEVXyR315mg4db
zJ83WZqY6YewoVpd4tFQtyaekvSNqphskP0okT+upEbmtdiw0fDQrmub5HGZ
Iw1U2SCXfXRNySYhzPRL2MDD6/e/s+5Ah/iCmw0vu01PCznWkv4JG9znawUs
FutHevwDYcOz7/cyzewkMdNPYcNOzQeXjwuq4rTvyyhLx4btYVuV40J0yTwY
G0ApyFImhIc3uHyXindlQ+evw9aWR/Qx029hw8LV88qtL+hjebrdMI8NTWJn
vjum8Mj8GBsOrVd1kj7Nxm9pOeLLhnmOURa7qtUx049hg/HikGCp6fJ4Cd+g
ssHzT+3A8ERBMm/GBkvXg0GiHS1oxJVOYGzInpKu27OygvRr2BAcICMmktuD
omi8vpcNIbxDJ84kS5D5NDYkRna+bSlUxS50+Q2j9vt08IODXWzM9HPYIDbj
Zn2Bqz5uSjv/375w6vf31Had1zYk82xsOKEicftDmj4+M/vf2firbFBfIJM8
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
8XA=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
knQn0ZufP06gCdBS0dohxLaesPpCEpuX23PKn5SQOwvW7Yg5KYlrD7V/Grc9
mbB6QxK/FH7+HWuxi0xYJPE85pEk+rcHtskueUpY/SGJJMnGPLqiiDDRE/NN
cH8FxaoBeTWE1SOS2HPXdY/owB/ivXy8ww1JKbTPfVX++l87YfWJFG4utlUJ
+tpJGn2ZhC+FIT9r0HtUJ2H1ihQun3nafq9TG9ntF5B2w0sKd4yc6xZv1khY
/SKF54atLN0mU03k1kiJxu6XwoWpeeZuvV+pnpHCDeESwxu6vhJmdwUlF60s
HBpeHqim+kYKLydkxOmu/02Gr59wOLZQCk0nai61GtZJWL0jhT0/tbbKXftH
UjYWv43tk0KD6RE/tccPEFb/SOPsRPV0d9NB4ip8gzSq3Lj8pMK2n7B6SBrX
2B8zt6vpJmVbZabfnCmNjyM23Lyv3k5YfSSN7y48tyl684swq39zuzR+E+uZ
d3/1V8LqJWmUntN26v2ODNK7izkA0sjrUFtZteAcYfWTNCoULCjA9KvkZFCJ
Yly2NPrez2rZ9SiTsHpKGnvfzXhZaPGV6AVvmh3XJnj/3IzAiOBawuorGTwZ
MHf3eIlmcucAk9BlMOaKwjFb/XbC6i0ZfJfXrSQ5p4MwqxPnJINxRxYfXbKw
nbD6SwZLuyPsNsu2kPdHicatABkMfLdPMXDeL6rHZHBOdHOrxPdK4n3iy7xb
l2Rw6vauF6pTSqg+k0ExFSfLyR3FpPEUo7Bk8NRKE/Ju6zeq12RwnaLiI323
WrL7jMLXW79kMHnmLYMF5/9QfyqDm3UVTVNntBNhOVKRxYqt984Fm3USVs/J
YqvjSKnOTx3k6gVcfNteFsOUDX1MvdsIq+9kMfdI1h2dtEYiTJ++stgbGmh9
IewHYfWeLI7Ieq3zYnEhSQnfWnn7lCzqre/a5vMymbD6TxYnjrqoMXHMATKD
Oe6PZfHC7z1bgi2vE1YPymKi6tpRft8zSLng6vHfZXHoxKGBvWs/E1YfyqLk
nbLbv5/+IP7C8JTDC/szentX1RNWL8rh7q9rn+ft+UP6YhhBI4fnyhV56p0t
hNWPcpgTzetzd28hp5jlXCCHT0rPZZdnNBFWT8ph1tCz334j6oj+bZW1gj1G
nZQlq9/+qiSsvpTDgPF/1jov+0wS7jA/cug94OsddyuP6k05bC6+vdhXJo9M
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
k/IyHRxR3rAsvPQHES5PpA4mB10LtMmtoPxMBx32Xy+ZEF5GXOQVjq1+rINu
0+597h5bSnmaDh7796s1MLyYCPFZtg5mPjzaFxFdSPmaDq4PCKi6YF1AmN1a
/V0H90+LmHh0Wj7lbTpopTmm4pxsPjFSZhyxDh54J3Yv/k0+5W86WPbj6cKb
5YVklQoKjrwuOmxRN3J6UEJ5nC5K2SWe3bPzGxHiIj1dfMyfeExTvZryOV2M
mdX9PfZOHWHc3ZrRupi1bfLxoLgmyut00SK4trp8SithVrPeSRcjV+08sXBl
O+V3unii5Dn/dEsHOaq59fSaBbq4+9e0cUMPOynP08XiWRWFX853EiEeCdBF
+6bfs6TPdlC+p4vfb5t4x2W3ES0dpkLq4qyoSq3Jv5op79PF1LD0vP8eNBDG
fdVf0kUbnXcS/GM/Kf/TRYk6g+CxbZXklh4D2HTRfLL7xLW1XygP1EX/aLnG
qnXFpIXBAa900bXjSJjEf4WUD+piT2lhqPikImJnyFRUXeSH35Az//iZ8kJd
nOzkvzXl6VcSLNwAXTz/5aPutsAKyg8F15sr83R2wQ+SJXBHa/t10SvlhmX7
pZ+UJ+rhxsFljaXnfxFlwd00qOjhg64+X/OaRsoX9fDywMqPVtebiZcwoehh
p/q5mHc+bZQ36uGi5ARJkcsdJJLPEAc93Ap64SIZfyl/1EMlmQsFGN9NfgmS
4bpZehj9c67rPcl/lEfqof+lrh11F/+R0cICqYfOnnINN83+UT6ph7EeGS9k
Be/fYc5UbD3c8NS7on30X8or9dD4sJbrg79tJM1ix67GU3oYvohnOyz+N+WX
guez99n4e2stkRYKPj0sljng8X15BeWZevgw8+G6s/iZzB6h+qLxsR5m+yT0
Z4TnU74peP/SVwlPi/JJGGNPc/SwbUTEm3s3P1PeKXi9yDVpDcMKUjmSMTB6
+H6Xg5Xz2p+Uf+qhQWiPf6ZOIzEXjrfooVjkt/xffi2Uhwqu1wzj3RvayEYr
Z0EJ00dnt7vOzlc6KB/VRxOeRMDc0k7yjJH/+vqYpTlravuXv5SX6uNuBzGT
yqouMmTNADF9VFAfGRhm1kP5qT6S3HHtSWn/yFRGrk7Rx1fFM7VVz/dRnqqP
K15UWiV5DpDQcbteNy3Qx/tn177hXRmkfFUfD/d0k0Mtg6SUkVfr9VFTf1fp
kr4Bylv1say4dd7Si33EeLy6+O8D+liXNOB3saSb8ld95L39+zDfpIOsZuTA
ZX18Hd249qvtb8pj9TF5bwk3/3c1uT+BWVB9lH34/dPw16WUz+pjeDZn4rAD
+aSbKV9pgvsz3KtZtKOA8lp9jLvvcED7VRmBSVMFJV4fY8rct9WH1FJ+q49/
Whb8fiPfSo4JE4Q+bu8d7WTz4i/luYL1OG6puEC2j3wSqOff/foIWGAXPXOI
8l0DrFxQWL5KXRS0mfSgaoAhjxt+9GWJAst7DTA5aqaub4soLBMWPAPsrUqE
+cWidP7BAA/G1JRPfS8Kt5hwnmCAO2UN9jmqiQHLgw0wQnWFTM0bMWiZojnj
zywDvDO38Ezua3E6L2GA2u3bbqm+kgA7oYAzwMfLTD67z5IElhcboFnH3tUr
5SQheOr9kD87DDBgi7ft4F1xYPmxAaa47FrWaykKWczLQwywM/eLtOrZPsqT
DbAqaPqPld0dRFloSAzQVVn9bcvzBsqXDfD9uW3xm7ZXEK8ZjAIywD/Tzi6a
tucz5c0GuGiypd+IaeUkUqA+m3MMMO4bEQ0wqKf82QBFppcu2XO0k/xicGqF
AdaPXf7zsfEQ5dEGaF4oKnnHShJGz97r3txugJ9mTD3evlgOWD4t+N2ppzDe
Twl2zGEUkyHu7z94esBfBVhebYhR+oZ3DN+rQJo7A4wMMfi+Uqn3WhU6H2KI
B+1lR85WVwZpIfA1xOm/euSX9yoAy7MNMbojzL2JJw+z5yYVN08xxBVpxSWX
2mXpPIkh9hzmy4QGyULYPEZhGaLu9HV5I/bKAsu7DbGsSDuiYZMsVM5nFsgQ
t7522Sr/WobOnxii3T+11JoeKTBfoGO38aAhLpxqvfpuhziwPNwQY36Yhe5t
GCIbBeqt5bIhVlw1/Pl5Sjfl44b44Lft/KhzLeSZN3PgDXHWpOT0zBd1lJcb
IhmYZxHA+0WGFgVfaUkzxObS0SEcmzbKzw3RQDw2SsS4n0xd4iaQrIaYWPLn
y8sISWB5uiHaaFXkZbkqQaiwgBnijEFXw4c71Ok8jCEe0/0abWmpDaXLGAUn
uN7ngUNz3+gCy9uNsH/byPfT/ugBi7uMUGeF/K4TYXp0fsYIwx5NvmPeogOr
hYLMCJUO/mkNmK8FLI83QvmD4rabZquDEM9MMML1c4bn3V+mQudtjLAope9b
Q608MDR202wjHHRvvTL3hAywvN4I9UT0PK4nSIEQJ6wwwq1JUr8CaiXpfI4R
jtm9Xe/3GUkQiJ/0TTuN8OzCFYq6fRLA8nwjnLT3tXbIY3EQ2t8QI9y5fuOV
rHhROs9jhBkDJmdNdwwSbaFhNsLCNZvnubn3Ut5vhAr7S9dPS+4hQrv2xAhV
/M7f27ewj/J/I7wz7seErdcF51+gTgLfG6FyXGWAr50MsP0AIzwzrWbm6F0q
ILQXFUY4zfHfxndrNIHtDxjhSeWGvtvOeiAIHoGiNMILTxP0bVYYAdsvEPy9
tWJ25yUOsO1bYzTvkMh7bMil86bGeKOjMebYMw4wNDPQwBiddV6TzkYjYPsJ
xvh473xtY3V9EMo3K2N8mP8uaNhuLTqPZIzFsdqeRtmq4LWVUaDGGFoW9/3f
BHlg+w3G2LZ2xPxzzRIglBsLjTFxysSSIWtROr9kjPum2oXclxWBX9uZA2yM
w5L+/n3wVwTYfoQx+ndvxn6OOAjL40FjnDS0XO1lmCSddzLGwOvuZ+RDpIGp
7pvDjHHG5B9KqWdlgO1XGON4wov5kCIDwnSeYIwZg4cC06/L0PkoY3wz8Ote
oYUsSAcd/rg5XXC9UpHHYxbKA9vPMMZaq0eOol3KIEw/xYLn8fSXkYlVp/NU
xtjsa77UY7cOMDRwS4MxunaKJm4cMgS23yH43eiYq2kqF9jxMWM8k6j7hiNj
QuevOJhp2Gk07YApXBS2lznoey3+38YqU2D7IRxcJdazIlHaFMa/zhBUTA5K
Hdo5oUSGT+e1OJhe4nvoKZ8D3yYzQJWDmCPy5uwuXWD7JRy0vXtpU0KEGuwX
Cm4OrmiVlHvqKkvnuzj4ZNe7WyUFImAi3BDB329O2Vj95B/tp3BwT3zRjx2z
+0j2m8UCS8fB5T/vfjgTIQZsf4WDT3/Bi20L5CBgyhu5FBcOWo8/8MHtqCqw
/RYO+kzJzVPYrAkqTLthDgfHnhf3r3HUofPJHMzzll3nkKoLjxk5soiD9YmX
/n4x1wO2H8PBT+phYTsF8b1AaFA5OLNEojlIQx/Y/gwH1YpHLt512BD6XZgE
xkFTDY+5QapcYPs1HAzbxR2XutEEohi8vouD00P3rg8PsgC2f8PBCf4WuTqh
ljCFKb+HOfj699aEeWWjge3ncHDd4be/XuRZQX322b27z3DQfI6TkU28FZ1n
46DE+dWZOz+NgpDp3adTwjkYYvTYLX3ucGD7PRx8qfrGWeeQCVgJgQ4HTwTK
5B3Yb0Dn3ziYfPmCQb6BKhQz5eYeB7VMBut9dosC2w8SfH7D6Vcjh3eQnQK1
ufsZB71P2y97mtpN+0McXGqQc/p0hTQYuJ37lPKag02RLmkOdzSB7RdxsH/O
vZL8mxxIZ/DpBw6WySrvbp5rRufrBPFR1bC5/sdwWMmk1xIO3lk6eCAlaiSw
/SQObj7xMTBq7SiQEQJQwf3m8W5uvDWSzuNxMKgkO+3SREu4O4sRyBysnia1
etPEEcD2mziocGP79inhI2COcHyZg5Pent27JHcknd/jYPiEKnvPYivoFI43
crCt+1nqxeE2wPajuGgkXuq/w2kchOcvFSgoLl5Q11xotMGWzvtxcclso8E8
ri04uL/1eKHOxeD1u9dsNh8LbL+Ki93BV4LG37OCKgaPGXJxvvwFS7dgCzof
yEXPXpuEMfeM4LDQUHLx4pWQR2qHlIDtZ3Fx32DTh0qHbmIhTDhcXLZe9pz5
vjba3+LiS88cqxMG0pDrueziCwcubmoxUU7z1wO238XFYTZP0NjDHDYxOMiF
i5k3ssLX2o+h84dcdPMPyyleYgsaAjU70Z2LiS5dlmYOE4Dth3FR+sPPk10T
HSD5M3NDXNwg4hkfMtwB2P4YF3t/vF8/x3UCLBYCGC5GjLberu9iB2y/jItm
53PVQ6XHgoiwQHPxubNSyfOdY+i8Phfz68ykzk+2glgv5oAJ3u+vtvHoJStg
+2lcXG28qM2DZw3TBGo36DAXW28bhkQL1pftr3Hx4CeHH/lJ4+D3ggvaqWe4
uDPmnzPUjQO238bFvBHbdzhPHwtnGbsfzsViq5WeSvVW9PsBXDQI2TDmxyML
GCsEllzk5422rFtjBGw/josKo8SLyicqwZcyRtAKnrcl4WjSmwHan+PicsOF
LWk3xCFIoIZTn3HxIbcv4NljLWD7dVz0+Wy18ZaTGXAYe/uai7bPxnvliFvT
+Uwuys+KSlBxsodMJr3lCuLLY8QBkTQAtp8nWP+wrPq4iY6w5vvyk0ElXAzf
/Vrm8yInOs/JxZnGM/zXGDiBghDwc1FjCZxOCJ8MbL+Pi5ZWSc6Bcwg8YOxc
IxcxaleXYeR4Ov/JRcMnvdcuT7eBuUz4/OXiWG2l1xpPRgHbD+SiXMqr7y5t
w6FHcHqDhrgoVRwwdt2WEXRelIdl49fn3LIdDdeYx5XlYXeVfU+EmTWw/UIe
Hnr2tmiX3VhAxr6o89Amb+y1m0Vj6XwpD89cT+Is3mEDP30YwsbDfUZPQxei
FbD9RB62v1p7iVtsDseFwISHqq3Bl9ZvMQK2v8jDsRsPL9u6Tw0shQWVh+Hf
n1YSRRVg+408jBltdNsoWBfyGbnuwEO3RRftTFeY0+938NBr3WP10CU2sHVl
Npk0lYfxO2Y42Mx1ALYfycMb6+xG9dxwBB2B2t7rzsOdXw/I7t3qAmx/kodB
Gte0qxWnQyrTflrEw9BY1/Oyaq7A9it5aHYot7Zx+XRYLgSMPIw9ckXzr9FU
YPuXPFTa5Kel/NAJJIQClIc1Dwc3z1wNwPYzeZhd94FEJtrB7V9MAeDhza/r
HgScHQNsf5OH29eYny5WtAQ3pt1ymIchN0uboXo4sP1OHk6+Irr7af0oaGXk
2BnBfhhbmiQr2NDvr/Dw5KnQr2KfbOGiIDonXeHhb6mAor2z7IHthwrux3nP
vsOn7GG8EMjzsE/Ktnpwuh2d1+WhxVJLGxcbG/jGtBfu8fBfwG+xw/4jge2X
8lBfZefyye7msJ+RH894GJc/VzX8ijmd7xXEw1BDn8ZsKzAJYAim4PcPCyYV
bbAHtp/Kw/q3O0ttrZwgWxA9+3J5eH1nzZR9ya50HpiHUdNWzD+q7Q4BDE4v
EaznH5sZYD0X2H6rIJ5aj713Hz4fVIQNLB66Lr58bPad+XR+mIfv84p834TN
g8cbGMDBw0ViLaEV2p7A9mN5mKx27WW25mxY0HJZ4LB4OKY0/kPTgAudN+ah
5+mELG9/Av0MPh7iYfTMZX3x0tbA9mv5GOlXpucVawpRrSu2D8ry0dficLL1
RT6dT+ajrl/NLh8yEqYEMsSVj/3hQ4c49+yA7efyce7usn7zYZOhvo15Ax/z
8qtc5nx0pvPMfFzg5iT789Q0CBECQT5+8wwM9i+eBmy/l49xDlItl7pcwEoo
GPm4btP3m1a6U+j8Mx//UzK8erBxMhRvYQ4AH8WGIrzkjByB7QfzsanlhPXj
CmfY2fle4Aj5uG9zSla770w6L81Hnu7yU041nmDA4EF3Poro926LjVgIbL9Y
cH35bovLj5ZC+l8mofNxZEb4XUUZH/p9Jz4edVb783CLD6wUAnTB691zCjbu
WA5sP5mP+qIyY7+uWQwyQoPFx9bf8+8pqs8Htr8suF7OFdmYgZlwl8Fhu/l4
MfpmXGIqAttv5uPq+/WyikeGwxymvB/m40zZU5PuEyn6/So+liXoVXJDlaBz
Z/gMCOWj2kDi0HMNK2D70XyBXipV0jvuCOFMObrCxwdf18gfHTUb2P60YH0K
vBx2X58HDsKGEx8NNSaFcsW8ge1X89Gqb0Tr1bxFUMWkz3t8dFqweqnCa2/6
fS4+xo49MD9wrRcc3sMQbcH95KpOK1fyBLafLXieolzdqXdngQVz3DP4WGDf
doQcngFsf1uwH/ZZvUXrZkEugzty+egzcd5LfrQnsP1uPgaqFz/LGFwIm5jw
LOFjYsKRLRluy+n3xwR/H3fLtznLFzSEDVo+mmi+lyt6sALYfjgfNwVUNaxO
9IVkZjmb+Hhtyn7j2dnLgO2P81G2ruimyTsvWMzY+7985BY8fHGsfyaw/XI+
mq4POVGd6wDst81NcEHdjB2j9Y3gfxAK7EM=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
QVUkddhyKQMb739KeJk6dG6pXqrGTEX85YlVh0nyJ3Y8cnxJ+Bnvfl+qD+XF
5aF50jKntj1Xh2Np5yKPJH8kPE0d7mgmWU12L0N8fFagDuPXbpReXFBJ+Jo6
5G2wS9bVrULUbm37qQ7nbya6JwRXEd6mDuHWZ85EunxGTHnKEavD181D7ip3
ygl/U4e5BbkdXy4Xo608K7NdTAMW62i1nknKIzxOA2IjPiv2sjMQHxdpakCx
3UahSfgu4XMakJxvlyvwIxRR7m67qQZMCVBMiR25THidBjw0O5VVPJKIqNVs
dtCAzxOzl6uufkn4nQZIFkxuzrmSj0JU9p/fvkoDFubmfxA49InwPA2out0l
Yj25HPHxiLcG5BnkXLt1uJzwPQ1Q3nD+1qyMUqSqTlVIDcjNUC88b/WR8D4N
cBzSTWx4lIco99UcoQHisfa60Tx9SvM/DTAe3tZyryMXJWhSgE0DbMJOZos0
vSc8UAN8fjax6/pLUSeFA17xXmvMWH6U8ZXwQQ24J5GZNnX9L2StQ1VUDQh0
v/Fw07N6wgs1QN0l4pPIvj8okL8BGjC5SXF7VNgfwg814PRN85m3e+tRPs8d
7RjVgHTOOaWkJ78IT9QE4YFRqVd+X5A8725aGJpw/9XMA902xYQvasIVj9A+
XUYWcuMnFE1Qb4jOdl4dRXijJrSm3HR5P7AZxXIp4qAJW5XWu8aoPiT8URN0
4hPnXujOQ028ZLjTUROWDR3YreVRSXgk7/qg1Uf+vK1BpvwCqQmLPjFH287+
JnxSE+yDajvVbzagg4ZUxdaE5zOLChPUGgiv1AQPowGlbrt6lDPp4OHWc5og
990+s0PtB+GXmrD/6hlmZF8FEucLPk34Ixu/1kOihPBMTXg0e/2aewklyGmq
Qlbrc00wsm/dMXfD//mmJry7t3rbu6ZfKJKyp4W8+5mb2u45tZHwTk0I9btQ
UP2mDf0ypgwM73lKmCPOzp2Ef2rCzxZJjlJfJzLkj7downXDrS9KjvwlPFQT
2jxyhoe3NiMfs7m8EqYFeau/3m9PqyN8VAuC7h8fO7rjM0qn5L+WFpzZudXE
8+cbwku1IOTcwX2BRjFowpwCYlpw8UaEsu20E4SfasG0E30HNr3MQPMpuTpH
CyKGc9Sz1pYTnqoFnuk+5lci61DY9MOv21ZpgfmtvIfqOa2Er2rBV32tTfpr
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
Ekz/b3M9SF61033raRP8P+E52OM=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
ueCcSZDRK8H/Ab+hA5U=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1: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
TKLwkg==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1: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
tx+LdSF6UwHtVRbFpqe5g1duQOvFcgVki7M73kz1IvpTATtHWs9UzfCBV0J5
R1/PaPs/20yA6FFFXGvLNo/5ATBduKEVkTU6XDqkHIg+VcTSbZte362h4OcN
DfoMRbQN3hAXyPchelURb9rffWd1zRPW3b7UmbNaEZ1Lbx1su+1G9Ksihi69
XlkS7QyKwgatiFN8ciVR2oHoWUX8u0yBlbfbCo4+qF55qVgRr3Zu9TlZbkL0
rSKyF6z1tRrLA6tHa+lPUMTDEXNG1OVziN5VwqSp/nXHNrDh/mNGcCjhBLek
o3WGHKJ/lVC2ZFuWYikXRhVe9swNUMKZEmqva8aZED2shLWOvfOPj7eCqufB
63OXKOGenVm8ficHoo+VUMvjUnGinAvEFNfSV6SEV2dFPU6tcSd6WQmjlknc
S0rwhoFX6//lPlLC2WejOh7vBqKflTC8sCma1Ymwu1TH93KzEvq9H9nx+pIv
iPS0Eu49pPDpRYsv6L+9mkg/MnywKX6T80VfEOlrZbTXqs0Koc/PKR9J34Ey
dmXwEuEMgEhvK2NISUePer43eH2ol74yVxmPH481mDnPA0T6WxkDx77OX/nO
BV592hh0ZY8y1qb9u7wJHEGkx5UxVHFfS/YrG5hexUq+clMZufu0w5/0moFI
nyvj4Y9mVPx8Afz8ep2+Y2WMHj/1SdtiLtHrylgQl2FXe8QQ1lWHKl2VVcFn
FQv4UQ5cot9V8OjN1l9+AgEoCgW7Cp6y/3ligrw50fMq+GHm3rhzp2zhaMPm
lKtTVVCiLOVYmb8T0fcqmOCT8D49ww0YtXo1UQWXlTlJUoNeRO+roPyP19f8
VBDutzAbVAWfPvRd7ljuS/S/CuawbrAuWfjDqF9hE65VqOBO65cGT3r9iR9Q
QQNlB2qqXQBU/W4+cG2Ivj7xRC+XN/7EH6jimndPO9bW+kGMsOGqooSfQU7F
Rl/iF1TRcPeLSL+tAIyavD5GFRU53cZxh72If1DF0smR5Ve2u8Hu3lvTrieo
4s7qu0UOKU7ET6jijUxr3nCtHeiLBAQmzZ8YxSq2IP5CFVMGLjm+tTGBnMEW
+gmo4r7WyEM7Z/CJ31DFXd/1lWnFCiJ8oooP3ZSXyNfwif9Qw9wDXq6nZ5pC
o3B51fCHknarb5MV8SNqWFE59F4x0wFshYJBDePxiZdzvwvxJ2oYOeqJ+smH
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
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.002944273367031275}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=0.55(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.002944273367031275}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7555035886550713`*^9, 3.7555036378733683`*^9}, 
   3.7555036781510477`*^9, {3.7555037256749554`*^9, 3.7555037530838785`*^9}, {
   3.755503789270277*^9, 3.7555038556701174`*^9}, {3.7555038988929195`*^9, 
   3.7555039591751895`*^9}, {3.7555040042933784`*^9, 
   3.7555040257608957`*^9}, {3.7555040724501824`*^9, 3.755504144618416*^9}, 
   3.7555041795849705`*^9, {3.7555042981224246`*^9, 3.7555043061196337`*^9}, {
   3.7555043539143753`*^9, 3.755504428175009*^9}, {3.7555045678952866`*^9, 
   3.755504591233197*^9}, {3.7555046327549915`*^9, 3.755504675139684*^9}, {
   3.7555047368387256`*^9, 3.7555047454107766`*^9}, {3.7555048409270177`*^9, 
   3.755504881560847*^9}, {3.7555049417404394`*^9, 3.755504968993712*^9}, 
   3.7555050163795104`*^9, 3.755505046710202*^9, 3.755505083632305*^9, 
   3.7555100530008516`*^9},ExpressionUUID->"e35c407f-9a26-4567-8644-\
6f1c8870a24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wfm", "=", 
  RowBox[{"wfmajoranambdis", "[", 
   RowBox[{"1", ",", "2", ",", "2.6", ",", "100", ",", "vimplist", ",", "4"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.755504319855985*^9, 3.7555043434786177`*^9}, {
   3.755505754565592*^9, 3.755505854589508*^9}, {3.755506056524227*^9, 
   3.755506086777859*^9}, {3.7555061264149857`*^9, 3.755506190355998*^9}, {
   3.7555062848568788`*^9, 3.755506285030382*^9}, {3.7555065155354905`*^9, 
   3.7555065716738544`*^9}, {3.7555066929287834`*^9, 
   3.7555067503372955`*^9}, {3.7555067993147993`*^9, 
   3.7555069253845606`*^9}, {3.755509442275535*^9, 3.755509445478979*^9}, {
   3.7555095277122774`*^9, 3.7555095281471877`*^9}, {3.75550958933717*^9, 
   3.7555095895072575`*^9}, {3.7555096735225186`*^9, 3.755509673654149*^9}, {
   3.755510058510477*^9, 3.755510060180525*^9}, {3.755510136893139*^9, 
   3.7555101376221657`*^9}, {3.75551019707374*^9, 3.7555101972422557`*^9}, {
   3.75551188013827*^9, 3.7555118802668962`*^9}, {3.755511913450992*^9, 
   3.755511914169071*^9}, {3.7555120781059694`*^9, 3.75551209839721*^9}, {
   3.7555144125206103`*^9, 3.7555144151204395`*^9}, {3.755514622012659*^9, 
   3.755514627550829*^9}, {3.7555147188110685`*^9, 3.7555147189277315`*^9}, {
   3.755514776243493*^9, 3.755514776394065*^9}, {3.755514853291252*^9, 
   3.755514853550108*^9}, {3.755514932593962*^9, 3.755514932720624*^9}, {
   3.755515011857377*^9, 3.7555150123141003`*^9}, 
   3.7571337915260606`*^9},ExpressionUUID->"4ea59d98-313b-46d2-ae1a-\
a70352a30486"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw1lQlQU1cYhQVZ6gJ1AAVxIYDKEgMSEwjCcCybWIkjWCTY0rAJFgiLGhQl
gMQFRFwGNEzF6jhiZRFHWutSrFhoI4rILhoXSCCAgYAogqlC8+ztnXnz5s29
97/nP+e786yjkoO36c6YMSNG+1Dv/8fDg6yelTMT8O3d4POdVw8gZ2mfk7tX
LvkuQt3G5uT9NifwhVXG6D3DczA8Jfn5od1RMn8RQ6wNv2TezwEzOS6gUVYG
i+yy0gbNDrL+Krats60dOitACjW9sBol/pemZax0sv9XqF1vzuImHYa/efiu
Fr8baPHQbBj9Lp/UuwVxLftk4NnDWCJNXSxNrUEpYyI3VC+L1L8Lg3tNFR/O
xWKvh0/Uy6ZadKUO0kNqtpDz/kSVv6cvpygZ2wq5rk9j6jApOu+cskREzq9H
59vAYsPGbASpQme3a/5CFz8xjN+STvRIwdu++HaRSSI8qfIn7sNNUL/WcWwr
0dcAx44d721lUbA7k1jdsOIhqlo2Pprbl0r0NiL/AsPUaFgI07dph+prHkHv
mszowa40ov8xKsR3fmdZpiKrdO0VvkMz8uJtuK7sCNJPM0wWJZQ0arwgbPGj
FCFYvOGKaTuT9NeKyKmF5grvEMR/+nr/1rutcPeYlVauF0v6bcMtIS9x9jwB
Ihw2UR1iIrN+8je9//Nuh4E/g6NfHo0tIdToQMz6cemmP8KJHx2INbvUJtaJ
QaC2unYHFujynIf2bSf+PIG/SNBTeD4BX2nVb1I9gY/fA+PiuDjiVxeyD8Xe
+NTLg9vTGEoRDIyefUwwcCf+PYWL8B/h5HU6GPpUB8/wYwqtfCQgmPgpw87W
IPmC8RjYuHzegKoFbt6RYz8Qf59DZZRjJZDEwoKSY/4CU0eyGmhJkcTvFxBx
hm3fLOLDOC+dchSjoerIunY+8f+Vll/faPXLcMy8nqlN4BX6J3Xs5V5hJI9u
3PcYeV+g5kKkXW2V0Q0fs3J2GM2V5NMNvX0ZmQX1utitPe2sdQ/qtoqrNeYr
SV49MPnYRV99xg87FlOCezC/cL9F5Yogkp8csQ9qi3qZQRBouz2TKEdzReE6
vjKA5ClHZ1VeBa19DbZTy00U6HdTTMwctSf5KtDTGprdVs1EtNbt4hsKKB1W
GzpEe5O8e9EstzvaejIQ31P2hPeiQ5IkpdVwSf69OEKTJtvq+ICnTfuUbh/e
JbPHL+naEx76oC8J6KTTTLBZu9rsch/YZqaj5wJcCB99mOOcIe7K9MVGVypg
Ja7dZHRWunEJL0pkG0lkIWZcrKfkv1VCxLMc4+X6En76kcJcrin56AJfCpfi
fjjVFTKn5lkTnvqxLEYy5bGbAUx2i7/0GsD7AVNJY7cn4WsA8VbfWDQVeMP9
mIJzTDGAcs4e3nCDN+FtELyI6eNcD0+wlimH5+YNolJ9um1v8CrC3yCMj/+U
wwleCufbAxfynV6D1vRhobHSlvD4Gkzpqw+DYUw4fr4+r1G44vEeS7Yn4VOF
/MfdaYMqTyynyqerIInyM3x+azXhVYW1ZT3tkFuDRuFmNQTGmGCVr4EO4XcI
NE1sozDKFItMKGCHsJNVWLM5nk54HkbJHQthbgQL8y+P0/XjhyHQhFcaHWAT
vodBo/HLRCNOmOdFGaSGruPVLJuDloR3NZ5N6RfMSjLDHCre62ocK3vnQLdf
SfgfgV3BxTJDtzUw+AzcCP6OOs2R9oLchxG8qZHdmY7j4L+/xShKJ/i101VL
8C8MX+M+
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1lQlQU1cYhVMsirLIooMd0waRTZFNEWTRQwwBFZU1koJEAoQ1YoIYyiYu
qdVqUx0BcUGKikUpaqOIWBURKaAiLiBQCbKERZBFUIpop82zlzvz5s2be+9/
z3/Od+ctCNvmJ1Cj0WgRqod6T42MP9XO/9vNRXC53y8vLkvBrKTtmu8rId+Z
uO6zOj9Jmg4NRtpIxYw8jHKOjAu5yWT+HEaSFwyFpYuwdFvUmkcvLyD9yLVU
Z08+WX8ZF3trSgOO8iGipr+SQ7rXVtrpLCL7r8F/pmXli6B0eBiGJD5ll0Ik
P/Ypv3gXqVeGQ3ltrkYTqfi6WkyvFt9C06oc/wtZYlK/HJpn/s460xSIFBdW
WNvjuzA+cXbxw2MbyXn38M0MUdWeJdEQHN3g0BJRiU9pwneSnTvI+fehCHme
0DSQBN+BwFkNk1U4H3+tIuiKmOipRk5MvtdoXhhcqfKHa+DewlO7Y8Uh+moh
KWJUNzLDYX5SKK81e4gJw74xiVxM9D7C7eVFJg+jE2EwJtl3/1Ydfq1xsqY/
2E7014M3637P0SghMgrcircseoLIFOUXueCSfp6geU/6RLKbHXY8ZVOKYBY9
r61B35H09wwPdOSB2c1cxP6zbndQ+TPUytePGqZEkX6fY6+WV8HYwq0IXeRD
dQgty5aXJp0xpP8GJCpbV+8aC8MmDjUaYc5i1Gno8okfjfDOFJgtOx6H9arq
qh0IY1VoCYOm/GkCjTNWN9GRAKZKvc9AE87FtGhURcQTv5pBzzCUSUx5cGyJ
oBSBdWPLHzI/Z+JfC8xST5Tvt1oOK3Wqg79wyZpZ+5wdRPx8iZSJ+JFT2kIY
233eAFnpaIJBnIj424rJ/ExpIy8O8yg5hgpof1RMe/u7gPitgO8H3QS+LBI6
B5IpR7HZuuIW/2As8f8VAt59OZwyJxbTSnaqEniFIlq1+qZ7ApJHO95zBh+v
y+IiXbWakdYOV4cwW+GQG8mnHT1e9klXnRYiSXVa7oIOnMqI9thh5EHy6sB1
x7SC41e4SKBTgjugdjtEUKs3dR864XV4clHqTR62qro9KexE7Lhe4V2xP8mz
E0sKfzPXjGEimlqu34WyWrZV/Wl7km8XuLI2ukfcWoSr3M4p7cIT89zTF225
JG8lTiqDgm/68cGj7AlRYjcjbnnsnVCSvxIaLPcPdWf9wVWlnaXWDflCl58i
Cx0ID914dIcVFRBoB3/V6jmF3bDJKeVWMr0JH90QmDZM2uuEYqMDFXAPTv2c
rZahJyC89CAr+8gs56xwrKXkj/Vg6ZJEaV3at4SfXlgcuuStM9sd7hQuOb3w
MdX88buyFYSnXtAeJ22P4W0AJtr3zl7Vh/E99QyeSzDhqw/qldniOmYonGRd
K2RdfVgZ2mqCe1O8vUbmi0R/GwkH9iY9g1oHXsPT4uq2SX1Pwt9rGJd10Q4e
coLNzb4zB6378WGmXVJzvCfhsR9cR0aBLC8Aiz9fn37I+6db7FsTQvgcQDe9
fKe28WaYUuWTBzDee0Ozqd6X8DqAePGyiI9iVxhRuDHegF2WpiwPphN+36BE
cTlXQXPGfH0K2Dfw3n+6VVHkQ3geBJNVI1xrEYi5he8t1WMHYVvlUsx0DSR8
D4KR8/0PUgMf6K6iDBrCdb3zqSUlKwnvQzB9X1RtoOsGTSrekiHMzsh0mX6F
Q/gfhjX77dxjnuGY/hm4YfT57aZpT0SS+zCMCBvLSi0RH///LUZQHGvtamTJ
xn9cnN9P
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw1lQlQU1cYhWloBNQgEJCkQNlVjCQQUYjQd0AWoaMWQSvi4II6RYEB1FpQ
0ohS1MERF7BUpKgVB9SKOlCmThSLERRBVovsa1gTQEDWKs0z1zvz5s2be+9/
z3/Od+dZhkYF7GNoaGjsVT30+/OYzkuO4tguwvaigGv/5iXCO9W9llPHI9+p
ON+fkR7LF0LbPH7kH60sfHx3vDlWyCfzNzHPvTrztr4VhFE/+JY35eJxSU2S
NFqPrM9DRGkCT7rFENH0NPch8idiJW45S8j+fLwU5bf5Ra2Cj3HI4WrvQljJ
rPst7riQen9jCXellnOhE8xKY0xLY6To2Wk2u/2YHalfhKTBstwSQxaOunqG
tr5+iptu4+IGp2lKfV4xxDY7plydzbHv0obVDXufYWRDmEuPQkDOlyHu/i+Z
xZ4rsWlw6/y6mefQk673efeAT/SUgrM4/qzBPQu40eXPv0AdUxbwR7IW0fcS
lqH1nJJCLSzNiHj4cskrXDzEqtAsMSd6y9Hd8KjjBN8O7LEjSTJpBe7Mvani
jQqI/koUyu7+ppPMhyTb/c+ddlWIzpiVR5vZkH6q4HmFwedN6uPHam9aEYYF
WUa2ixWkvxocTNdx/9jZTR348G1CcFENqjLCuJLb+qTfWjSXOWwqZ9pgl50/
3SHYTMHJZX6f861D50Nvyxcjdvh+Cz3eIPl5liSg3IL48QZ6h732Z+UtwHpV
ddUOVLYkJomW3qDU/tQjt3I0UOjBgIdKvf9gPWbvSDqiyj/79RaPE1tDktfw
4Nywl1aE8LvvCm6U8Yl/DUgJZBz4T2gPeybdQSO29nz461m2HfGzCb4HW9su
RNjDyvHTBlzW/jpSWikk/jbDL0Ei2n11NTi0HOMWmM7s87m31pn43QJ/n3H/
s6tWQvdMHO0oGoXBgTN+tsT/NtyqaZJt0dGHZsHPqgTaUP7gVQ53gzHJox1X
1jZ7FB/lQaxabR7fDiOZ/uWKFBHJpx1eT5o5x2I88JPqtEzLDnzHCR1V5oPk
1QF5QrQi85EjDprSgjtg5Bpvlr3NhtyHTsykuWr19togUtVtRkQnLjXHOGQz
BFDn2QnxN2mbmllOCKOXG3RhMtLE6vQ5R5JvF3jht0xM2DbYo3I7vbALE5tr
I0+fYpC8u/H0SFwA03WE2kHbE9IN/67qudd5xiT/bhz/NbtNuHUZglRppzHk
SHHoMDHyXUF4kGNBy/Lrb8/wEKhabZgjR9rs1IqvfKwJH3IIKqIee7MMsHE1
HXAPHErb1k/vmqLUvPSAMd5r6bRYA360/LEeBLlInrhYscn96sVtR/EehbUp
vGhc0nthtm7yIjvTgvDUi9c3uWvM6rnAVPvJRVQfthXujJ0w1iJ89aFCvDZP
Z/4AJTrX5XKuqw9JzNpcjdxJSs1bP3qnfw+qdtWFk02PcuGZfuifXGd8ophD
+OtH6/GFo+HvuRA86ruRzB9AeMET6wtHDQmPA0gVRtiHiZhY/un6DEAv0+tE
7pQG4XMQuqd0JxuNtGBLl48bRIuxR4GQzSK8DiLIM22b6CoLFjRu5gp4sabn
Eq9pEn4VKPdV7r8uHqVMDGhgFRhSLjyfrCOn1DwrkT6j/UDv+hhllPOexzyg
RFPR12njVV8QvpU4KxqTxwx8CT2KNmgIBQHavJKNHyk170Ng19WljPImqAV0
vAVDuBvoPh5SxiD8D8PN7X5je+oizPsE3DBidwQLPA+xyX0YRnC9W86cVBfq
v8UINutp7m50GqP+B/Fh3VA=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJw1lQs0lGkcxgcpbRd2MIy0Y4bGohmMIVrNw1BpWrpq0bokNlSb23Jy1ObS
bUnSZUucUmnVOTUbZmUralKibBJCTeTOuLNH20Y7X959z/nOd77zvu//ff7P
83vPxw7eszFUnUajhage6v3/eLnc1Teh3hhbyzdebJSmItDz8Q1lixP5PoVI
peU9bbortFiJIw/mXMBlXZ8d8xgryPwVZHvYym4mCSDYs8Pj2etruJWqFple
ySHrpZhXpmnYmGaGSGqaWYi8VK5x9kYh2V+MMLudsvIKMVYZ+Me+WFmCO9ed
npplrST1SvHweFHJiLsYiyujjCuj7iLYV/Avc9EyUr8ctycrP651+goJ37gF
v/3rPjYNV8cVyXXIeXKYNJ/USa/mIfSkp0NzyEM8ueN53RDO5PwKRFexpL7R
Ltig/O6L+g+PoNUbaVL2vRPRU4kI/RgeS2EJZ6p85hPcagtSLM9jEH1VqPOL
yZ91zwTm53cVVnGfQsZc0Z55RED0PsP8mwuL5lo5QXc87lDF3RrE8esqR9c5
E/3PIdHwWpCj6Yif811uBFrUYvSkVpRRuyXppxZbU40nO/Xo+OnFSkoRDvsl
MjExLprprw4sqxxxtZcuIqYkSX7ldSjWqxLd77Mg/b4EJ7MwSDNAiCCL9VSH
2LxmQZDGFnvSfz3CDQIl0mQ+tnhTowExwoP6LtFM4kcD/H+4emF19KjoW1V1
1Q649CYZvv2dRvx5hat+pr6G1Wy4qtSvV77CuawwhTjDmvjVBK99PJaSbotl
zSGUIjjuzS25eNGK+NcMNVNROi90CXiaVActWMd+EalVyiV+voZC3GLUpCcA
x/bzBkQ0m0gy05cRf9/A03o/7dkxBxhScgwU+KWRKfnnnDXxWwF62qmXd1IW
Y+HRvZSjOPir9AY7Rp3434rs0mtx8p10aMj2qxJoBUuiz/NhWJI82pCkP/Ga
cdse+1SrWYltKEjjFTgMOJN82hDpl9Jk/FaEeNVpuex3uBeUUbbFw5Hk9Q7v
c5rObDrHR7QxJfgdjEvbDCrj+YTPdtjFdl3ixNtht6rb87vaUcbljbIzHEie
7XjYMRqxYEiIMGo5vQMhNtMfl5/9muTbAX78dPiUdCG2q9w+W9KB2B/l7KWB
U6KZvDtxO/RgcOMHEwRQ9vh3ooNB65lrICD5dyJtVUOtQ5Q9fFRpn1bvgjC3
bHb6CWvCQxeqiwcZ8nEONqlW6xV0YaxJ1h6YQCd8dOFyxC3bw610eDlQAXcj
98jUgCyLgxleuvFku5p/bfNSrKHkj3djkdaw2EJhTfjpgXrDoeTwKnO4U7ic
7cHjDW6ZiXQW4akH29bSpoqW6gHv21K0Rb3w5Ace89/NJHz1QneO0NT7jRmc
MjocMzp6YeCeNTY5wSO89WEsaMhj/WYbCM26B+cf7UPL9YC4hLs8wl8fJh7k
c/v9ubD+s/dSGr8fk3NUvLtzCY/96CzO44x0W8Hy8/Xphzxh52nvWCHhU4k/
KqYDfrvigCVU+b1K0Gr63Y4fsSW8KlHjyc/WCDOFCYUbawC7XAuHc/K0CL8D
2Dwo987n6GARnQJ2AD3qVwWao1zC8yDOjLkcOHBCAP2Cv600IwYxXePN/JRi
T/geBLfB7fEjDwF0RJRBQ1jNUqt3mWVJeB/CNslzbd3DNphHxSsbgk/rpXyO
n5jwP4wo6b6b5kZemP0ZuGGYhn8q6kzaQO7DMCaMkr9ckizBzN9iBHZ9jEiF
uQ3+A+wKz9s=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1:eJw1lQ00lFkcxmkOW5stn6ut0SDSEBnLROSxKYt8VXZUmpSo1lIIlUQoh2wi
taGjtNvsmmqZ9CFyklKTMoWSZsvnjMEMY0pLrdrdeet2z3nPe95z7/3f5/88
v3tes/CdqyOnaGhoRKgf6v15jDTED6Xx9BFav7rsWeVBePPa/Ktq7Mn3cbhp
3Xt8bCkbUxkpqoYvzkD7tvsF0fpvyfw5qLgRB4W5TDjs3Obd/IKPfycK32fG
zyLrK3HjDZdGm6KHWGr6myqcrk4M3XXehOy/AqvvQ6Pl5xfCy5ib0LqiGq9i
HpRwZ7NIvRq4NWi/NAywg4kwji6Mq4O2gSO7Y6slqV+PCmlvl7W1EZJdPcO7
Ht2CZXYK22WtPjnvNqSlkeLfPMwQWejPFkfcQWNY4RdzcxaQ8xsxEpZQnha1
AKsUIV8+/ecu+tm7f/SwMiV6hAgsFG4W60yDG1U+/z7yet4a1c5tdf+krwkD
/Pn5pg9fu1udiq5qmv8QTZfeJdZFGBC9zRAYp3rZbGLAYCwpq7FOhGcR7byK
wM/6HyPVN7SYYWqNNJ7Hn2HMFmx9HFSenL6I9NOC4oLAppbnbCS2rqAU4fU8
pwMtfp6kvzbEe8ujjGW+iPrgm76+vg10KSPs1aZVpN8n2Jc2qRw34mATM4jq
EJcuZ48w40NJ/0+Ry1lr8zpjMzg/UKMdmocLM45EbSN+tMOfdti2TBQHP3V1
9Q7wVwYHeQl2EX86oFmZVaPXnITv1OqDFB04w4qdLC1OJn49B63yupmfcyoW
iyMoRZDGOuxJbkkn+YrxLAMD9KQs2GpRHfyFsDCLbpZPLj75+QIb3qmuSU7m
w5z1cQOYISG0nJp84u9L6PYa22lZ5mEWJce4E6zy+cU+Tw4Tvzvh6q9k3ruY
jRk5eylHca2rK3hm+CHifzeCu9+JhA7poF1NVSfQjTv7hDL+lTSSRw86TnuO
FfBTsV+9mpHSg5cnysyPLkwn+fTAql10ue1CJnarTys164VjfMMtpkkmyasX
BuJBecm0FMTTKcG9GDuy4pDOhgSSXx8S74p28Rf9hBh1t6ei+yDY1xgnnrOZ
5NmHjoIbPN8ZwdhOLdeXIGawLqfkpCfJVwKL4X43eoUrtqjdLqqWYOZ/425T
/ZaTvKXQd8opqxGtwkbKHq4UAdHn6y6rOCR/KTiKaPsCv2CsVad9Yko/ajUP
zKrmeBMe+lHEuG1v4+iKNerVhuX9UDU9qTkjcyB89OPnrx8FvtF0QQCbClgG
h5uxGsfoywgvMvAe5Jv7xi2HDyV/TAZhXkYV76wH4WcAwpW2N05stMdyCpei
AazrME+85mdIeBrAdfM0K72jusDbnsyZ7oMQ3NO135ZtQ/gaRNEftwR6zc5w
yZM450kGEbdk5f5MLQ/C2xAEinO9McHucLSQjejkDMHHkJN0fIJN+BuCg8nw
DqMOJhbVDv6aaydH6+/WOye3WBAe5dDoW8/Q1rOF9cfrI4c8yPLpVX1nwqcC
gj0B0ROtrrCkyu9V4Mo41zq93onwqsBsln/12VwrmFK4MYZhZ9a5w3yxNuF3
GLMrOt9Pd6Jhjj4F7DAu6o1NddGyIDyPICHIW67j7gCj8r9ttKJGENi+5Ijt
V2zC9wiq0ya9pE0s6LpTBinROqqxpDbLlPCuxLIZpZH8dQaYTsV7VYmKD2d/
kVgsIPyPgrtQqbtm+2JofwRuFOPzwpXZUUvJfRhFTMG46qbar09/CxVCSu6X
Tiyl43+0y+Fc
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJw1lQ00lFkcxlWYtq1Eq1ITZiolBpUw7ZpnMEMmgxImIlujxVLGqeSjfGQN
lYmtTqqzaWuTdrfDWkLHWSqlrIg+JNnG1xgGCW1Ry87b3O4573nPe+69//v8
n+d3z8vYuXdL6HQtLS2x+qHen0eC0xbP+/y7nMCqLRefFaZBPyvaP9Olk3yf
Av3G5fAiuoIz0yRx+BYtDxnTtFwa6HIy/wsCVp9dFbngEWft3u821rddQ35y
4tWTlbfI+kI8s1tw6nl/EyeamjYqhla+2N8z5/P+EhTtEmzKqVJyXBcG7Wvi
l6H8or/c+GgvqVeBuXk/D1gLuzlLayX0WkklUnwH7Hef6yP1q8ARGzv6VY5x
4r922flPQzUi/1paMxo8HZrzbiNb2iEROs5C6EmhXav4DqSLWWKfDzRozq9B
/SmHvo+NU5zNKv9ZTybuol1/vNAwdYToqcWF+OFDLe1vOd9Q5bPv4+W+rgdp
2jRo9D2AXVlp9A2nBVh5PrL4gdnf0O0xSnkTYAyN3npoZyaE0kJMMX/0QHpN
5UNk3Nzr9+bf5dDob4QqJF/PNYOFpCvc6zvMH2G8wyPV7Z4tNP08Qklnk9e6
H4D9TXxKEebJTpSIvnUn/TXjypog58zt3oj4T5ASUNUMYd2McptuH9LvY9DL
ghucR0UIMfemOsSK83rsBr0Q0v8T8Ce2PS4vCIWfLzWeYlV4bbGH2R5o/HiK
Br/FbJZlLDzU1dU7cGG78bRajzho/GlB2q3IyU5BIpzU6r1VLTD1fTjG3ZME
jV/PMfvVC0t9VTLsW8WUIhx8L3e7M5FK/GtFIpOZn6srBUuH6uAFGhb18zfY
HSN+tkGiigm6ys4Gc82nDTBHo8GgUTbx9yUSPo6MHbh6HIsoOQvboW/VYmjj
mkn8bof1S8eTG42kmJsZRzmKelGu/W8NR4j/r3A8jqU7tSQJM0oPqxN4hXTu
jTla0gSShxxHCy7XvAmLwyH1apNEOVo9tXrXJyeQfORIYMUOXbRJQqz6tJ8Y
HRjNcbvk9udhklcH3HXH5kiXxCKGTgnuwHXLmEltpoTk14lthywsPUt3I0rd
7fnITvx+280glBlI8uzEHeP7hR8bPRBGLTfognMQY6RZtIHk24XD3pf2+KY6
YJfa7dyyLuzLkQUeeccjeXcjmiZyyRJuRjBlT1A3zlSm4lenrST/bgwPTs5K
GfeCSJ326ek9OFehHZPeyCU89GDiA/9m+FJb+KhXf1XQA0X1FGPZfDbhowe8
o+HX6k7w4WlHBaxAwK6RsD6ukPCiwDKbyHnfLxTCnZI/qgAzr0hg5c4j/PSC
/y6jZVGLNXgULrm9iIryPnc7xpDw1AvahPJYerwF8F5+RI+jRHP8Coe6Yi7h
S4n9y0t22MW6gS3rcpB1KeEzZCs5scmd8NaHumQXK/NveLBdrhicndmHOYwn
CoNaNuGvDx5z/3B6xmDB+qby0jGrfjS70ujs0+sIj/2o/1GpzcniYvWn69MP
1BRNyms2Ej5VqBSEKKQB7lhBlY9TwcR8psl6gRPhVYX59yIMK6KsYErhZjIA
Xps4QsanEX4HkFHLPFP9BQNLDChgByBKyzqrHbiB8DwIWaBEWcfkwbDgrYVO
xCDMQgIdr+TxCd+DiHEcDxNUAPM4lEFD2F+ekd9fzSK8D4HvxX4h67HAl1S8
pUOwrrCJsj/jTPh/DaOHhWn0Nm/ofgLuNTaNxpuuDN5K7sNrVB08bTZjrRc0
f4thKHXaraZ01uF/M43dZw==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1:eJw1lQ00lFkcxofQhxhfZSwZo5qiTUkn9HEfoaKYyCpR+qANtava0rbH+sqp
1KZOtS2JUjnpwxSJyB6JGkWRlBUyGDMYo9FsZKzdnbf37T3nPe+Zc+/93+f/
PL97h7c9et0ObRaLFa55qe/Xx13iMtLAs0FI+brLb+8kw9f/eCRnyTLm9znU
GqTL/To8MIEbq6wYfwknGgse7DdxZ8avQREvu1wmdMWC6J1etS03cFMZmxSR
YM/MvwPXCh/h95+tsIcatijAoJu1qsB/OrO+EA/VaSFxMU5Yab55/6sVxTD6
seRRgs/XeiXIGg3UmlbugmmivVaivWWYlztk7rHRialfDs9bvIQF123xyxKP
7e9fPsJk/lh09tHJzH6P4encHx+lZ4gdZ30XNYdXIsk8bn3PVC6zfxWOxBg4
jnvCh798w6RG9RNkzJd2VufzGT0ivBgd5RWxeFhKlT9djY8TMxwOepky+p4h
fK0wtLVSB7Mydhc849dg1rehyXVEh9FbC4FV4wZrKRumqpgjVWUvEOzYLzU7
ymH010F3b7iJZY4V4nPc8rbY1aOmKEkZtIbD9FMPa+/ZjhJtYxx4tYJShOCn
LHZQoA7TXwMe3c7i8bMVJGpsdWJweQMmJTuYRth3ELrf14ifIA1VP1eRrXZ+
VIcQJZ65K43XYvpvRF161aqnwzpYH0g9b5B32tFLFaLN+PEGyz1DIi1ejxIf
TXXNCvAitXxbI2WE9qcJy392bAyNaSHLNer95E1YM5Qv2FYsJbRff2HsZPqy
kFWDxLk5nFKEi4OqtPPeKkL71wwXU7HZuWolmatLdfAOLWmlR65clBDazxYc
M4x/0H7hFbF1/LIA2zyr/slIEhLa31ZwLnX8ahtwk3AoOeZt2FcQsemZupzQ
frch55PwjPNvVcQw5RDlKHKt+28r9coI7X87dCvzJVe5V8i4+3GaBNoR9uds
kmmXRug8xCjc9Xevc2Uh+VUzmxsrRnuIq4N6o4jQ+YgR52rUYnuonhzU7JbJ
68CF0vcphyc+J3ReHUhaHPtS0JtH9llRgjvgO8wW+UiOEzq/TrwMyJU/jKkg
P2i6zdjdCYOMq6WX9ZuZPDuR2PAuLp/bTSKo6SZd4FQ3LXKzkjL5diHh2Lrr
TTPbSJjG7bTiLhSpt+hV95YweUswVK80/Hj7HAml7NksQcdK5Wuv+c2Ezl+C
eHn61uyQQRKkSft37W4s7UuZqYxSE5qHbuQs4+Y42WshQDPbLLcbZ7IC3J2O
sRg+NOM2W91WRw0RwSIqYCkCxlcszhsWM7xIwckk80dO3yXelHyVFEGbCk9N
5bcy/MjQX/bc6EXmCPGkcEmTYTD23s1b3+iD5kkGj0CW4YFaY+Cz+DCb9OC8
m7jvD6EBcx57oNoUvmd/3xhxTe1ySe3qwVPCXpk+5T3DWy84xj7shNbHZOEM
qWJySi90T07Uyjb7yl8vUrWKlt6Qj8e80p4rJxz6wK2POLVw2Bg0j32oK/RK
EGjuD/svx6cPFuqWwOiwccx5lyNsnmwXd+0AmUmVPySHtnuUZbFLM8OrHAVP
6l3lZ1XEhsKN2493/Dk2wXl6zP3QD8viBoFPkDEsTShg+xGnbdsikBmB5lmB
5DALMdtBF1NyP83RjVLgROLI3LJPgwzfCpT8NCPogb6MGBHKoAF8HJol+s+G
BZr3ARR3/Vuzs8oY+lS89wfgz8kS6h3gMffPBzi9XbDk4vrZ0PsC3AdUpHzX
MAd2oM/DB6R6T/ezrOGB/rdQQjH9WuW9Nh38D5H77fs=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1lQk0VXkcxy3PkqLn2fdn7VhCC2Uy96vhNXFK0VhmZKl5ZXRCmpYRWqZM
qdFUSkpkTBqNymljWt4R84yMR2iRJfF4wuNxOCFZ5t3u3z3nnnvuuf//7//9
fb+f//9abo0P3KakoKDAl9/0c+5at1un2dpDEWFlgXmvi4+h3UDfZYHMgryf
R+rhNMHCPDuoWyQPl6tdRbVLibZ1py35fg2Hy8aaVSq4WBofvVbUegPC2sC6
oFvaZHwxBvNa/Th6H6ld9Geju6jSmD47P+ADxcy/jyGBILpemY01BuF7Gnil
WB/c+LM3z5TUe4gcM82KFB0rmFUlmFYlPIHRSIs597UVqV+GzbwHXZnHjXFg
lffW9rqnUKwxtN5epQVmvQr4ZRlbaPjMUNsy1rs38//BytUOjuWbJsn6QsQV
rAiMmJ6HAGmIxsvJSuRX+iRfPadL9FThRZHQI/KCITzp8meeQRhezIvM1Sf6
qlHP3WldasLGouydd6vtamBVZpz+pmGSYvSK0P37+X9D2wYpndF9vwif1CLm
Xrpl0n0W0f8cLHZig2a0Hg4VeN2KtK+H5DX/VcjfpqSfejw7kZ2SHW6BvQ08
WhHY0sWGV8RmpL9GLPptJM9Goo0d035HvitrhEOI9HpryhTp9wWiSngJJi3D
VJT9RrpDNOoszeWGzOX9Eo/SHZMeF2ghOIi+XsE8RK18IoND/HiFwI2N39y6
ysE6eXX5DMzcnNgXFMci/jThUNIJL+XaCWq1XP1GaROmxms6rLQViF9v4GrD
8vTNUcOKZj6tCIqVUZlKUxrEv2Z4Jd/hixXVsViF7qAFVJVEPcd/lmL8bEWY
tiDXX3+UslryeQKSY//S0ikbIP62YSrtzrmuOhllSMsxeIuKMY0x4+3DxO+3
0LoW/Yz6dZjSSkukHcUK0eGYJqcRivH/HdiiGYcio3FK+cFBeQLvcLs1tqVO
MEsxeXSAOheTbqOshBT5aIvkDmQ1bfI2cGeRfDpgrF+tpaSijv3y1XIsOxFy
wLPZMl6T5NUJ9brwK2uC2dhtSgvuxCHZbdeLoRySnxgK+vGip55sxMq7zd4p
xv4Nl/90v65C8hQj+PTsw1MFH6gf6OGcLjzn6pZm7B0i+XYhVPUPXnmGMr6X
u51V2gXOF47lXkUcMHl341tWQlSpqQkiaHvCu7FGUFSXtsWY5N+N2oHJ8NXR
CxEqT/uCkgSKpmaZE56TFMODBEkvsyGcVcUm+WjdQglye/Dc+6MZ4UMCj5sj
P8bK7OHvTgfcg3n7s0SF086Elx6Ylzr3LT/mAF9a/mgPambOdjzuNyf8vEdJ
Y/7B3EI1+NC4ZL1H5n+CXNEFNhie3mNDRFqFrrYdMNFxdCHViy23a8fvKS0l
fPUitbiGGxG5DB6nu1ae7uqF7TobW26RK+GtDwfe9FUrOdtiuU3P4IK0PgjH
3ARxtQaEvz5UXvqk5/uTEVwe9eafcu5HqsHmtiVOToTHfkxvOZ6oqeoGh8/b
px/R7b78sDYPst+liPbOK/QacYMtXT5Riga/E7o3Ti4Cw6sU46ORrsMFGuDS
uFkMwD6O/ykibO58GMDJMzHK+cFWMOHQwA5gVful2dn7y8DwPIjUqTjxtT0r
oVf4wVFlxyDc1raxmu+4g+F7EE6ud4Ms3VzApmiDZEiWCfuOuNiA4V2Gyx8n
At7quGA+He8DGcQlExXZR78i588QNPQPUgVu/lD9DNwQOO4Xty/7OgDMfhjC
kn67VCOhL5i/xTCMfL403SWv9z+Tydw8
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1.}, {0, 0.01633276064770609}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=2.6(meV)\"", 
           TraditionalForm], PlotRange -> {{0, 1.}, {0, 0.01633276064770609}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw1lQ00VGkcxkOkkUmiIZ9jNCKEfNSx5z72mNr0nUposVLRNBJJx2Y1zra2
dA62dmV1Ukihtc7aPjamrLIolY8ks6YxH4yJGLtOpdk+dm7zds+555573vf9
v8//eX7vveydKeG7DWfMmLFLd9PPT5eyKs8jYIMxdjSFX+irO4aEetfl7QoO
ef8Rkrt+faKXnjB1yppsnnUe5Rcrbd6/9CLjF1FpUGWdudUDfimJqx8MVENS
6zJermWT+XUQVsfc5Bta4gA9bFsPXusJvqjkX0q//iqMLsWsrSurp1axYtK7
V94A8/bFKI1QQunr3YTD1ZllLI6WcmhLtW9LFeHqlan8/rrZpH4TpjKKHuSp
LfB1cOhO6aM/YbS4zGqJxIrsdwcZVpPJwSJr7D69PlC86y7Gl1ntk1qaE/0t
CNHy+gQ+r6nNY9sZvdq/EN3Z5mce1EX0tMGybz0v1XeC+owuX9gO6eXfNbNj
zUm/9xD8aFHXnjAnuJ0V1N/jdoAzr/rggIADvd4H+Fbcm9lKOWL+VEZui+gh
Sprf8u/cnk/0dyL6YIb5oR8McLQypDbOvQsJSo135nkxpe+nC65BywJkTxTU
oe6VtCIESIPs/P+bRfrrgbd9WKrUwQb8d2tyopt6oCkeiDda4Ez6fYyoXo5t
cogzvnLfRHeIY068rYktLNJ/L/hzjAraF5giYht9PcGlrqTgiXPTxI8niH11
VFzUwcA6XXXdChiUXxvOTloIvT9P4Yb8M9wwV3yuU79p7CkiEh16plVc6P3q
h0i7XWIjcEGQeBetCOEdmopuoTXxT4xf8qIy478zhJcx3cHfqMluZjQWv6b0
fg5Abp4Wyi5lwMX34wIwTg+3JvRbE38lGMvi2samL4ANLYf1DG+va8cdjzCJ
389w+4JkSt7whmKeyKQdxfw3nR7MEg2l938QTqKI5NOVpjC6lq1LYBAL4yOr
+XEOJA8ZeL5v1jRf4uIb3WynLBnUbi71xf5ehDcZZK9WyVwtvXFYt9s5thxp
KVsqFjotgj4vOQpU3m7TTCuk2dOC5TjFKNUYNH7iU4G4HV+6jax1RbKu27MC
BQoe3hds/MeH5KmAv1BouyEqEEn0dEslsnwFrBUKf5KvEs3PfFKHRJ5I0Lld
fEOJmrL37YPpNiTvIWTsF4fbFZohlrYnZgibjrhnVDPsSf5DCP2i6sBExRJE
6tL+yXAY2tkWtzpy/AgPw9hstFe4ek8gtuhmW1UNI3e01UDODICej2HIeA3F
NgHe2BBIB6zC3IGIMwc+OBJeVNg4gA+iy6YIo+VPqdDCWBoVE8Qg/Iwg7xU7
a72JI3g0LsUj2DZS3ua5zIvwNIJo21r+HwV+wLTs27mUGqmBv6VzOr0JX2qo
kyq27Cxyxop85fJ8pRrrumu+jx0yJbw9x5UMr8ba0mnK31U1PufEcxhY+pgY
H7Ig/D0HKzrxgmA1G0sb1OUnvUcRmrLb7mfhYsLjKGbZ5W6sHeLA4+PxGUVk
noO98rgtOe9jmD57syni8UwsostnjmGvqqXqVs0kped1DP05D7U5v86EM42b
0wvI911PZa5iEX5fwMcrjmstZ8POkgb2BXp613qaMVwIz+PILskxT/G0hXXV
yyXG/HHsebf9/mGpGeF7HB3a8+7dvA+UBUUbNIH9aYKOU7FG0PM+gciDmSEm
JfNgRsd7bQKFhVFrFMedyfdHg+ONOY3xYVyYfAROg6m3rLodEVxyHjQYLDqp
mjrmCP3fYhK50obR0iMG+B/eeduk
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1lQs0lGkcxomyp2IoY7KNXBZDNWU1mGS/h1kzqWhzCQ2VQtrSIbpou9hO
0W3pquW4pC1ndXGSrUSdVJsjxyXpMu6XJoMZg1aEYe18zbvvOd/5znfe9/2/
z/95fu/5LLfG+EVO09LSilA/9Pv/kRO2huWX1kuFlPnlvr9zHJf1nE5crNKD
5vsSJmtTpTJHI3xjfmjwmd4VMI1rY2dnGJH56zjumHGy/IIBHGOivKqbb0AQ
OlJaWa5L1t9Bnqd4eL5gmIqlp02L8FxyTDaxpJGcdw/Re7K32YcXUiLWxj2v
hcVQDeuf5xYUUpp6JQjZt/pgXWIdZVaxm12x+zGUC9hBWduklKZ+GdZb2p9p
5gxSv6z4cWtb7VOkKq/llJiMk/OeY92FCdXOG9qIvOjj3BjxN+TZmVwXvyly
/gsU3HXfJnnxD+WrCJr5drwclGTT2Nm2BqKnAmJG5ES5zhvKjS5/7iWsXynC
mpJGiL5KJAdkmXEZDHAyo4sqbauQ5e+14fwkCxq91UiRVBnekrIwd2hf8ovH
NTD7i6MSpzCJP69wOfLG2Xw/BhLz3As229eBUZRXaVf6L+mnDk+CZitUO6XU
3tdCWhFcn+znU+gk/dXDUiBKqBZOUDsmVx8Vl9UjWOjqFafQJ/2+AX+uvqqw
iokw+3V0h4gdtuU0PDQh+b3F0QGx3DfZCIHr6fEOxazlge9nzYDGj3dw/fVY
S+mgHrzV1dU7kLv3S4Xv+7nQ+CPBWEJS8KjQCh5q9esUEiymfMbbDRdC41cD
BplXba7ZLoJLYwStCIOPFt90rrchvDRC10aak3xwPrjT6Q6a8DDnVkw+Zybx
sxnH0z8PbV2jB6vvv27AdcPHV86EMYm/LYjfeFhh3mCOebQcVisiUriynBoL
4ncrfvP/srYsYx4MTh2gHYV7wVioz8D/fLYjoKb2UfYiFaVz/4g6gXYY++Ub
XDMxIXl0wME6rJM6ZIfD6tXmhzogG6rflcHnQZNPBwJ4la2v2vnYrz4t27IT
6fFOxg7yZdDk1QmTJeNT95utEMemBXdixhZFkNkgG5r8PqChflbW8D0udqm7
zYz+gJT0gGj+Azdo8vyAp7oMhShQiO308jlSaG2XXSxZLCL5SvFFvDLG0NgD
4Wq304ulON3LLll51IHk/RHxQS/vtN22wCbano0fMaXtvCf49EKS/0dU+Erw
u64bgtVpp03rQtndxBH9Ok/CQxd0EpiXCgvXwF+92ji/C5EnMwVTQd6Ejy5M
XHc15VmJsNaZDlgGN/fvtvQ18QkvMmhtDknzN7fGKlr+kAzzsv+8+znGgvDT
jfDqprau4mXwpHFJ7wZLsSDGlC0kPHWj9+e34pxOb2C04xiD6kFyi4p1NW8V
4asH4p90tU1bf8DyVCk/VdqDI+23PbKT7AhvvUiIGAn91tEYPGuZcvapXoSa
n9gQMMQh/PVii7itbvW5FVha2vPHmSVySC4xWlxNhYRHOUReG6jicAEWfr0+
cjx3ihM5JC0nfCogiOKNmp22hQ1d/oACihqz8GfNBoRXBXJdOtwnH1jAgsbN
vA8nx2Z2W/XzCL996P/kwnUO9cD8OTSwfej+JNDedFZAeFbCO6qBIRGtADN/
eNH0HUqMGh3RcSleSvhW4qZrhzw0zAqGFG1QP6LS1qfwHDmE936kVxuwtWVO
mEXHe78fuZ9846ZWCgn/A0hUngqJjffBjK/ADcAyPN/NwHotNPdhADpuBwM5
ck9o/haDMCwa99vHs8N/l5TicA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw1lQs0lGkcxodltyIsOZoSYTZEakrFwTzJJVGaUAy1xjRTuRvrllQuLUmp
pe0Q7TrhpG07LJXNSQpFJzVh5FLkfplLKSdltsvO1777nfOd73zn/b//9/k/
z+87nwkv2kegSqPR+Mqbev5/uZuazxlNbEFQg0/Js8rjeLuoQsg6vJ+8n0Nh
9YkzssAYzDNOmb733e94WbQy90RqDFkvw53gKvtwlXCsjT7g0fb8ChjVXR57
RMGkvhLzXBgxHlc9EUMt06tB63dS6BQ4k/3XUdoUGP/Ryh/uBnvj2t1qIQ0r
y3LqFJB+t8DOO9/LqY3CshahYYvwNnxFS+piZ4WkfwNUVqWUpByNRLKDC2/g
yV3YbpYtfKMhIOc1Yt2CqNNeWf4Q5G/f0MtvQmehQStP4kbOb4bi5yRaHIuN
nVL/BWLFfZS5JOtvsg4helqQXKbQdq4MhyPV/mwrZo+v1W9jCom+h8r64aRs
YyHMiyKqH654hByJNJTWxCd623DwnvszV30v6M0kZDbffoyLDHuzYvoWol+E
AMfiL+56IThWvulasOVTOD6XaJ80EJJ5nkKrtHK6pTYZ8e1ulCK0e4kH4tTT
yXwd0FmTspr1fSrCPnmmBTZ0wNRGzcGpLo7M24kSunWrvIsHriWbmhApZ5tD
1eZ7k/nFmBVFaybuC8TuXdTVhZ/0ih9dd40mfnRh3Y6FtuoOh7FN2V25A9pb
dNoYHYnEn270/VFvJlb676xUz5Z2Y8hqs/h97C7iVw+Wn2rsCXrhiI29fEoR
MsS14q2HOcS/Xljw7vNLeTFYpU5N0AetKPpvmVeTiJ/Pceqd2GCnOBmmzK8b
cCHeTyNgRkj8fYG/6/OyTXZwsZiSY9APWdqR4MJyDvG7HzO0NoaNMBxa2Yco
RzFxrH1FemUC8f8lumrS6Ub7k/DNjaPKBF7ijbnRvYfm8SSPQXx09o9IuBSG
I8pq45RBGNZb/mLFDCL5DOLIZbpcTeSFROVpF02GUD46UGUo8iF5DSGA46aw
l3IRa0gJHsJ07JJmJ2YoyW8YbnP5tGxGOCKV0xZFDCNuvgNrn90BkucwimPz
yzWXcnGQKtcdQavqo9Ll1dtJviPIyfvHsma9HfYp3S6oHYFCVZPTMOdC8h7F
zQL1JTbDHPxI2bN3FH7NpzM/ZwhI/qMo1JGc3yY+gABl2r+qjuEvg6CiyJ08
wsMYFH4JWed0OfBVVi+qGMOHdm7f0DUPwscY6jhnOpt8mfDeQAU8jm4Nky7J
RybhZRzr9bK+LDX2wFZK/sw4Lt/iWN+8uJvwMwF7rYGcnhV74UrhUjABpllk
JnOSS3iawJqOc9tH+HuAD4MZ2qxJhLku6FVL9iZ8TULFtNDiw9xa2OeO2OWO
TKLtLT+h+6Q14W0KTlqst7267rBljMs1s6eQYme1rcoigPA3hUaxmWf5fS5W
101eyrGRoGSDdnQgL4TwKEF9/p2hwQd+WPn185Eg9bNHh86UM+FTipILKpLH
nhb4gWp/SIqI26JFh5zsCK9S5ErY133y2FhO4WYsQ+WF2tTQ2UDCrwxRNc9y
KgRcLNWlgJWho8emv9w7iPAsx+Iniexdi3dAv+KdlXqYHFXeow9y4UT4lkOb
l/fA97g9dFiUQa/QmLR7I32dB+H9FdbTPkeUWPhBg4r3xiuk2/Y1fZJzCf+v
kfik5q44RIBvvwL3GpFpX85f+ZNPvofXYL63M5q6FYT//hbTWGb9jiFLA/4F
vdHiGQ==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJw1lQ00lFkcxuewYVtns6UQNZSJsj4iyRoeppGmw5ChxFFiRGKnqVE+JtVq
O9hSrVValbYkSsyK1YeWrMghH5HC5nvMyAj5qBy2nbe9e895z3vec+/93+f/
PL97XqNggXeoCo1G4ysf6v3/mJjSkhg3LkJAuffVtsITONi4RmV8kQ35/gWF
wtPzc/qZ0KCLxx6rZ8Gz3HTexV4nMp+Npo7p5HgXB1gLwjbXd+ahrcvI9XL2
WrK+EBWzTu4503Tsp6b1imCaonHCr0yL7C+G669TPncLGdikEyhqdi3Fhe03
LItFdqTefezdzkx52MvCshqhQY2wDD5WJr2JZhxSvxxedTIM9bkhzmFjcFdD
Bf4p+ZSozmKT8yrhUy6tHrZwQGiax/p2/l+4p2t6jzdhQs6vQsex7mSLqwxs
Hd4+v3XmCYqSDKL9JPZETw20muVl9TYcMKnyZ5/i2wYtseSIN9FXi/Mr7dM9
onxhkhlZVLuqDnnv42T2aVyitx6BmgZGEqYdFk0cOllV9gzZQ4tbom0ZRH8j
1h2aUYwxmTh6w/nOrtVN2Dn7u3TUfivppwltnHOZjPBdiG52pRThmrboor8s
jPT3HGLD65et5WGImNty3L/8Ocb82TYv7+wm/bbgHd35jMkyHoJWe1EdIvdm
fpZmuCPpvxVz7G1czXpHbPOlxgvYrHpE627jET9e4NWPZxPe7eTDXVlduQPB
YeI5m3E+8eclFDFX9H9W7IKLUr3X8Evk0JyLg655Er9eoajPYvN9fyvYtfMp
RWCa/PGRnWxL/GtH8PvbcVF5PJjPozroQFWpR2xReTDxsxMa1ddL3/uGY8Xa
zxug3m5dNasfQvz9G4rU4okdy3nQpeTovEZOtN6HOSab+P0a7/Y6DriF8vB1
cizlKJx2O9Ae5IYQ/7uhd8u2rUk7AqolCcoEusHXGFwcaRlJ8uhBXb37mVM6
YTiiXE0X9+AbXqZxfnwQyacH3vX5Kdl3eTisPO2yUS88oyfjC2Y4JK9e0Cta
VS9Z8nDAgBLcC8HHmM4FL4JJfn2gs2577nPbhyhlt5mRfViZZbzWlCsgefZh
970n0i8boxBOLV/Yj8nKuGeqC/gk33588gkyR4U3QpRuZ5T2Q8LgPFRrdSZ5
DyDOcWn6pIYPdlL2BA6g7GTXb6riMJL/AM5rX1WhRQrhp0w7XUWKFQ2MR3nj
QsKDFH+6rkwp0BeCp1ytnSuFh/Fqd5bdXsKHFPGxulnnE/zBXU8FPAizTcfM
vhtjEV4G0Xjui/HkVhY4lPyJQVzQMmAvYQUQfmQQybkzIrsIsClcMmS42Tru
WJAmIjzJYL9x9rGx7yHgQ0/iAic5NnSJaar5AsKXHB01JXTh8gDYp/ZvSO2X
Y6E8YOBImTPhbQhLOS0Dly65Y53x4Ihm8hBKuM99E133EP6GIEk/3LZi8CAs
H8iv/WTxBketKpLCdWMJj2+wx6ow5nvPA1jz+fq8QWAop1a+kU/4HIaa4dbR
9mkOGFT52GHMF8hokgYXwuswTrw+Z8TeHwRDCje6ApZ1Gacs1wkJvwpsYqVb
pTbHQH8hBawCipZK/S3VhwnPI1i6/6ntErYAi3OnzOZFjEAY8iHjVnEQ4XsE
3RJz87s+O6DlRBn0Fn51mrGnHfcQ3t9C59mF2hhDEb6i4i15Cz030+qLXj8Q
/kcxdKXLpSMhCWqfgRvFKmu+U1pBErkPo4icknMD1Y/jv7/FGKL1K5sCJSH4
F6iL5IY=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1:eJw1lQs0VHkcxxnRLCKMPJLHJGKy0ql2e+z/S9Fqj1bLrqRNmdCekkd5nEpU
2qJO2FVtRbt6cNQeK21WpCWrY23lzXgbxjCMV6bUVszO7f73nnPPPff8///f
//v7fj//e22EET4hHDU1tWDVzTz/vwJKQ/bX6ynIjnKf7NaCU5B7xuiHDhiA
fb+AzX45JxfpmINrFT/5eO4v8PrzfITOQXM6fgsWbaWJj+YswIqIvZ7POm+j
Tqm2f/tzbTq/ANGrfwznJUyTSGbY7B72eOnM8z4uofvdx2UBl1PbN002meyM
bvAohpZrVJvV93NpvRL80RK/8d88AyyqjrKojiqDTY9Zcme1Ma1fDruhH+pS
XxviyLqNwp7aCnQMnyw95jwP7H6VMPR8KjwfoY6QjC2r24P/wnRXUJcybZju
XwX15h7xwzNS8pV8m3bz2ycIzsl0Peb5juqpRtAuR1GtjjbWM+XT/0bN8qwy
X2tDqq8GUeHpN6UVRrDPDLtXY/cUyYU2fuaLtKneZ4hcfr9i5rcXxEgRe7qq
7Dm6/gnNNarqJ6z+OrTKC84uy58hiTmu+bsc6lF4M1lYCAPaTz2CT/u7NQgs
EdPgwSjCnmeWtW5xdrS/Ruh/2xK3NswO+2a+OBFQ3gi/U5cSg5TWtN8m2LvE
tIszjLDbYSvTIfY/bWpabzFD+2/GeXubdIdDYuL3DXO14Ar0tjYqJqgfLbjx
qtHLebMGvFTVVStgb5YQzRvhgPVHhKXuvlYZna+Im0r9VrkIY7Y1gVm3RYT1
qw1mvXdXdV+XkU/agxlFWBK3wko8ok39a0exk7zCj2cNJ02mgw5Yze0NUxQ4
UD87McXj/xTz9XLwXT4sQMICJ0lnyTLqbxfU87uuesr4MGXkmHTD9qKlmtdz
Hli/u2F8Z0B5dT0XeimHGUchTxrdFLJbg/LTC9N3e88dHVOHRlGCKoFe1PlI
+EUHZmkeYmxM4nCVlybIMdVsq3gxFmancdp+rSJsPmIEzelfN9n9hMSpdrtm
04cNYbzxeL/3hM2rD/H+K8P59gY4aMEI7oNpglu/o9yC5teP+Ai+S+QyPg6o
us0M64d+jOORW8LFNM9+uISmPVgp5OM7ZrqhBNwT1cXjfeY0Xwmcs+11S3bo
Y4/K7cvFEvx8/HeR3ssZwuY9AKdRW9PwG0oSyNizcwD1knpXyaQOPb8D4Ofm
Fh49bAR/VdoXOVJMZV09OB1oBJYHKWx6Zc4tpQbwVc3m5UmxIFHwtv0xFywf
UoirStUmY9+QL1czAQ9C4PUyzztMQlheBnFfZiJUxMvJZka+YhAeD2uGfBar
U36GULWvqWypTBfuDC6Xh8B5sNfev5wHlqchBFSLptxNjYE34iR9IsOwU2xs
6kldeh5lqFybnV0Z+oasSZV8miqR4cKTa9E6QgnlbRiB3jkdJ0TjZKXt4Jhu
yjDyzG+bjUo5lL9hEIGbdf/NeXAuld049/EI6jWqPn8hnU95HEF+U4S+iYcW
HD8cnxFEH6rc9tJ/mrB8ynHW9tCm9KA+soQpf1iODXVXOjy9hwjLqxycbWfc
Wj+aJdYMblaj0H5t2bx0iEv5HUX7mHtiplIPCw0ZYEexpaTbJyBFm/I8huTZ
8Sua95TEOO+VQHPfGFyDuZFvpybo92QMIr0irdxdMjKfMAaNY8ND34x8awVh
eR+H6PqpHE3DWaLDxFs0jjvXGh7lZXEp/xMQrBK9KDqgB60PwE1g+myPe1qr
Lj0PE0jZXnP3Mw0NsH+LSayZfU8QICX/AbIV7w4=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJw1lQs0lGkcxkVyTZkVug4jpewgRbWb76l1aXMohTisSC6tVDi1yaYMbaey
abSkDamptqRyidTsSHKZbC6xMRnlNrlOLi1ZR3R2vr5333O+853vvO/7f5//
8/ze8xkHHtwRrKykpBSkeOj3/4OffBpP0/iUb+mOq825JyFyPp1jPp1HvlPA
LXnoTclFlDr72EiZWhZWzxzj2Vx5RuZv4Hi5JNU3pJKyPhj6fU1rNtzrpra6
TJaT9bmYcZf9LGhbCRVBT88vQGDkEvUoWQ7ZXwj+EN9SmpFGORn4HWpwLMYB
Veu29N5MUu8xsmPsx02kxdRiceQicaQI1dvvdh6OqiH1S+GTIHCsSm6mYr61
D2yre4pakZlOxVg7Oe8Z7P5otIte3UUF/+Zq2xJUjiMJGclClpScXwHvTEMt
NU0xtV3upflqshJCk33GWYU3iB4x/DiL8/yrCqkNdHn+c2zTbvYyamkk+qrh
aVXXTMm7qOXp4QXVy14gNq5S08Gtm+itQabZpwHhsTfUV6M/naoQ1UJ/1/l9
30W9JPrr0RaS6b33Vg114ubGe/4rXsJ7bvTk1f420s9LcN5qGN7v+4c63OBI
KwIaX/tvyFUB018jrtvqacXmaSFs2pnnU9qI2J8j5s37dQ6Yfv9GtEawJKlb
BwEr3OgOEeds7yqWqoPp/xU8RgeP2sxXwk5PejThnNA5Pp83TPxowubQz5tH
I1ooF0V1xQ5krLdJrL34hPgjwfFP6VrR5/6iNinUu8klmJFqZsMvbiV+vYYH
1g7GZ/RQa1uCaEUQzd7UP243RvxrQdjIh+nOtJngqtIdSCGcoezS/i8LjJ+t
qIqxzg6TLwFn1ZcN8NJ1cHUN5YDx9w0ERln+n2yMYUjLMXiLD1zDEknDAjB+
v0XA5SnDbA1d6Jw5SjuKKRvpqwlMEf/bsT3tzq2FBhJKpei4IoF25G3wfHJv
WxPJowMLXoQGXFcbomIVq9nHOrCTfb/k0bUJkk8H4i3rW3VYk9QRxWmZxp04
sVEzpunPUZJXJzbyPhedy56gohbRgjsRWJqWYHh2DsmvC+cX3uN57Gdjv6Lb
9PAujLk4hVv7mZE8u3BFWvS7p4sl9tLLWTKc9NWcTiniknxlOCMQR6WkmWKP
wu1LxTIkhzzITD6gR/J+h5UXKu9sDZqFXbQ9fu/gY1rPFqizSP7vYN1/aJ3F
dWN4K9JOVe5GWZNLbMFjM8JDN1JO5ljp77OEu2K13u1ujPgnKofXWIDhoxvS
0YiGs5Jl2GpLB9yD/DenCl6MG4DhpQchdXB0FKlgCy1/tAd+m9xvXFivDoaf
XgTmVz0Y8lkMBxqXS73Qsdq5StWbC4anXtziSNUszVcDEx0Jc6g+pCnF/VIc
bAWGrz74Rj7m73bjYH2SbF2SrA+Xbmq7tj3XBsNbP1bpNTgU7Zii1iztGdQ+
04/8aoFsrJgFhr9+pHrozL3mvhSWwj5BosUAjHOrl/9YwyU8DuBrru83UF6B
lV+uzwDiy5wqki4bET7lcLo465F9nxZM6fJH5ehcE6GyKGucYniVw3U8dI+B
xmwY0bix3yOGf0TfcNiI8Pse5WWROY31K7GQRQP7HoLWu1wvsTnheRBq+UON
5W0mmHf7o7lq2CAuuCXyOLf1Cd+DEMTt5pz10MJcijZoCHdqR1of7WIR3odQ
WNd36KGGMbToeIuGIJyyC7i81goM/8PQHVO9MmJui1lfgBuGw8e4LfmnbMHc
h2HwTMQcByNLMH+LEVSaDv9gMaGL/wDwWOyB
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1:eJw1lQlQU1cYhaMUlQIiCAYUylJAlgoYUIM6HJSgbNWAEIwYKxDCIsqWQEFW
QevSMqC2UjQgVSxpa8NghboGEapWaZFFxAiyJSxhs4JVOjjNs7d35s2bN/fe
/57/nO/Os4xICIqaT6PR+OqHev8/2qYEFb3+6xAmCzr/RFoAi61OqZtjQ8j3
aYTqXBEebuNhkXnm1J2F5dAstE9zW7CbzF/E054pr4qKYDASon0eySWIsCtb
s3ibN1kvhWePorjjmisSqWmTGij5BuLwdney/xe4+rbv87myDVvoPOFj7zro
SS+5jLVxSL1rKKpe2iQp4MLsXpLpvaSbmD42c2f5hlBSX4b0JFHnjSR/ZGzw
iuj5ox6MBpZbdoA7Oa8B+lpG05YSJ0Sd+nRtF/8uFqUFnZZqbSTnN8IkIW/y
Vys/BKpCP2yfbYKgJWZU1sMmeu5hg0a/vLKMjY1U+aL7+MioaPCCuy/R9wCi
A1+Zv470wMqz8TUPbB+iOl5eHs13IXofIczIJPzjhUwsfZV6pPFmM+Im7li9
s/An+v/Ebxf9ep3pHORUel7+zL4FhitH//JL55J+WtB5MNHV7txOiB57U4rQ
9L1umk9NMOmvFf8E8hxrZlmIm/PL2yVrxYKsvZe5Zi6k3zYsO3pon+ktd+y1
Z1Mdgu7RfHtmHpv0346TGYxiuukucEKo0QHFxm6+ZQmP+NGB69d+LqN/EIYA
dXX1DhRNq0K5x7cQfzphIv9ylV6RCzap1bNVnbCQDNlHG28hfj1FCiNyT8Cm
XVjXxacUIcu/hdNbG0n868IleV8ecyQKqzSpDp6B/aSjuZQXTvyUoz6t3cHZ
OxRWq99vgHfGrMEZryDi73Pc6jLkmh0MgzElh94NgVTrxebzUcTvboRX7c5a
dzgWi4+lU45CaiQ+oTgXQfx/gdRT5Xm6+b7QuJqtTuAFanNmfCWLVpA8emGT
Xi0pntuKLPVq88xesGxXmJXNjyL59ELjhvgAwzwFaerTxJZ94DyvKx33FJK8
+vDqx9a7L2sESDalBPdh+LayfmdUIMmvH5UXJE/Wlm7HfnW3Z+P7Edt9ZPUP
CwUkz37cUDalybxSEUMtNxjAzRob5u7xTJLvAO4bxrJSdhxEpNrtkroBcF4v
l7rzEkneg8jOt5kLfsnDHsoe3iDchLQ5Y49Akv8gODQH1RfOEdipTvvr+Qpo
5T2cXuKYTHhQoGoNx6PANBs71KsNqxQwbtBWWjscInwoQItttKr/PBfb1lIB
K1Gt0fcmoU5EeFGioqHvqI4gEr6U/FdKnKMdz+gWbCf8DCEmxtzE0XYPWBQu
JUNoOHnB0ZchJDwNIbAxx6ZRNxd405uv5zEM2XRt/3P9XMLXMO5aL2GmB4vg
XjjALBwYRsfKwXdVpXzC2wiK4g02Vwz7wc1aOa5zbATHRcWn/GRswt8IzGl/
azJco+F8ffi7E06jmHQO6WhSCQmPo5j3yHaxvE8Ih/fXZxTs/OojBrJEwqcK
5bOfpFvnhMOGKp+ugk1z2HUenUV4VUHPqeKKS8kmWFC4mY+B2Vp+O/kWj/A7
hsSf9rvOCQ5ghQEF7BikrLjcWGky4XkcPtxvdH2WJcCoasZRM24c8WPaz2od
+ITvcfz+rYltFTsESzwogyaQaxcR4F0cRHifQIFCXDi1PgLaVLxXJ+Ac0Khf
KU4h/E+iw/JtvP7TTCx4D9wkXN5xxOtLs8l9mITd2zM62tUi/Pe3mEJmaTfz
0F4u/gWYytrR
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1lQlQU1cYhSlKQQR3gVYr6iAqdUHE2CjDCUtStCBLFDVgDJCNTRJAMBSk
UWuMFWVGnNE6VURQsMomiloERBRXwiagCIKBQFg0AqK1Mmmevb0zb968uff+
9/znfHfegtCYAIGxkZER3/BQ7/8Hx9PP69giIKgiILO54ADcAn5pqGwKJt8Z
ENi2NFd78WFmm6y7Y3oWO2hJaUmsMDKfDa6RojX9fDCcYkReT9ryULSkSOuQ
60PWF8AtbCLvg8IFEmr6m2LUBNmvzljDJPtLYFrStXw4lgOW9Y74emYpBi4H
n5fK+KTeTYxZHAng24vxXY10bo20DO8znPXhZ0SkfgWsLptvejfCRdJ6j9CO
2kr8HuEpbWD4kfOqUBk112wtlwHBcR/ac/5dqCrj6vUWLHJ+NQIDrYfLhVvh
P7DVvOnTPXQvNmlw6wshemrgU6hITLEUwIUqn/4Arc2xa90UYUTfQ9xLbUlR
aoOx+HRU8UP7x5j/s/rgsPNPRO8TiDtvFPwT6o6ZIwkHq8ueQnc4T/OXfCvR
r4KNFdQWaWKk5jCu7Fxah8IHybKnOVLSTx0Y9OSXEYLd2F3PpBRhp15q3uCY
SPprQFmXgyXTQ4KI8Y1yTkUDTNih89nTuKTfRphOnqi8OfNH8Jb6UR3C6L1v
Wt1BNum/CQd0278SrxAjcAs1nqEqkyXXVcQRP56hpL/Uab+LDN6G6oYdGL/f
WKXtjCH+tODSnLSEeIttcDOo9xtowUV9yT7reQziVytGs+rzfVw5WPucTynC
/Y6iO+UpEuLfczzVnlLtcU3CchOqgxfYe3vMudUhmfjZhkljRS0u+gQsXPVl
AzZLbFIbe8OJvy+hMmN1PY7kw4aSY92OQx+6P7dFxhK/21H9kVVL25KKKUoZ
5SjG1+j4CSfkxP9XcPJmz7a4sQcTru01JPAKQVM48d7FIpJHJ7wX+iw3N2Ui
xbDaNrkTwavt26oKmSSfTqxeda5XOyZEouG0PxZ04aymIt21Lp7k1YWVC6co
JFFxiJ1LCe7Cxuxhx1O3wkl+r5ER++HEn96bEW3o9nTUa6hkej8bFxeS52sY
T8+iT/IMgJhaPkON/F1XI9zKBSRfNQb8RR4bvSQIM7h9slQN/aToGv6zXSTv
bixrST2U1SECl7JnRzdqJe15+vDtJP9uVOfvyx8TemCbIe0Txj1ozq2VyIUb
CA89sLtbqKJnhoBtWD0rtwenovWDtt/GED564HA8vf3yrDhsolEBa+C78gX4
llLCiwaORYz0CRZCbKDkj2ggnDW4ucmKTfjpxTpjZWrBA8CTwuVkL+a5asMf
JbEJT70QH8E8YaIA+Ni5f6prHx7dvk6rMYsifPVBvqRuzWiIGPSj6h+Oqvvg
mF08bneDR3jTovQcfThyxBfOdpohC6UWwff7fQvc1xH+tMiVLogpynDHylt9
Wb+t6AevUbaLmxdIeOwHXRShG63kwuHL9elHTlgHzesCj/A5gOtXLa8fr9iG
RVR52QDGZg4xmv9mEV4H4HftzO02xVLMp3CzHcS63Gy7ROUywu8geEKrjxOV
XpgzgwJ2ECPsoEjV1C2E5yGUzx5V++8NxOzc99+bRAyhTqOg/bo+gPA9hMP+
VqJjOUxMc6UMeoMLLx3bfDPphPc38JRlcR9WMDGZivfaG4ReuVQWLeQQ/t/C
OE9+keMkwNdfgHuLT+unb1j1RETuw1u8O3fAdHdSCP77W+jgkfDZiffKE/8C
4sXuSw==
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1.}, {0, 0.012051725713285565`}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=2.6(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 1.}, {0, 0.012051725713285565`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.3], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.755504326666164*^9, 3.7555043439434676`*^9}, {
   3.755505789834924*^9, 3.7555058566111336`*^9}, 3.7555060597132177`*^9, 
   3.7555060898314967`*^9, {3.7555061290348854`*^9, 3.755506192601372*^9}, 
   3.755506286954006*^9, {3.755506511686955*^9, 3.7555065740555997`*^9}, {
   3.7555066956893425`*^9, 3.755506928055628*^9}, 3.7555094821290245`*^9, 
   3.7555095649569073`*^9, 3.75550961440012*^9, 3.7555096599519567`*^9, 
   3.7555097036950493`*^9, 3.755510111944743*^9, 3.755510181827833*^9, 
   3.7555102344251766`*^9, 3.755511909335272*^9, 3.755511942155181*^9, 
   3.7555131733821745`*^9, 3.7555145814482155`*^9, 3.75551466781015*^9, 
   3.75551475804554*^9, 3.755514813784305*^9, 3.7555149048078136`*^9, 
   3.755514974484082*^9, 3.7555150527970657`*^9, 
   3.7571338233344917`*^9},ExpressionUUID->"b305416b-8826-4623-bcf4-\
5ac4625b878a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"gamma11", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757133847022643*^9, 
  3.757133873945552*^9}},ExpressionUUID->"0d0a69f1-9aed-4625-9c52-\
d10deff1cf95"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kwtMU1cchwvyGNsgBDpEfFVwvMujtLQIg59QoAhFWigtZqa8BMdbXZmb
FivohiJzpsyaDadZBguPseiyTTdYukCGIENeEiLLJog4Ii+ZvDoGc9n/Nrlp
vn7nO7fn3HN3ZRbLD5mzWKzsF9d/3/9/5iPunuWP+W7Kj6AfUL7jsV9IeCXx
S2hP7Cs+7foRsT2sPzZ8edfjAjEb0/z4b8rulBM7w1nXUNdlOkq8DYdi3YzT
VwuJOaiNqd8Y5b9L7IrZ4Fs20qIPiHejP9QUP/9mFbE7KoyCSwlXGe+JOu5y
pdLiFLE3rH7ubVq9lkPsi5EjUz6K1lRiP7TEhIlFNcXEAVjRXvcv2a4lDsTw
XwlXrHt0xDyMqAvS1P3M/wuC6vC2H2ocCoj5EBZ2wHvhALEA3vePLrmNZhIH
o6U/8ddXHx8hFqLqc66j7YyGWASLG6O23W+XEoegqaLtR74LM34PzuW5SoMF
6cShcNiaX9tjCicOg7wi/ivHIR7xG8hY37L5UaSCOBwhoTaljRbMfkTgtkZV
8LI9s//AclnHyncW9Lx1gFUMV2TZmEV+L7LjFjuTfjpIfi9y2PWDFWbZ5CPh
ZK7ynz5xmHwkYrSFY/rrzPmJQlR0t92V3FzyUdC9n/P9PxMq8mJY2T5Yy7cK
IS9GoOZvzcq3PuSj8UkJp3FOIicfjWMDsnGnReb+MWhxEkZmLLxFPgZPbct3
FhqY9cZi/fypLk5RBvlYaEUzbs+2qslLMK+czWgfItZJXpxfcdbs77ReVhye
rJh5joenkY/DndC5pepZKfl9iGI3CtI4weT3weLEybLqDnPy8Wg/UHHTtNmX
fDwc1kZ8gj6NJp+A1/SnnZvdZeQTkNNtrJngEbOk6GvSx6onJeSlGG4518QZ
2kM+EU+Ej5Y3zXuST8TYgFI3eJM5D/sx6RVk7ZUVSX4/+sY9LgxcSiCfhPuG
ok5OK60HSTjP6Sx2M4ui8Ul4XixYrDen+Y1JsDRIhn04DtTLIGA7zl+TBFIv
wyv+JytGysTUy3DjFne4WUjzG2XQ2RpGFWxm/+TQqlwWVJU0HnKU8F431a7R
fDo5/Nr1vHX7XdTLsTvbsB76Dpf6ZCz96WjoeRhGfTLydqY491Yz601Go+i4
aqaL2JgMVfrGRWkojWeloHn28uB78gDqU2B38bNykXwH9Sng9K5usZt0oz4F
vM4/VqfSmP1VQO9+77iLgLm/AlX3HpZOPSXWKWDIjLb+7XYQ9QqgYWwoYpzW
w0oFd6EwQGxlRn0qOKacHk2mI/WpOMbXtybn0ftgTEVtm7OmMp1PvRKFpoPN
tmcE1CvB4agbtHN+1Cth7v31KdezLtQr8WDdstqmiE29Ch82PPfy8aTzCRU8
qr9osBbS+dKp8EvmZVHnRAT1KjxrHW3byBVRn4a6ZbVxo2V7xL9Lt65e
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 0.015756628465239297`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7571338495660505`*^9, 
  3.7571338743539023`*^9}},ExpressionUUID->"270c9eb8-5dc1-44f4-a6a2-\
f558d82fc629"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmbp", "[", 
   RowBox[{
   "\[Mu]0_", ",", "\[CapitalDelta]0_", ",", "\[Alpha]0_", ",", "V0_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "H11", ",", "H12", ",", "H22", ",", "H", ",", "Hmb22", ",", "Hmb11", ",",
       "Hmb12", ",", 
      RowBox[{"\[Eta]", "=", "25"}], ",", "k", ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"V", "=", "V0"}], ",", 
      RowBox[{"\[Alpha]", "=", "\[Alpha]0"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]c", "=", ".2"}], ",", "Hp", ",", 
      RowBox[{"\[Epsilon]", "=", "0"}], ",", "sl", ",", 
      RowBox[{"u", "=", ".5"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Eta]", " ", 
           RowBox[{"k", "^", "2"}]}], " ", "-", "\[Mu]"}], ")"}], "*", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
       RowBox[{"V", " ", 
        RowBox[{"PauliMatrix", "[", "3", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", "k", " ", 
        RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"\[CapitalDelta]", " ", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Eta]", " ", 
            RowBox[{"k", "^", "2"}]}], " ", "-", "\[Mu]"}], ")"}]}], "*", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
       RowBox[{"V", " ", 
        RowBox[{"PauliMatrix", "[", "3", "]"}]}], "+", 
       RowBox[{"\[Alpha]", " ", "k", " ", 
        RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], ";", 
     RowBox[{"H", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"Hmb22", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Eta]", " ", 
                RowBox[{"k", "^", "2"}]}], " ", "-", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", "\[Epsilon]"}], ")"}]}], ")"}], "*", 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"V", " ", 
             RowBox[{"PauliMatrix", "[", "3", "]"}]}], "-", 
            RowBox[{"\[Alpha]", " ", "k", " ", 
             RowBox[{"PauliMatrix", "[", "2", "]"}]}]}], ",", 
           RowBox[{"\[CapitalDelta]", " ", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]", " ", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Eta]", " ", 
                 RowBox[{"k", "^", "2"}]}], " ", "-", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "-", "\[Epsilon]"}], ")"}]}], ")"}]}], "*", 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"V", " ", 
             RowBox[{"PauliMatrix", "[", "3", "]"}]}], "+", 
            RowBox[{"\[Alpha]", " ", "k", " ", 
             RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], "}"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"Hmb11", "=", "H"}], ";", 
     RowBox[{"Hmb12", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], 
       "\[CapitalDelta]c"}]}], ";", 
     RowBox[{"Hp", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Hmb11", ",", "Hmb12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Hmb12", ",", "Hmb22"}], "}"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"sl", "=", 
      RowBox[{"Eigenvalues", "[", "Hp", "]"}]}], ";", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Table", "[", 
         RowBox[{"sl", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"-", "u"}], ",", "u", ",", ".01"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "u"}], ",", "u"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "u"}], ",", "u"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "LightBlue", ",", "Red", ",", "LightRed"}], 
         "}"}]}], ",", 
       RowBox[{
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"sl", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "/.", 
        RowBox[{"k", "\[Rule]", "0"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7447262906743927`*^9, 3.7447266335471315`*^9}, {
  3.7447266931490993`*^9, 3.7447267973487916`*^9}, {3.744726885645029*^9, 
  3.744727001946761*^9}, {3.744727246621029*^9, 3.744727473874261*^9}, {
  3.7447275700703115`*^9, 3.744727570180249*^9}, {3.744727951577109*^9, 
  3.7447279786406593`*^9}, {3.744728134227785*^9, 3.7447281392459188`*^9}, {
  3.744728250799217*^9, 3.7447282646782923`*^9}, {3.7447283079256177`*^9, 
  3.7447283933438177`*^9}, {3.744728449787551*^9, 3.744728450752008*^9}, {
  3.7447285218034244`*^9, 3.744728522966769*^9}, {3.744728554947725*^9, 
  3.7447285684348154`*^9}, {3.744728598612336*^9, 3.744728609655038*^9}, {
  3.7447313648533196`*^9, 3.744731399131024*^9}, {3.744736899171209*^9, 
  3.744736944368393*^9}, {3.7447370358108025`*^9, 3.7447370382334375`*^9}, {
  3.744737085760227*^9, 
  3.7447370859111414`*^9}},ExpressionUUID->"2329ef32-6948-4764-99fc-\
9476436d9b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Hmbp", "[", 
    RowBox[{"\[Mu]x", ",", "\[CapitalDelta]x", ",", "\[Alpha]x", ",", "Vx"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]x", ",", "0", ",", "0.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]x", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vx", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447274780658755`*^9, 3.744727558115157*^9}, {
  3.7447275982852507`*^9, 3.7447275993706117`*^9}, {3.744728703686674*^9, 
  3.744728703816575*^9}},ExpressionUUID->"5d7c6d22-10dd-47cf-848c-\
604b3d6fc09b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Vx$$ = 0, $CellContext`\[Alpha]x$$ = 
    2, $CellContext`\[CapitalDelta]x$$ = 0.2, $CellContext`\[Mu]x$$ = 1.27, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Mu]x$$], 0, 2}, {
      Hold[$CellContext`\[CapitalDelta]x$$], 0, 0.2}, {
      Hold[$CellContext`\[Alpha]x$$], 1, 3}, {
      Hold[$CellContext`Vx$$], 0, 2}}, Typeset`size$$ = {360., {127., 133.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Mu]x$2249$$ = 
    0, $CellContext`\[CapitalDelta]x$2254$$ = 
    0, $CellContext`\[Alpha]x$2255$$ = 0, $CellContext`Vx$2256$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Vx$$ = 0, $CellContext`\[Alpha]x$$ = 
        1, $CellContext`\[CapitalDelta]x$$ = 0, $CellContext`\[Mu]x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Mu]x$$, $CellContext`\[Mu]x$2249$$, 0], 
        Hold[$CellContext`\[CapitalDelta]x$$, \
$CellContext`\[CapitalDelta]x$2254$$, 0], 
        Hold[$CellContext`\[Alpha]x$$, $CellContext`\[Alpha]x$2255$$, 0], 
        Hold[$CellContext`Vx$$, $CellContext`Vx$2256$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`Hmbp[$CellContext`\[Mu]x$$, $CellContext`\
\[CapitalDelta]x$$, $CellContext`\[Alpha]x$$, $CellContext`Vx$$], 
      "Specifications" :> {{$CellContext`\[Mu]x$$, 0, 
         2}, {$CellContext`\[CapitalDelta]x$$, 0, 
         0.2}, {$CellContext`\[Alpha]x$$, 1, 3}, {$CellContext`Vx$$, 0, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {216., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`Hmbp[
         Pattern[$CellContext`\[Mu]0, 
          Blank[]], 
         Pattern[$CellContext`\[CapitalDelta]0, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha]0, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := 
       Block[{$CellContext`H11, $CellContext`H12, $CellContext`H22, \
$CellContext`H, $CellContext`Hmb22, $CellContext`Hmb11, $CellContext`Hmb12, \
$CellContext`\[Eta] = 
          25, $CellContext`k, $CellContext`\[Mu] = $CellContext`\[Mu]0, \
$CellContext`V = $CellContext`V0, $CellContext`\[Alpha] = $CellContext`\
\[Alpha]0, $CellContext`\[CapitalDelta] = $CellContext`\[CapitalDelta]0, \
$CellContext`\[CapitalDelta]c = 0.2, $CellContext`Hp, $CellContext`\[Epsilon] = 
          0, $CellContext`sl, $CellContext`u = 
          0.5}, $CellContext`H11 = ($CellContext`\[Eta] $CellContext`k^2 - \
$CellContext`\[Mu]) IdentityMatrix[2] + $CellContext`V 
            PauliMatrix[3] - ($CellContext`\[Alpha] $CellContext`k) 
           PauliMatrix[2]; $CellContext`H12 = $CellContext`\[CapitalDelta] 
           IdentityMatrix[
            2]; $CellContext`H22 = -(($CellContext`\[Eta] $CellContext`k^2 - \
$CellContext`\[Mu]) IdentityMatrix[2]) + $CellContext`V 
            PauliMatrix[3] + ($CellContext`\[Alpha] $CellContext`k) 
            PauliMatrix[2]; $CellContext`H = 
          ArrayFlatten[{{$CellContext`H11, $CellContext`H12}, \
{$CellContext`H12, $CellContext`H22}}]; $CellContext`Hmb22 = 
          ArrayFlatten[{{($CellContext`\[Eta] $CellContext`k^2 - \
($CellContext`\[Mu] - $CellContext`\[Epsilon])) 
               IdentityMatrix[2] + $CellContext`V 
               PauliMatrix[3] - ($CellContext`\[Alpha] $CellContext`k) 
              PauliMatrix[2], $CellContext`\[CapitalDelta] 
              IdentityMatrix[2]}, {$CellContext`\[CapitalDelta] 
              IdentityMatrix[
               2], -(($CellContext`\[Eta] $CellContext`k^2 - ($CellContext`\
\[Mu] - $CellContext`\[Epsilon])) IdentityMatrix[2]) + $CellContext`V 
               PauliMatrix[3] + ($CellContext`\[Alpha] $CellContext`k) 
               PauliMatrix[
                2]}}]; $CellContext`Hmb11 = $CellContext`H; \
$CellContext`Hmb12 = KroneckerProduct[
             PauliMatrix[1], 
             IdentityMatrix[
             2]] $CellContext`\[CapitalDelta]c; $CellContext`Hp = 
          ArrayFlatten[{{$CellContext`Hmb11, $CellContext`Hmb12}, \
{$CellContext`Hmb12, $CellContext`Hmb22}}]; $CellContext`sl = 
          Eigenvalues[$CellContext`Hp]; ListLinePlot[
           Transpose[
            
            Table[$CellContext`sl, {$CellContext`k, -$CellContext`u, \
$CellContext`u, 0.01}]], DataRange -> {-$CellContext`u, $CellContext`u}, 
           PlotRange -> {{-$CellContext`u, $CellContext`u}, {0, 2}}, 
           PlotStyle -> {Blue, LightBlue, Red, LightRed}, 
           ReplaceAll[
           PlotLabel -> Part[$CellContext`sl, 5], $CellContext`k -> 0]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.74526088936207*^9},ExpressionUUID->"321ffe08-2f86-4b2d-9271-e276b27cbe1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.02"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"Eigenvalues", "[", 
            RowBox[{
             RowBox[{"Hmb", "[", 
              RowBox[{
              "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
               "\[Alpha]", ",", "3000"}], "]"}], ",", 
             RowBox[{"-", "20"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Arnoldi\>\"", ",", 
                RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
                ",", 
                RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}],
                "}"}]}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444209953513603`*^9, 3.744421122022649*^9}, {
  3.7444211563358727`*^9, 3.7444211839363956`*^9}, {3.7444214145696507`*^9, 
  3.744421462593421*^9}, {3.7444671431860485`*^9, 3.74446714338491*^9}, {
  3.7444675410160303`*^9, 
  3.744467547544303*^9}},ExpressionUUID->"3d298fc4-e2ba-460c-9842-\
c9418c895a41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.18330527380480588`", ",", "0.1687861079174257`", ",", 
   "0.14891304916751155`", ",", "0.12891563284293456`", ",", 
   "0.10891840122884315`", ",", "0.08892202658350556`", ",", 
   "0.0689274714846928`", ",", "0.04893705177251509`", ",", 
   "0.02895911209456521`", ",", "0.009066873145708376`", ",", 
   "1.4676461573153879`*^-10", ",", "0.031150774698447674`", ",", 
   "2.2202734870247624`*^-15", ",", "8.066058131768429`*^-16", ",", 
   "5.153327255003878`*^-16", ",", "9.373919772518828`*^-16", ",", 
   "0.11692186027912746`", ",", "1.6869073554843883`*^-15", ",", 
   "2.573462789996764`*^-15", ",", "1.0877545415904812`*^-15", ",", 
   "6.749418291918407`*^-16", ",", "1.4031510861363783`*^-15", ",", 
   "1.0917398131066817`*^-15", ",", "0.10261673006600325`", ",", 
   "1.4936502393399294`*^-15", ",", "1.2424555986530982`*^-15", ",", 
   "0.09789522417537976`", ",", "7.845291700085082`*^-16", ",", 
   "8.350013697762366`*^-17", ",", "1.445917284639284`*^-16", ",", 
   "6.962231454456089`*^-16", ",", "2.5974395373848188`*^-17", ",", 
   "1.3203347690295076`*^-15", ",", "1.0513984914141483`*^-16", ",", 
   "3.5114572926739767`*^-16", ",", "4.4390759614728793`*^-16", ",", 
   "7.459942984342737`*^-16", ",", "5.762197243872052`*^-15", ",", 
   "7.750788270792742`*^-15", ",", "1.9278816766255285`*^-14", ",", 
   "3.9777520391445365`*^-14", ",", "8.070503142781562`*^-14", ",", 
   "1.524018645851602`*^-13", ",", "2.8874200363170233`*^-13", ",", 
   "5.019734449801442`*^-13", ",", "8.006420711324854`*^-13", ",", 
   "1.0411117054432505`*^-12", ",", "8.434946944824635`*^-13", ",", 
   "6.012000310303554`*^-13", ",", "3.4516838213965017`*^-15", ",", 
   "3.33276619408426`*^-15"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745261145042797*^9},ExpressionUUID->"d992fb7e-81d4-4457-bc9e-\
b27e4f2c4595"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.02"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vz", ",", 
        RowBox[{"Min", "@", 
         RowBox[{"Abs", "@", 
          RowBox[{"Eigenvalues", "[", 
           RowBox[{
            RowBox[{"Hmb", "[", 
             RowBox[{
             "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
              "\[Alpha]", ",", "3000"}], "]"}], ",", 
            RowBox[{"-", "20"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Arnoldi\>\"", ",", 
               RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
               ",", 
               RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
              "}"}]}]}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444676801383963`*^9, 3.7444677399456024`*^9}, {
  3.74446781323557*^9, 
  3.744467840587977*^9}},ExpressionUUID->"48b50dfb-5f90-47e8-a67c-\
c01e5aa5929a"],

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.01"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"Eigenvalues", "[", 
            RowBox[{
             RowBox[{"SparseArray", "@", 
              RowBox[{"Hc", "[", 
               RowBox[{
               "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
                "\[Alpha]", ",", "3000"}], "]"}]}], ",", 
             RowBox[{"-", "10"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Arnoldi\>\"", ",", 
                RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
                ",", 
                RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}],
                "}"}]}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444209953513603`*^9, 3.744421122022649*^9}, {
  3.7444211563358727`*^9, 3.7444211839363956`*^9}, {3.7444214145696507`*^9, 
  3.744421462593421*^9}, {3.744421743490605*^9, 
  3.7444217454782896`*^9}},ExpressionUUID->"45535e27-d6ab-4fde-ae68-\
e0c48dad0aa4"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "vz", "]"}]], "Input",
 CellChangeTimes->{{3.7444211578388824`*^9, 
  3.7444211775161495`*^9}},ExpressionUUID->"b67fed22-b137-428f-8e83-\
9fa5fbf9d438"],

Cell[BoxData[
 RowBox[{"data", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.744468086702876*^9, 
  3.744468088772694*^9}},ExpressionUUID->"aa2e6e9b-deee-4d84-8374-\
e31ae74e5925"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744421662400079*^9, 3.7444216785249166`*^9}, {
  3.7444679375478973`*^9, 
  3.744467950056754*^9}},ExpressionUUID->"9bd5f7ce-e207-43af-83aa-\
9d334789c8c9"],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.05meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.7447451030448985`*^9, 
  3.744745103620572*^9}},ExpressionUUID->"d2fa7534-b927-4086-804e-\
470bd2bdd27d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p05", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.05.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447451054945035`*^9, 
  3.7447451085087986`*^9}},ExpressionUUID->"34647beb-c01b-4899-8372-\
d7e6d3420d96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p05"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.7447451125974684`*^9, 
  3.7447451132170887`*^9}},ExpressionUUID->"9cd1ff17-ebd9-4181-9173-\
a230bd45743c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.1meV", "Subsection",
 CellChangeTimes->{{3.7447351589888496`*^9, 
  3.7447351636511855`*^9}},ExpressionUUID->"8a2dc1f5-4005-4933-a865-\
d180e4eb6a1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.1.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444693604806414`*^9, 3.7444693831377783`*^9}, {
  3.744470865173907*^9, 3.744470891590144*^9}, {3.7444776391384597`*^9, 
  3.7444776565269003`*^9}, {3.7447390303306456`*^9, 
  3.7447390306344643`*^9}},ExpressionUUID->"26771f19-db62-4ebc-9884-\
3c064962128a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p1"}]], "Input",
 CellChangeTimes->{{3.744469388697604*^9, 3.744469461186886*^9}, 
   3.744470906269737*^9, {3.7444776747695007`*^9, 3.74447769940843*^9}, {
   3.7447390371067743`*^9, 
   3.7447390425216775`*^9}},ExpressionUUID->"da3f7cc7-f781-40d9-b7a8-\
ccb4dcd46b35"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p1", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444694763282576`*^9, 3.7444695617020807`*^9}, {
  3.744470927584589*^9, 3.744470932888536*^9}, {3.7444777253596153`*^9, 
  3.7444777422435927`*^9}},ExpressionUUID->"d6f7f71b-c640-466d-aac6-\
e21f199896e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.15meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.744745127643877*^9, 
  3.744745128148563*^9}},ExpressionUUID->"bd9d587e-7198-42db-9194-\
a5b4b4b6fc01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p15", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.15.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447451304372797`*^9, 
  3.744745137293359*^9}},ExpressionUUID->"21e43e58-c7a4-4fa3-8998-\
21cf05bea92a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p15"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.7447451322052717`*^9, 
  3.744745132486104*^9}},ExpressionUUID->"ae61ee0f-6951-4865-97b2-\
642a9918cd6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.2meV", "Subsection",
 CellChangeTimes->{{3.7444806991072645`*^9, 
  3.74448070751149*^9}},ExpressionUUID->"9d23e9fb-b40b-4819-a935-\
ac217423d33c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.2.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444777582204695`*^9, 3.7444777606680746`*^9}, {
  3.744734193101802*^9, 
  3.744734193422617*^9}},ExpressionUUID->"5501f436-abe2-455c-9ddd-\
813758344d3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p2"}]], "Input",
 CellChangeTimes->{{3.7444777723094473`*^9, 
  3.744477772468357*^9}},ExpressionUUID->"b42e5751-77e7-47bf-b263-\
c46592fc5b08"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p2", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444694763282576`*^9, 3.7444695617020807`*^9}, {
  3.744470927584589*^9, 3.744470932888536*^9}, {3.7444777253596153`*^9, 
  3.7444777422435927`*^9}, {3.744477786926076*^9, 
  3.7444777870230403`*^9}},ExpressionUUID->"18f66eb0-d412-492e-b1b4-\
93cbc7d5a2c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottom", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\b.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444807337924747`*^9, 
  3.7444807430631623`*^9}},ExpressionUUID->"99ca0bd4-9919-4eeb-a9e9-\
1eb32c461820"],

Cell[BoxData[
 RowBox[{
  RowBox[{"upper", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\u.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74448074557273*^9, 
  3.744480753880004*^9}},ExpressionUUID->"3412c9e6-bfc8-4776-a61b-\
4deab007aa2a"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"bottom", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744480760241378*^9, 
  3.744480770352579*^9}},ExpressionUUID->"cd002c36-e319-4686-bfb0-\
09080a6d2cae"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"upper", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744480775312765*^9, 
  3.7444807831522875`*^9}},ExpressionUUID->"5067bb2d-d01a-4924-9e0b-\
178053edec8a"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"DataRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"ToString", "@", "#4"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"bottom", ",", "upper", ",", "delta120p2", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "2", ",", ".05"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444808081560163`*^9, 3.744480972990719*^9}, {
  3.7446545312054152`*^9, 3.7446545864166045`*^9}, {3.744724399086091*^9, 
  3.7447243992969885`*^9}},ExpressionUUID->"fb80be6a-a773-45d1-b092-\
7207e799fc4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.3meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 
  3.744480716992052*^9}},ExpressionUUID->"d767949e-2baf-4208-b47c-\
5f9c69fa854d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.3.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 
  3.744739081113639*^9}},ExpressionUUID->"141319a9-c5e1-4337-91c6-\
f1386cd1dcc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p3"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 
  3.7444778178604116`*^9}},ExpressionUUID->"1016eba9-6578-4472-a62c-\
31f9f2492cf6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.4meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.744745058126552*^9, 
  3.744745058252477*^9}},ExpressionUUID->"c5c2a5b2-b8ed-42cf-a83e-\
554fc461b34b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.4.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447450603342905`*^9, 
  3.744745062411103*^9}},ExpressionUUID->"c058ce51-42b2-48f3-8330-\
099cc06bf84e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p4"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.744745064693825*^9, 
  3.7447450649406586`*^9}},ExpressionUUID->"41e96805-bc71-4492-bf66-\
cf8e40ecb9d2"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p3", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444778298455915`*^9, 
  3.7444778299644985`*^9}},ExpressionUUID->"9c28502d-fa6a-4701-86b2-\
ab8df4d233a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Mu] from 0-2", "Subsection",
 CellChangeTimes->{{3.7448347623315897`*^9, 
  3.74483477734002*^9}},ExpressionUUID->"ef0d98f3-ef91-4c8f-8268-\
96feb09feb23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"muvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", "\"\<mu\>\"",
        "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.dat\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2.0", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.74474523156453*^9, 3.7447453467897296`*^9}, {
   3.744745497135309*^9, 3.744745511801927*^9}, {3.7447455506627426`*^9, 
   3.744745620665741*^9}, {3.744745760264023*^9, 3.744745786304152*^9}, 
   3.7447458517038293`*^9, {3.7447475491362925`*^9, 3.744747564981228*^9}, 
   3.7447523425631037`*^9, {3.744834576142435*^9, 3.74483458121465*^9}, {
   3.74483469115557*^9, 3.7448347004229927`*^9}, {3.745169597310978*^9, 
   3.745169607827976*^9}},ExpressionUUID->"c74eba06-08ac-4fc6-a629-\
c4f99013f697"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.744749202639727*^9, 
  3.744749204861477*^9}},ExpressionUUID->"97f3446a-a532-4bd5-8dec-\
8f1f5c64a008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fnmuvaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.0", ",", "2.0", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744838118870496*^9, 3.7448381586238956`*^9}, {
  3.7451696169247847`*^9, 
  3.74516961831699*^9}},ExpressionUUID->"9023d925-be86-43c7-88a2-\
5583cd2941b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"mu0.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.05Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.1Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.15Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.2Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.25Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.3Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.35Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.4Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.45Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.5Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.55Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.6Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.65Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.7Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.75Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.8Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.85Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.9Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.95Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.05Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.1Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.15Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.2Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.25Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.3Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.35Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.4Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.45Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.5Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.55Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.6Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.65Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.7Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.75Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.8Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.85Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.9Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.95Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu2.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>"}]\
, "}"}]], "Output",
 CellChangeTimes->{
  3.745169621003457*^9},ExpressionUUID->"73845f08-e5f1-434f-b2d2-\
bdea2730d5d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<Delta0.2alpha2Deltac0.2epsilon1L3000-1.024,0.3-.dat\>\""}], 
       "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.05"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447458575594673`*^9, 3.7447458839414206`*^9}, {
   3.7447459600339413`*^9, 3.744745969808384*^9}, {3.7447462987708235`*^9, 
   3.744746301356326*^9}, 3.74474700912817*^9, 
   3.7447475621418467`*^9},ExpressionUUID->"fe574cb9-135c-4574-806b-\
2023e56aa893"],

Cell[BoxData[
 RowBox[{"conductanceplot\[Mu]", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.002", "*", 
             RowBox[{"2", "^", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".8"}], ",", ".8"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", ".8"}], ",", ".8", ",", ".2"}], "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".5", ",", "1", ",", "1.5", ",", "2"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Mu]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"muvaries", ",", 
      RowBox[{"(*", 
       RowBox[{"delta120p2", ","}], "*)"}], 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.05"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.7448355284073133`*^9, 
   3.744835585932886*^9}, {3.744835643197753*^9, 3.7448356433456526`*^9}, {
   3.744853183973321*^9, 3.744853189092292*^9}, {3.744853383878191*^9, 
   3.74485339688457*^9}, {3.7451696259506335`*^9, 
   3.7451696361248283`*^9}},ExpressionUUID->"763b0d62-4146-42d7-beb1-\
cc98b06786a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnmuvaries", ",", "conductanceplot\[Mu]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.744761564636625*^9, {3.7447725127835035`*^9, 3.744772588288953*^9}, {
   3.7447727672378254`*^9, 3.744772776541478*^9}, {3.744838185370886*^9, 
   3.7448381863782935`*^9}, 3.744838493923781*^9, 3.7448385254284873`*^9, {
   3.744839022335852*^9, 
   3.7448390507112317`*^9}},ExpressionUUID->"7269419c-4297-42a8-b24d-\
52e20646ad84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.05Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.1Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.15Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.2Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.25Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.3Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.35Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.4Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.45Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.5Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.55Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.6Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.65Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.7Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.75Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.8Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.85Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.9Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.95Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.05Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.1Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.15Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.2Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.25Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.3Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.35Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.4Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.45Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.5Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.55Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.6Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.65Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.7Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.75Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.8Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.85Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.9Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.95Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu2.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.74485340592432*^9, 
  3.744855189299383*^9},ExpressionUUID->"14bae9ad-ae88-4807-943b-\
0f1841916072"]
}, Open  ]]
}, Open  ]],

Cell["", "Subsection",ExpressionUUID->"96060d94-2783-4aff-b420-b079558d5e8f"],

Cell[CellGroupData[{

Cell["\[CapitalDelta]c varies", "Subsection",
 CellChangeTimes->{{3.7448347956816163`*^9, 3.7448348003823166`*^9}, {
  3.744834959547308*^9, 3.744834961168947*^9}, {3.744835051535283*^9, 
  3.7448350527885675`*^9}},ExpressionUUID->"f941901e-9a41-4db4-9acd-\
f540b4435f28"],

Cell[BoxData[
 RowBox[{"fndeltavaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<epsilon1.0L3000-1.024,0.3-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7448349631088386`*^9, 3.7448349663749733`*^9}, {
   3.7448475296762023`*^9, 3.744847570367942*^9}, {3.744847708026814*^9, 
   3.744847710489725*^9}, 
   3.744847883789257*^9},ExpressionUUID->"8f1b2f55-e15b-4baf-8e59-\
9bf7acf5c710"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<epsilon1.0L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", 
      "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7448349952755575`*^9, 3.744835014499342*^9}, {
  3.744835063488674*^9, 3.7448350877104187`*^9}, {3.744835187933354*^9, 
  3.744835214767276*^9}, {3.744835307719739*^9, 
  3.7448353079446273`*^9}},ExpressionUUID->"1f36528b-93ce-45aa-9de0-\
00ea1704c85b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deltacvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
       "\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<epsilon1.0L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.74474523156453*^9, 3.7447453467897296`*^9}, {
   3.744745497135309*^9, 3.744745511801927*^9}, {3.7447455506627426`*^9, 
   3.744745620665741*^9}, {3.744745760264023*^9, 3.744745786304152*^9}, 
   3.7447458517038293`*^9, {3.7447475491362925`*^9, 3.744747564981228*^9}, 
   3.7447523425631037`*^9, {3.744834576142435*^9, 3.74483458121465*^9}, {
   3.74483469115557*^9, 3.7448347004229927`*^9}, {3.7448353631181707`*^9, 
   3.744835364208576*^9}, {3.744835468257755*^9, 
   3.7448355118717227`*^9}},ExpressionUUID->"fa1c33c0-29a5-4b02-b1ae-\
03ec947a01ed"],

Cell[BoxData[
 RowBox[{"conductanceplot\[CapitalDelta]c", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(C\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"deltacvaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", ".4", ",", "0.05"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 
   3.7448356328050036`*^9}},ExpressionUUID->"f36fb924-bcb9-4dd4-b9a9-\
e437cb57e951"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fndeltavaries", ",", "conductanceplot\[CapitalDelta]c"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.744761564636625*^9, {3.7447725127835035`*^9, 3.744772588288953*^9}, {
   3.7447727672378254`*^9, 3.744772776541478*^9}, {3.744838185370886*^9, 
   3.7448381863782935`*^9}, 3.744838493923781*^9, 3.7448385254284873`*^9, {
   3.744839022335852*^9, 3.7448390507112317`*^9}, {3.744847686797475*^9, 
   3.744847693295437*^9}},ExpressionUUID->"ceea8a41-52f3-4dd9-8d83-\
db3df9927c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Epsilon] (\[Mu] to the bottom) varies", "Subsection",
 CellChangeTimes->{{3.744835683058298*^9, 3.744835698738778*^9}, {
  3.744835971613984*^9, 
  3.744835974775179*^9}},ExpressionUUID->"14e052f7-e290-440c-9e9d-\
4f8a39ca9f9e"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448357586694956`*^9, 3.7448357703557844`*^9}, {
  3.74483580967109*^9, 3.7448358277120037`*^9}, {3.7448482462333117`*^9, 
  3.7448482607277236`*^9}},ExpressionUUID->"43f26a91-55b6-4d7d-b6e1-\
199ea336249c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fnepsilonbottomvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
        RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
      "\"\<L3000-1.024,0.3-.png\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744848158973011*^9, 3.744848189103468*^9}, {
  3.744848253375334*^9, 
  3.744848254415722*^9}},ExpressionUUID->"40af13d8-8a17-4256-a667-\
45419d6fc671"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epsilonbottomvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
       "\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744835843243782*^9, 
  3.744835899122765*^9}},ExpressionUUID->"a6b65db1-7044-4bf8-9ab9-\
22618518e919"],

Cell[BoxData[
 RowBox[{"conductanceplotepsilonbottom", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"epsilonbottomvaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.25"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 3.7448356328050036`*^9}, {3.744835915995617*^9, 
   3.744835943423028*^9}, {3.744836011568924*^9, 
   3.744836021859753*^9}},ExpressionUUID->"49778792-14d2-435e-9470-\
505c7f59b279"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnepsilonbottomvaries", ",", "conductanceplotepsilonbottom"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744848237247243*^9, 
  3.744848294710757*^9}},ExpressionUUID->"719eeef3-2d11-405e-ae42-\
a8a7ac4716b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Epsilon] (\[Mu] to the upper) varies", "Subsection",
 CellChangeTimes->{{3.744835953042535*^9, 
  3.744835967669237*^9}},ExpressionUUID->"45daf945-bf98-448e-b420-\
2d7d437b69d7"],

Cell[BoxData[
 RowBox[{"fnepsilonuppervaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"i", "+", ".2"}], "]"}], "<>", 
     "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<L3000-1.024,0.3-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.744836816194275*^9, 3.744836873052038*^9}, {
  3.7448375956608825`*^9, 3.7448375965603695`*^9}, {3.744837627765473*^9, 
  3.744837629127659*^9}},ExpressionUUID->"cd10202e-b518-476f-af64-\
7f56efa781eb"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "+", ".2"}], "]"}], "<>", 
        "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448357586694956`*^9, 3.7448357703557844`*^9}, {
  3.74483580967109*^9, 3.7448358277120037`*^9}, {3.744836066774046*^9, 
  3.744836071439659*^9}, {3.7448361022774196`*^9, 
  3.7448361066974735`*^9}},ExpressionUUID->"96c498a1-37c2-488b-8502-\
33aa256c596f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epsilonuppervaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", "\"\<mu\>\"",
        "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", "+", ".2"}], "]"}], "<>", 
       "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744836114319871*^9, 
  3.7448362056296268`*^9}},ExpressionUUID->"2e86e336-1c3a-45ec-9839-\
2ebfc75a20f4"],

Cell[BoxData[
 RowBox[{"conductanceplotepsilonupper", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"epsilonuppervaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.25"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 3.7448356328050036`*^9}, {3.744835915995617*^9, 
   3.744835943423028*^9}, {3.744836011568924*^9, 3.744836021859753*^9}, {
   3.744836214476415*^9, 
   3.7448362248940134`*^9}},ExpressionUUID->"d5bdf225-47b5-49c6-8807-\
b4735fc47c34"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnepsilonuppervaries", ",", "conductanceplotepsilonupper"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448376040652122`*^9, 3.7448376529408617`*^9}, {
  3.744848353536125*^9, 
  3.7448483601720963`*^9}},ExpressionUUID->"d9b40c9f-3c58-45e9-a946-\
bcfdabb3dcb5"]
}, Open  ]]
},
WindowSize->{1540, 825},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "\[Gamma]2"->{
  Cell[18288, 463, 19345, 432, 610, "Input",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa",
   CellTags->"\[Gamma]2"],
  Cell[37636, 897, 19485, 435, 629, "Input",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a",
   CellTags->"\[Gamma]2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"\[Gamma]2", 584377, 11097}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 371, 8, 28, "Input",ExpressionUUID->"3793eb9a-45c0-48a2-a8db-52706051035f"],
Cell[932, 30, 8470, 211, 313, "Input",ExpressionUUID->"5eb6bed8-f965-40ad-858d-6172a270e736"],
Cell[9405, 243, 8880, 218, 312, "Input",ExpressionUUID->"b2843131-6f27-492d-a187-ef1eed0b3b28"],
Cell[18288, 463, 19345, 432, 610, "Input",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa",
 CellTags->"\[Gamma]2"],
Cell[37636, 897, 19485, 435, 629, "Input",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a",
 CellTags->"\[Gamma]2"],
Cell[CellGroupData[{
Cell[57146, 1336, 955, 14, 28, "Input",ExpressionUUID->"c7af5f6b-8df6-4f4d-b95b-d5a155001542"],
Cell[58104, 1352, 346339, 5921, 342, "Output",ExpressionUUID->"e35c407f-9a26-4567-8644-6f1c8870a24f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404480, 7278, 1535, 24, 28, "Input",ExpressionUUID->"4ea59d98-313b-46d2-ae1a-a70352a30486"],
Cell[406018, 7304, 95509, 1809, 344, "Output",ExpressionUUID->"b305416b-8826-4623-bcf4-5ac4625b878a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501564, 9118, 315, 8, 28, "Input",ExpressionUUID->"0d0a69f1-9aed-4625-9c52-d10deff1cf95"],
Cell[501882, 9128, 2734, 60, 236, "Output",ExpressionUUID->"270c9eb8-5dc1-44f4-a6a2-f558d82fc629"]
}, Open  ]],
Cell[504631, 9191, 6288, 157, 238, "Input",ExpressionUUID->"2329ef32-6948-4764-99fc-9476436d9b3f"],
Cell[CellGroupData[{
Cell[510944, 9352, 778, 18, 28, "Input",ExpressionUUID->"5d7c6d22-10dd-47cf-848c-604b3d6fc09b"],
Cell[511725, 9372, 5552, 105, 457, "Output",ExpressionUUID->"321ffe08-2f86-4b2d-9271-e276b27cbe1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517314, 9482, 1690, 42, 48, "Input",ExpressionUUID->"3d298fc4-e2ba-460c-9842-c9418c895a41"],
Cell[519007, 9526, 1865, 31, 98, "Output",ExpressionUUID->"d992fb7e-81d4-4457-bc9e-b27e4f2c4595"]
}, Open  ]],
Cell[520887, 9560, 1417, 37, 48, "Input",ExpressionUUID->"48b50dfb-5f90-47e8-a67c-c01e5aa5929a"],
Cell[522307, 9599, 1688, 42, 48, "Input",ExpressionUUID->"45535e27-d6ab-4fde-ae68-e0c48dad0aa4"],
Cell[523998, 9643, 191, 4, 28, "Input",ExpressionUUID->"b67fed22-b137-428f-8e83-9fa5fbf9d438"],
Cell[524192, 9649, 184, 4, 28, "Input",ExpressionUUID->"aa2e6e9b-deee-4d84-8374-e31ae74e5925"],
Cell[524379, 9655, 311, 7, 28, "Input",ExpressionUUID->"9bd5f7ce-e207-43af-83aa-9d334789c8c9"],
Cell[CellGroupData[{
Cell[524715, 9666, 225, 4, 53, "Subsection",ExpressionUUID->"d2fa7534-b927-4086-804e-470bd2bdd27d"],
Cell[524943, 9672, 441, 10, 28, "Input",ExpressionUUID->"34647beb-c01b-4899-8372-d7e6d3420d96"],
Cell[525387, 9684, 524, 14, 28, "Input",ExpressionUUID->"9cd1ff17-ebd9-4181-9173-a230bd45743c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525948, 9703, 175, 3, 53, "Subsection",ExpressionUUID->"8a2dc1f5-4005-4933-a865-d180e4eb6a1c"],
Cell[526126, 9708, 490, 11, 28, "Input",ExpressionUUID->"26771f19-db62-4ebc-9884-3c064962128a"],
Cell[526619, 9721, 596, 15, 28, "Input",ExpressionUUID->"da3f7cc7-f781-40d9-b7a8-ccb4dcd46b35"],
Cell[527218, 9738, 835, 20, 28, "Input",ExpressionUUID->"d6f7f71b-c640-466d-aac6-e21f199896e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528090, 9763, 223, 4, 53, "Subsection",ExpressionUUID->"bd9d587e-7198-42db-9194-a5b4b4b6fc01"],
Cell[528316, 9769, 439, 10, 28, "Input",ExpressionUUID->"21e43e58-c7a4-4fa3-8998-21cf05bea92a"],
Cell[528758, 9781, 522, 14, 28, "Input",ExpressionUUID->"ae61ee0f-6951-4865-97b2-642a9918cd6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529317, 9800, 172, 3, 53, "Subsection",ExpressionUUID->"9d23e9fb-b40b-4819-a935-ac217423d33c"],
Cell[529492, 9805, 387, 10, 28, "Input",ExpressionUUID->"5501f436-abe2-455c-9ddd-813758344d3b"],
Cell[529882, 9817, 470, 13, 28, "Input",ExpressionUUID->"b42e5751-77e7-47bf-b263-c46592fc5b08"],
Cell[530355, 9832, 886, 21, 28, "Input",ExpressionUUID->"18f66eb0-d412-492e-b1b4-93cbc7d5a2c4"],
Cell[531244, 9855, 325, 9, 28, "Input",ExpressionUUID->"99ca0bd4-9919-4eeb-a9e9-1eb32c461820"],
Cell[531572, 9866, 319, 9, 28, "Input",ExpressionUUID->"3412c9e6-bfc8-4776-a61b-4deab007aa2a"],
Cell[531894, 9877, 728, 19, 28, "Input",ExpressionUUID->"cd002c36-e319-4686-bfb0-09080a6d2cae"],
Cell[532625, 9898, 780, 20, 28, "Input",ExpressionUUID->"5067bb2d-d01a-4924-9e0b-178053edec8a"],
Cell[533408, 9920, 1045, 25, 28, "Input",ExpressionUUID->"fb80be6a-a773-45d1-b092-7207e799fc4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534490, 9950, 173, 3, 53, "Subsection",ExpressionUUID->"d767949e-2baf-4208-b47c-5f9c69fa854d"],
Cell[534666, 9955, 389, 10, 28, "Input",ExpressionUUID->"141319a9-c5e1-4337-91c6-f1386cd1dcc8"],
Cell[535058, 9967, 470, 13, 28, "Input",ExpressionUUID->"1016eba9-6578-4472-a62c-31f9f2492cf6"]
}, Closed]],
Cell[CellGroupData[{
Cell[535565, 9985, 222, 4, 37, "Subsection",ExpressionUUID->"c5c2a5b2-b8ed-42cf-a83e-554fc461b34b"],
Cell[535790, 9991, 437, 10, 28, "Input",ExpressionUUID->"c058ce51-42b2-48f3-8330-099cc06bf84e"],
Cell[536230, 10003, 521, 14, 28, "Input",ExpressionUUID->"41e96805-bc71-4492-bf66-cf8e40ecb9d2"],
Cell[536754, 10019, 736, 19, 28, "Input",ExpressionUUID->"9c28502d-fa6a-4701-86b2-ab8df4d233a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[537527, 10043, 163, 3, 37, "Subsection",ExpressionUUID->"ef0d98f3-ef91-4c8f-8268-96feb09feb23"],
Cell[537693, 10048, 1244, 28, 28, "Input",ExpressionUUID->"c74eba06-08ac-4fc6-a629-c4f99013f697"],
Cell[538940, 10078, 186, 4, 28, "Input",ExpressionUUID->"97f3446a-a532-4bd5-8dec-8f1f5c64a008"],
Cell[CellGroupData[{
Cell[539151, 10086, 746, 19, 28, "Input",ExpressionUUID->"9023d925-be86-43c7-88a2-5583cd2941b6"],
Cell[539900, 10107, 3390, 46, 280, "Output",ExpressionUUID->"73845f08-e5f1-434f-b2d2-bdea2730d5d6"]
}, Open  ]],
Cell[543305, 10156, 1085, 26, 48, "Input",ExpressionUUID->"fe574cb9-135c-4574-806b-2023e56aa893"],
Cell[544393, 10184, 5522, 118, 136, "Input",ExpressionUUID->"763b0d62-4146-42d7-beb1-cc98b06786a7"],
Cell[CellGroupData[{
Cell[549940, 10306, 681, 18, 28, "Input",ExpressionUUID->"7269419c-4297-42a8-b24d-52e20646ad84"],
Cell[550624, 10326, 5358, 86, 413, "Output",ExpressionUUID->"14bae9ad-ae88-4807-943b-0f1841916072"]
}, Open  ]]
}, Open  ]],
Cell[556009, 10416, 77, 0, 53, "Subsection",ExpressionUUID->"96060d94-2783-4aff-b420-b079558d5e8f"],
Cell[CellGroupData[{
Cell[556111, 10420, 272, 4, 37, "Subsection",ExpressionUUID->"f941901e-9a41-4db4-9acd-f540b4435f28"],
Cell[556386, 10426, 825, 20, 28, "Input",ExpressionUUID->"8f1b2f55-e15b-4baf-8e59-9bf7acf5c710"],
Cell[557214, 10448, 1086, 27, 48, "Input",ExpressionUUID->"1f36528b-93ce-45aa-9de0-00ea1704c85b"],
Cell[558303, 10477, 1294, 28, 48, "Input",ExpressionUUID->"fa1c33c0-29a5-4b02-b1ae-03ec947a01ed"],
Cell[559600, 10507, 5444, 116, 136, "Input",ExpressionUUID->"f36fb924-bcb9-4dd4-b9a9-e437cb57e951"],
Cell[565047, 10625, 743, 18, 28, "Input",ExpressionUUID->"ceea8a41-52f3-4dd9-8d83-db3df9927c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565827, 10648, 236, 4, 53, "Subsection",ExpressionUUID->"14e052f7-e290-440c-9e9d-4f8a39ca9f9e"],
Cell[566066, 10654, 1029, 24, 48, "Input",ExpressionUUID->"43f26a91-55b6-4d7d-b6e1-199ea336249c"],
Cell[567098, 10680, 782, 20, 28, "Input",ExpressionUUID->"40af13d8-8a17-4256-a667-45419d6fc671"],
Cell[567883, 10702, 850, 22, 48, "Input",ExpressionUUID->"a6b65db1-7044-4bf8-9ab9-22618518e919"],
Cell[568736, 10726, 5505, 117, 136, "Input",ExpressionUUID->"49778792-14d2-435e-9470-505c7f59b279"],
Cell[574244, 10845, 472, 14, 28, "Input",ExpressionUUID->"719eeef3-2d11-405e-ae42-a8a7ac4716b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574753, 10864, 186, 3, 53, "Subsection",ExpressionUUID->"45daf945-bf98-448e-b420-2d7d437b69d7"],
Cell[574942, 10869, 892, 21, 28, "Input",ExpressionUUID->"cd10202e-b518-476f-af64-7f56efa781eb"],
Cell[575837, 10892, 1185, 28, 48, "Input",ExpressionUUID->"96c498a1-37c2-488b-8502-33aa256c596f"],
Cell[577025, 10922, 952, 25, 67, "Input",ExpressionUUID->"2e86e336-1c3a-45ec-9839-2ebfc75a20f4"],
Cell[577980, 10949, 5555, 118, 136, "Input",ExpressionUUID->"d5bdf225-47b5-49c6-8807-b4735fc47c34"],
Cell[583538, 11069, 525, 15, 28, "Input",ExpressionUUID->"d9b40c9f-3c58-45e9-a946-bcfdabb3dcb5"]
}, Open  ]]
}
]
*)

