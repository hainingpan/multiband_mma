(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    840340,      15259]
NotebookOptionsPosition[    832027,      15132]
NotebookOutlinePosition[    832678,      15155]
CellTagsIndexPosition[    832603,      15150]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<multiband.wl\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74526086889017*^9, 3.7452608839801407`*^9}, {
  3.7452612242723722`*^9, 3.745261224661151*^9}, {3.755488327041394*^9, 
  3.7554883273854966`*^9}},ExpressionUUID->"3793eb9a-45c0-48a2-a8db-\
52706051035f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmb", "[", 
   RowBox[{
    RowBox[{"a_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Mu]0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[CapitalDelta]0_", "?", "NumberQ"}], ",", 
    RowBox[{"V0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Alpha]0_", "?", "NumberQ"}], ",", 
    RowBox[{"dim_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       FractionBox["25", 
        RowBox[{"a", "^", "2"}]]}], ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["\[Alpha]0", 
        RowBox[{"2", "a"}]]}], ",", 
      RowBox[{"Vz", "=", "V0"}], ",", 
      RowBox[{"\[CapitalDelta]11", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]12", "=", "\[CapitalDelta]0"}], ",", "H11", ",",
       "H12", ",", "H22", ",", 
      RowBox[{"\[Epsilon]", "=", "0.75"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "\[Mu]"}], "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Epsilon]", "-", "\[Mu]", "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
          RowBox[{"\[CapitalDelta]12", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", 
     RowBox[{"Chop", "@", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744403259416606*^9, 3.7444033007640505`*^9}, {
  3.744403358268156*^9, 3.7444033682684417`*^9}, {3.7444204144078417`*^9, 
  3.7444205655563374`*^9}, {3.7444207194582453`*^9, 3.7444207486469946`*^9}, {
  3.7444207829777308`*^9, 3.7444207917912693`*^9}, {3.744420869884759*^9, 
  3.74442088070385*^9}, {3.7444209300240135`*^9, 3.744420930694166*^9}, {
  3.744421711252468*^9, 3.7444217164585667`*^9}, {3.7444669580954065`*^9, 
  3.7444669645427246`*^9}, {3.755504292150902*^9, 3.755504292400214*^9}, {
  3.7555043755753098`*^9, 3.7555043773066816`*^9}, {3.755506464885172*^9, 
  3.7555064657349043`*^9}},ExpressionUUID->"5eb6bed8-f965-40ad-858d-\
6172a270e736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmbdis", "[", 
   RowBox[{
    RowBox[{"a_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Mu]0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[CapitalDelta]0_", "?", "NumberQ"}], ",", 
    RowBox[{"V0_", "?", "NumberQ"}], ",", 
    RowBox[{"\[Alpha]0_", "?", "NumberQ"}], ",", "vimp_", ",", 
    RowBox[{"dim_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", 
       FractionBox["25", 
        RowBox[{"a", "^", "2"}]]}], ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["\[Alpha]0", 
        RowBox[{"2", "a"}]]}], ",", 
      RowBox[{"Vz", "=", "V0"}], ",", 
      RowBox[{"\[CapitalDelta]11", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]12", "=", "\[CapitalDelta]0"}], ",", "H11", ",",
       "H12", ",", "H22", ",", 
      RowBox[{"\[Epsilon]", "=", "1"}], ",", "mux"}], "}"}], ",", 
    RowBox[{
     RowBox[{"mux", "=", 
      RowBox[{"\[Mu]", "-", "vimp"}]}], ";", 
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"+", "2"}], "*", "t"}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "-", 
             RowBox[{"DiagonalMatrix", "[", "mux", "]"}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "t"}], "*", 
              RowBox[{"(", 
               RowBox[{"SparseArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Epsilon]", "+", 
                RowBox[{"2", "*", "t"}]}], ")"}], 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "-", 
             RowBox[{"DiagonalMatrix", "[", "mux", "]"}]}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"PauliMatrix", "[", "2", "]"}], ",", 
            RowBox[{"I", "*", "\[Alpha]", "*", 
             RowBox[{"(", 
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{
                   RowBox[{"Band", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}], ")"}]}]}], 
           "]"}]}]}], "]"}], "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], ",", 
           RowBox[{"Vz", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}], 
       "+", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
           RowBox[{"\[CapitalDelta]11", "*", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], 
        "]"}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "0", "]"}], ",", 
          RowBox[{"\[CapitalDelta]12", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"dim", ",", "SparseArray"}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", 
     RowBox[{"Chop", "@", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744403259416606*^9, 3.7444033007640505`*^9}, {
   3.744403358268156*^9, 3.7444033682684417`*^9}, {3.7444204144078417`*^9, 
   3.7444205655563374`*^9}, {3.7444207194582453`*^9, 
   3.7444207486469946`*^9}, {3.7444207829777308`*^9, 
   3.7444207917912693`*^9}, {3.744420869884759*^9, 3.74442088070385*^9}, {
   3.7444209300240135`*^9, 3.744420930694166*^9}, {3.744421711252468*^9, 
   3.7444217164585667`*^9}, {3.7444669580954065`*^9, 
   3.7444669645427246`*^9}, {3.755504292150902*^9, 3.755504292400214*^9}, {
   3.7555043755753098`*^9, 3.7555043773066816`*^9}, {3.755505148652008*^9, 
   3.7555051766903663`*^9}, {3.7555052917615795`*^9, 3.755505296742588*^9}, {
   3.7555054475547857`*^9, 3.7555054769555545`*^9}, {3.75550552371463*^9, 
   3.755505525151819*^9}, {3.755505615355047*^9, 3.7555056257889996`*^9}, 
   3.7555086697618465`*^9},ExpressionUUID->"b2843131-6f27-492d-a187-\
ef1eed0b3b28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfmajoranamb", "[", 
   RowBox[{"a_", ",", "\[Mu]_", ",", "vz_", ",", "dim_", ",", "index_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testp", ",", "testn", ",", "gamma", ",", "test", ",", "gamma1", ",", 
      "gamma2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"testp", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{
               RowBox[{"Hmb", "[", 
                RowBox[{
                "a", ",", "\[Mu]", ",", ".2", ",", "vz", ",", "5", ",", 
                 "dim"}], "]"}], ",", 
               RowBox[{"-", "10"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Arnoldi\>\"", ",", 
                  RowBox[{
                  "\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], ",", 
                  RowBox[{
                  "\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
                 "}"}]}]}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"test1", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"4", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"test2", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"4", "dim"}], "+", "1"}], ";;", 
          RowBox[{"8", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"gamma11", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma12", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma21", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma22", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
             "gamma11", ",", "gamma12", ",", "gamma21", ",", "gamma22"}], 
             "}"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"dim", "*", 
            RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{
             "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\""}], 
             "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "LightBlue", 
             ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
          ")"}]}]}], "]"}], "*)"}], 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma11", ",", "gamma12"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
L\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma21", ",", "gamma22"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
H\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.731009307860541*^9, 3.7310093144840508`*^9}, {
   3.7310094623189073`*^9, 3.7310095289331765`*^9}, {3.731009593886669*^9, 
   3.731009623916932*^9}, {3.7310097067416854`*^9, 3.7310098660843983`*^9}, {
   3.731009907857611*^9, 3.7310099602847843`*^9}, {3.7310099990949516`*^9, 
   3.7310100376784306`*^9}, 3.731010210638008*^9, {3.731010301243558*^9, 
   3.731010336496057*^9}, {3.731010425731599*^9, 3.731010432611382*^9}, {
   3.731010551442548*^9, 3.731010579833372*^9}, {3.731345428154691*^9, 
   3.7313454460978193`*^9}, {3.7313483897172403`*^9, 3.73134845543322*^9}, {
   3.731354124333572*^9, 3.7313541643886366`*^9}, 3.7313542012939205`*^9, {
   3.731354367711606*^9, 3.731354383631094*^9}, {3.731354488319127*^9, 
   3.731354615788125*^9}, {3.7313546506493425`*^9, 3.731354918408995*^9}, {
   3.731355001090394*^9, 3.7313550111528625`*^9}, {3.731355054505972*^9, 
   3.7313550673588057`*^9}, 3.731355102593439*^9, {3.7313552339224696`*^9, 
   3.73135524239561*^9}, {3.731361070315897*^9, 3.7313610704669523`*^9}, {
   3.7313611011267104`*^9, 3.7313611068777103`*^9}, {3.7313704994653845`*^9, 
   3.731370499624531*^9}, {3.7313725482458*^9, 3.7313725507305136`*^9}, {
   3.7495591924184437`*^9, 3.7495592369939537`*^9}, 3.749673075088195*^9, {
   3.749673133424844*^9, 3.7496731445554543`*^9}, {3.749673225169801*^9, 
   3.7496732252817183`*^9}, {3.749673263874672*^9, 3.749673265786564*^9}, 
   3.749673312467374*^9, {3.750364267378563*^9, 3.750364277474763*^9}, {
   3.7505223451301546`*^9, 3.7505223690384827`*^9}, {3.7505224103108854`*^9, 
   3.750522410966509*^9}, 3.750522495417222*^9, 3.7505997667550497`*^9, {
   3.7507786674780893`*^9, 3.7507787524265356`*^9}, {3.750778792868393*^9, 
   3.75077882179885*^9}, {3.750780747113298*^9, 3.750780779785615*^9}, {
   3.7507996863500943`*^9, 3.750799687036701*^9}, {3.750800157581446*^9, 
   3.7508001800695868`*^9}, 3.750800235684786*^9, {3.7508004339814043`*^9, 
   3.750800439548221*^9}, {3.7508006793980947`*^9, 3.7508006808012733`*^9}, {
   3.7508036242894397`*^9, 3.750803626796007*^9}, {3.750803740104218*^9, 
   3.750803799027543*^9}, 3.7508038769199867`*^9, {3.750803930263486*^9, 
   3.750803937853145*^9}, 3.7508041767715597`*^9, {3.750805401525052*^9, 
   3.750805430625412*^9}, {3.7508054754327917`*^9, 3.7508054889190807`*^9}, {
   3.7508056195474052`*^9, 3.750805621890048*^9}, {3.750811691007468*^9, 
   3.75081170062397*^9}, {3.7508779011247716`*^9, 3.750877906670597*^9}, {
   3.7508779666582336`*^9, 3.750877969661532*^9}, {3.7554902385267477`*^9, 
   3.75549024884232*^9}, {3.7555031425775185`*^9, 3.7555032683725076`*^9}, {
   3.755503318993563*^9, 3.7555033904428706`*^9}, {3.75550348780023*^9, 
   3.755503555060257*^9}, {3.7555036411386633`*^9, 3.7555036744984283`*^9}, {
   3.7555037088210106`*^9, 3.7555037506692777`*^9}, {3.755503787033637*^9, 
   3.755503853185321*^9}, {3.7555038842296286`*^9, 3.755503913052633*^9}, {
   3.7555044649641657`*^9, 3.755504575450695*^9}, {3.755504619844681*^9, 
   3.7555046303816648`*^9}, {3.7555048554353027`*^9, 3.7555049666235313`*^9}},
 CellTags->"\[Gamma]2",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfmajoranambdis", "[", 
   RowBox[{
   "a_", ",", "\[Mu]_", ",", "vz_", ",", "dim_", ",", "vimp_", ",", 
    "index_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testp", ",", "testn", ",", "gamma", ",", "test", ",", "gamma1", ",", 
      "gamma2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"testp", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{
               RowBox[{"Hmbdis", "[", 
                RowBox[{
                "a", ",", "\[Mu]", ",", ".2", ",", "vz", ",", "5", ",", 
                 "vimp", ",", "dim"}], "]"}], ",", 
               RowBox[{"-", "10"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Arnoldi\>\"", ",", 
                  RowBox[{
                  "\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], ",", 
                  RowBox[{
                  "\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
                 "}"}]}]}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "<", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"test1", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{"1", ";;", 
          RowBox[{"4", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"test2", "=", 
      RowBox[{"testp", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"4", "dim"}], "+", "1"}], ";;", 
          RowBox[{"8", "dim"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"gamma11", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma12", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma21", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"gamma22", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"ConjugateTranspose", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "I", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "I"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", 
                   RowBox[{"-", "I"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "I", ",", "0", ",", "0"}], 
                  "}"}]}], "}"}]}]}], ",", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"dim", ",", "SparseArray"}], "]"}]}], "]"}], ".", 
           RowBox[{"test2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "gamma", "]"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "dim"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "index"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"{", 
             RowBox[{
             "gamma11", ",", "gamma12", ",", "gamma21", ",", "gamma22"}], 
             "}"}], "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"dim", "*", 
            RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"{", 
             RowBox[{
             "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
              "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\""}], 
             "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "LightBlue", 
             ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
          ")"}]}]}], "]"}], "*)"}], 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma11", ",", "gamma12"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
L\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) L\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) L\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
L\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{"gamma21", ",", "gamma22"}], "}"}], "]"}], "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"dim", "*", 
               RowBox[{"a", "/", "100"}]}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)=\>\"", "<>", 
             RowBox[{"ToString", "[", "vz", "]"}], "<>", "\"\<(meV)\>\""}]}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Filling", "->", "Axis"}], ","}], "*)"}], 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<1st \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\"", ",", "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", ",", 
                 "\"\<2nd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", 
                 ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) \
H\>\"", ",", "\"\<3rd \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) H\>\"", ",", 
                 "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\) H\>\"", 
                 ",", "\"\<4th \!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\) \
H\>\""}], "}"}], "]"}], ",", "Top"}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x(\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Thin", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"{", 
               RowBox[{
               "Blue", ",", "Cyan", ",", "Red", ",", "Orange", ",", "Pink", 
                ",", "Green", ",", "LightRed", ",", "Purple"}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
       "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.731009307860541*^9, 3.7310093144840508`*^9}, {
   3.7310094623189073`*^9, 3.7310095289331765`*^9}, {3.731009593886669*^9, 
   3.731009623916932*^9}, {3.7310097067416854`*^9, 3.7310098660843983`*^9}, {
   3.731009907857611*^9, 3.7310099602847843`*^9}, {3.7310099990949516`*^9, 
   3.7310100376784306`*^9}, 3.731010210638008*^9, {3.731010301243558*^9, 
   3.731010336496057*^9}, {3.731010425731599*^9, 3.731010432611382*^9}, {
   3.731010551442548*^9, 3.731010579833372*^9}, {3.731345428154691*^9, 
   3.7313454460978193`*^9}, {3.7313483897172403`*^9, 3.73134845543322*^9}, {
   3.731354124333572*^9, 3.7313541643886366`*^9}, 3.7313542012939205`*^9, {
   3.731354367711606*^9, 3.731354383631094*^9}, {3.731354488319127*^9, 
   3.731354615788125*^9}, {3.7313546506493425`*^9, 3.731354918408995*^9}, {
   3.731355001090394*^9, 3.7313550111528625`*^9}, {3.731355054505972*^9, 
   3.7313550673588057`*^9}, 3.731355102593439*^9, {3.7313552339224696`*^9, 
   3.73135524239561*^9}, {3.731361070315897*^9, 3.7313610704669523`*^9}, {
   3.7313611011267104`*^9, 3.7313611068777103`*^9}, {3.7313704994653845`*^9, 
   3.731370499624531*^9}, {3.7313725482458*^9, 3.7313725507305136`*^9}, {
   3.7495591924184437`*^9, 3.7495592369939537`*^9}, 3.749673075088195*^9, {
   3.749673133424844*^9, 3.7496731445554543`*^9}, {3.749673225169801*^9, 
   3.7496732252817183`*^9}, {3.749673263874672*^9, 3.749673265786564*^9}, 
   3.749673312467374*^9, {3.750364267378563*^9, 3.750364277474763*^9}, {
   3.7505223451301546`*^9, 3.7505223690384827`*^9}, {3.7505224103108854`*^9, 
   3.750522410966509*^9}, 3.750522495417222*^9, 3.7505997667550497`*^9, {
   3.7507786674780893`*^9, 3.7507787524265356`*^9}, {3.750778792868393*^9, 
   3.75077882179885*^9}, {3.750780747113298*^9, 3.750780779785615*^9}, {
   3.7507996863500943`*^9, 3.750799687036701*^9}, {3.750800157581446*^9, 
   3.7508001800695868`*^9}, 3.750800235684786*^9, {3.7508004339814043`*^9, 
   3.750800439548221*^9}, {3.7508006793980947`*^9, 3.7508006808012733`*^9}, {
   3.7508036242894397`*^9, 3.750803626796007*^9}, {3.750803740104218*^9, 
   3.750803799027543*^9}, 3.7508038769199867`*^9, {3.750803930263486*^9, 
   3.750803937853145*^9}, 3.7508041767715597`*^9, {3.750805401525052*^9, 
   3.750805430625412*^9}, {3.7508054754327917`*^9, 3.7508054889190807`*^9}, {
   3.7508056195474052`*^9, 3.750805621890048*^9}, {3.750811691007468*^9, 
   3.75081170062397*^9}, {3.7508779011247716`*^9, 3.750877906670597*^9}, {
   3.7508779666582336`*^9, 3.750877969661532*^9}, {3.7554902385267477`*^9, 
   3.75549024884232*^9}, {3.7555031425775185`*^9, 3.7555032683725076`*^9}, {
   3.755503318993563*^9, 3.7555033904428706`*^9}, {3.75550348780023*^9, 
   3.755503555060257*^9}, {3.7555036411386633`*^9, 3.7555036744984283`*^9}, {
   3.7555037088210106`*^9, 3.7555037506692777`*^9}, {3.755503787033637*^9, 
   3.755503853185321*^9}, {3.7555038842296286`*^9, 3.755503913052633*^9}, {
   3.7555044649641657`*^9, 3.755504575450695*^9}, {3.755504619844681*^9, 
   3.7555046303816648`*^9}, {3.7555048554353027`*^9, 
   3.7555049666235313`*^9}, {3.7555054979724455`*^9, 3.755505501236388*^9}, {
   3.755505534789892*^9, 3.755505558009536*^9}},
 CellTags->"\[Gamma]2",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wfmajoranamb", "[", 
  RowBox[{"1", ",", "2", ",", "0.55", ",", "1000", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555035681947775`*^9, 3.755503637234108*^9}, {
  3.755503935835513*^9, 3.7555039576387005`*^9}, {3.7555040032351894`*^9, 
  3.7555040251570263`*^9}, {3.7555040715824814`*^9, 3.75550414315926*^9}, {
  3.7555041770352793`*^9, 3.7555041789940405`*^9}, {3.755504300871888*^9, 
  3.7555043055623484`*^9}, {3.7555043499484262`*^9, 3.755504426537844*^9}, {
  3.75550459042973*^9, 3.7555045905783377`*^9}, {3.755504642385866*^9, 
  3.755504674588169*^9}, {3.7555047359772277`*^9, 3.755504744747207*^9}, {
  3.755504839801261*^9, 3.7555048602543073`*^9}, {3.7555050149067593`*^9, 
  3.7555050151387887`*^9}, {3.7555050457709856`*^9, 3.755505045870902*^9}, {
  3.7555050826382823`*^9, 3.7555050828287582`*^9}, {3.7555100469752274`*^9, 
  3.755510051982093*^9}},ExpressionUUID->"c7af5f6b-8df6-4f4d-b95b-\
d5a155001542"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
N/Lhb/CeX8hr6zMJetQgfvFhZt0lr1DE6QeDuCNPKTJcLw0lmv18zFoiPKRU
6lahWYc4/WEIT7jtSn+/pg8V7+KVZ5gMYZHfzbr5ThOI0y+GsK8xb+WVB9y4
f99Sf0bgEF5fYzrvRDgP6R9DOOPZ9JnLblyYs71DWHSwQHTfoxHE6SfDeLQu
Y+O+sDa06GjgS+a6YTz/8HH7wqlviNNfhvF3+fKN5lo+iH07PsN4yPuxlNKt
QsTpN8PYe6uuycprrcjxlOArrdZhnGUpG2DdMog4/WcEmxeaKNhenUBe51bq
ai8fwQuX8Yt135hCnH40ggW22fkKmE6gRKfTMdoPRnCg7X+vQ+gjiNOfRrCp
6h4tofgBxC7PmhHcUu6rcfNZP+lXo3jP0LJJy8QB1O9GFewo3jZfKv3O9iHE
6V+jeOdjiWsdIUNI5j/RxTo3RnHt1tjvHV0DiNPPRrFc8RY5q9l9aNFD/EGn
ZBTbLt3lPK+lG3H62yj2s2LyhaT1oh3sBxjDs5TQ8XjnIcTpd2O478DBTgPa
JHL0i0jXvTSGP/wJPV7YxkX63xjm0U/u4Ovkxk+eV6+Z/XUM78ptTTx4n4v0
wzHs9+NhqUXiOHobzC5IrNEdEC/qPIA4/XEcF+xdZSuV+Q+VhK/brHdyHBtv
aKigS3UgTr8cx7ir55qGeDcaiLn0TS9jHA+3jTjkWfUjTv8cx+IHro76VQwi
2YQY0znSE7j09BvXh5ZDiNNPJ3BTUYSnjc8gMkiu+8UqMbzaUO1D+r5BxOmv
E3hAMkV/u/kw2pkqu3vuuwkcKTDTbp85TvrtBN4s9SFs7+8ZdC5zU+VcwUns
fy8v84IVN9EPk/iofPyDwMtc+EmOq8W8fZPY4nG8Ya/mOOnHk3ieT/NH2sFe
9LbgTe28mEncd9+2NORvLeL050k8WNHtERpThEp+Nh6ePzWJXzdcfnC3uxZx
+vUUDvLKujB6sA8NlCo2zzebwlVvpnoXWU4hTv+ewl976dsenOfFslVGtguC
p/DsKft18Tr8pJ9P4Tap2efLlvNig7prnQsGpvDpSZ0eZ9oU4vT3afzQ4GHy
W75+tLPp7Sn9DdM4k9nwec7kX8Tp99N4/Cn9jOzyYnSuvbVP328aG9HpKY9C
ShGn/0/jLO7WTxpCjYjqngvbp3HbLxV0W6eHzIMZfGLL+ufb7g6htwNmowtX
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
VWG91Y/0kMAowmNVgfZcBDupxKI3K6gFVQUHs4T1JQ2xhM+qgkDNmj+uP6LR
CDW+MlTBQ0BoW8dIKOG1qrDHueHp9Ru+CK/exBrxqvDUWfHV0PLrhN+qwpE1
G2OeZZ9Fd9kNQhWu6306d0zqMeG5qiB79W6/tX0E+slSz/8mVeE5v+7t2cuT
Cd9VgwHeMsuA5EykSLUHaTX4UZ+zQAblEN6rBlw2Wa8Vr+ahg+yBpwYPO7iO
B5TlEv6rBuqldbSg419QBHWcV6jBIatrGq810ggPVoNl9z6e0j4dj3rWyxt1
mapB61lht7U6zwkfVoOqlgRX3w3/oaVsAacGLhncyRe9AwgvVoMu4eWtzj6J
6NqmN+5dl9TAZB4zQvV7FuHHauDvdEGjdcEPlEf9ubsaJM88/7bldinhyWrQ
IugccuVQJZJkGxI1eH7/XKx/zG/Cl9XgyIN3/6zUKpG5EaWA1GCtpZOk885S
wpvVIKj9hFHO/Z8okKU+u7+qQa+W5N2lL/IJf1YDHf1bl17T8lArhVNr1UCo
1Hq1ROB3wqPVIGn3t3eiiqVogdmV7d39alDDn2zlvrma8Gk18Ozf+2H6Rz26
tI1STOqw5N5K2gqnBsKr1eHR8d0L6NN/UcZ2Chipw5wdXXm+Vf//fIg6JDcv
u5bNX4EE2cBXHYxWy9DnlhQSnq0O/4xzZXbuzEJmuxJKu9erw8qMvS6x5zII
31aHC4a6Xyr685DfbkphqcN9rlNre+XKCO9Wh6+G4qUfM+tR3R5qgVi/57Yq
jNnfSvi3Ovz23/FpUd8/pLNXaelpN3XQ89AdmJ7VS3i4OrS+OhCta9GLTrPU
W4+vOtj/7GtR1OgmfFwd+noNj1cYtqP3+6mCV4e4lQYXuNc1El6uDoIXL7Un
JFSjGYtrT3sy1OHEOq/nahmlhJ+rQ5XFi+xI8xK06YAxS7KqQwSzIjb5VAXh
6erA82t286bVdegRe4CpQ7t9/PH4jkbC19WhIz3kqrt0K6o4SCk4dQhUHey3
4m4jvF0DrO8s7H3l1oI4uEsDas73fawzaiT8XQPcny4Pq71ch2zYgkwDTCcd
7HK+VREerwFmSguXvCqpQmw8s0IDdvxewDWtXU/4vAY8fbT58HXRZkTR2DNm
GlBncWr/il8dhNdrQPkv+enNNT2IjROsNaCCdrli26E+wu9ZP/eNpAWY9iGW
+Mk846QBrsfTP4Va9BCerwHyZeue80W2I7b9ddcAG5Ny/bpPDYTva0C8Tm9i
pV4lUmQbZg1IWu1obqbxnfB+1v2WboriHvyM2HbtnQYE1kOBcEsW4f8acGZ1
xWgEFCJKnZwt0ID+srw9VffKSR6gAQWdjswTMbWIbS9qWdfj/rZNZ28DyQc0
wFbRu3+RZyNiHR6WotSABUEis840NJC8QAMcU7cb/PtZjzjxrSZA1b0kI6c/
JD/QhCReY6do7UpE0cyzapog8PecgHl9GckTNEG9/8TtnVVliC3f9DWhYFLT
vnh9BckXNCHc/dj6lBRW/Z+nFKgm+H1M+TNcUUnyBtb134WmuxSVI7bc2KcJ
FutCawtii0n+oAlpWg92JN0sQK0XqQLWBI0DvLt8F2SQPIL1ft13DBTEXyP2
eHTThNDQxH9X3niRfEITmG94A0V4PBA13R39WH8f4DPromgoySs0Ydh9Ma9h
YiJit/MYTZj+a/Qo+0kqyS80ofihObfZk0wkePlWoWOmJojMf+JQ0ZFJ8gxN
iC+p9e1K/4TY7adUEzZnx/6wcEwm+YYmNHpHF765+RpRNPBcuybQi+snfxx/
QfIOTbCftS98xZu7iPPxMdb19rcZGEeeIfkHDbQlzkXxTB1G3ux4mQbF2nX9
dSp7SB5CA+GkH5Xltopo2ecs1sSkgU+s3rBsw2GSj9DgyDGpeC3rR+jPGgqo
0iBnZP6dkZoIkpfQwPN3xBzZgg/oOltw06Ba7tviXOlskp/QQH3llXDNhAKk
xd4QGkQOR17ZmlBI8hQaJES95fa68g3lf7FkWToaiE2Yq+j6ZZN8hQZqG8Yc
Dta+Rw7rv4h83EiD0y+dfziW/D9vocGWJKXTWtfjkRQVN2yjwcLtpqe65uSQ
/IUGPYxfw85nylESJUcsaFDQVIYr2htIHkODurR/aDytA+1lG1QanND1ack/
1kvyGRocuGGlTUvrQ5MbqQZGg/d8P7/LDfeSvIYGf90+Pdp0/B8KovC6Mw22
ZZsFhmxpIvkNDf6tWjbskF+B1lPj9xYNJOy45qV/zSN5Dg2W7fUZaEn9gtry
Pa+4eNDA7NqeFVcDS0m+QwP9tGOOn5uakfuWkYcf/WnQjBh/7b/3k7yHBteP
0O/aNY0jfTbQoUGW8NWnDR5c5PPXNCi/VJE8+y83LqXGTSwNDq2b9TtDkRtz
8iAaONLWTt5ZNoWcWGrT5T0NGpoWSH4THCH5EA1OxY15yV/sR2rGj39+/My6
3mqZnVOC/SQvokH47d/j27uHUSaFT7/RoH/mZv3YUi7yeW8aLP/lNZDNJYCP
Uu21nHW9m9qlLQKimJMn0WD/4g2jl3zEsRAbgNKgZf5aw8/hYpiTL7GeJ/aE
4awNQvi1KSWQabDpTr/NTS9uzMmbWOsrP+vDkq5BtI398WUa+HPdaysyaSL5
Ew2kq1afe3HqNxpkf7yRBjvD8otkSltIHkUHhcUnOrVFxpB/kRVLQdGhgaaR
Z2MvgDn5FB2GNVPjA99K4VXbc3akytJhh+FvhZEH8piTV9EhYuf+BU6hSrie
wmPqdIj7Yb500UplzMmv6HDwp3XXQT1FfIttKOnwgX+3auCoDObkWXSgD63/
scpLFOuyGw4dQnoO987W5sGcfIsOs+PP70rOG0Xfdx70Tl1Fh7H5MXo76kZI
3kUHO9vwUL53XPgMhYM20sGEudNsyR8h8v0UOgi/vGp+P04Ky7HU7MrtdODv
4irqvS2LOXkYHdKKzxUo1cviD2XUDdFhctJrTZiXNObkY6z3P70nNaBeBFuy
AQwd1rjWLfo+yY05eRkdHD5FLfocOoK42AOaDlcPXFJojBki+RkdiqrLMlZ5
zKAwc6rA6FB9Flf0XhTGnDyNDjV1xvuev5TBm1lq9/ItOpTd0+wx6lLEnHyN
dX/LZqlfWK6K/+19opjmQQezAz9VVSJUMSdvo8O3C7qnRpSUsSdl9/3poDzS
uDtMR458H4cOPHULI8/9FcWGbGBJh48OZx1i1syQPI4OHbclHv6JaEOVVZSg
pYP0mcsnE2tyST5Hh90zH/RkRn+hyyw1nPae9XoXw6C/2r0kr6ODRrBLyiUZ
bkyj7O1nOjiu4uKtviuCOfkdHbIVl/bl/JDC2VR7+06HFh0sXa4ugzl5Hh0u
V4tP2/+RwrY1h+5fLqfDmTn1koPyopiT79Hh+dFv5lEhPFiMDfhZz3N896wj
m4dJ3kcHd5tIbX7UieIpO9dBh6cyH6pHJttJ/keHxK4XAe7d/WgXdXyG6PB9
g93uNX4TJA+kQ52g239LV3DjUVb1Xp6hQ4/iLJ2FijyYkw8yYM+zWBeNXzPo
OfW4wgzwcbzVZsKqd05eyAAl5Z9P4k62I6DsiywD0jZ512RqFZP8kMFy6x9+
85SGoqbDFGFjwKaxu6aate9InsiA7+s39whNlaH/2MCEAcZBFSWuL5pJvsgA
o5SmR0fWdKO57IHKAJHMGJs/kn0kb2TA3IGlpT+29qIiSq6vYkCJptyKec0d
JH9kgIqBxVwD+0Z0/mg+Wr2JAWdcV7lZn/hN8kgGPGBoffjo9AspsdT2le0M
WO/oECNYXUTySQa09GWd82oqR2lU/GTBgO6wHz6Hd9STvJIBk2pPEq+0N6FD
bMDIgHcfAmvq9VpJfsmAGXPzF6tmmhEfW4AyoMG5+mZqw1+SZzLg4PVjM6Pf
f6PIVmoAMGD6i2uyX00JyTcZEK9mMm+ksBwZU3HLLQbsF3u68t7kX5J3MiC4
w83vgfg/1EvJMQ8GxOLqiDaVAZJ/MuDOYoNvJaeHkTfrdK5+ygApK8WyYKUR
kocyIMrKan5Q0hBaxgbyDOh7YNL159wgyUdZ6/8h6NvbvcPoDxUvxDJA12D/
o+fDUyQvZcBmh7TLUYoC+DolP96z9mMya+fNNEnMyU8Z8DXnDe0VtzzWcqAI
JgPmCYi91VqsjDl5KgMewkvzju2qOJ91eq5+Z0DjjjmzYpJUMCdfZYCmvmHW
ytuK2IHC6eUMMDGiD0lmyWBO3sqAe9pzg93FxbAUO8BiQLZ7w0HaIgHyfToG
OAgnPhZLEsBJpyjAwYDIby+1ah9KYE4ey4BHW2pzepco4L09viyHxYDxvE03
JC5pYE4+ywCZYMZG1MzAkxQ+nmGA0xEPn9VK2piT1zIhq1U32NNcGwf1Wl+c
FmbCkcu2e8rbmZiT3zKBh97XeqSUjtefpYgrE5J9K5N+/EfDnDyXCYfXd925
ZEHHbX3UC5igMXte8dMBLczJd5kQnIdhS7cedmcDQSbs3JAsYNGjjzl5LxN8
c/K3K1cZYH22YGT9bLLIwMFgMfn+IBMif29uCTA3xKXnqAJggtHLRguZ9Qsx
Jw9mwoeU/VonTWZjp8ECliNkggRqN5n+rYE5+TDr/lqGNu6XlsRqFB7czoR7
yjtzaPa8mJMXM8Gke6fTpKUUzhyiGjoTitFD684MOubkx0wQD6Hv2zu8AB9l
A3TW+liuDF83sBRz8mQmzKSFf+8YQ1iIbbCY0N1Qs8L39RrMyZeZoN++fW33
8Br8msJhLkzQWbbq3aENgDl5MxNkXkXkFtJW4G3UeL/FBMm+jfY7vRaR70sy
4WeEflCClS4edPI3wo+YUFO9wad2kI45eTQTbId7ygabmNifGkdPmVB4dmKO
uNk8zMmnmeBpdKntg8livIodOLH200rbKGLXSszJq5kwIDm35eZOhOup9hnL
Wg8363vyA6vI97mY8Oj6PXEN56X4litFtJmwvY5nR+6FBZiTZ7Pu195YQLef
hnWpcs9i7f+8NS8ue0pjTr7NhLilir3RkXL4O4U7vjOh07BscV+RNubk3UxY
cVAgpnCeIT5DHc9yJsQInVipeh2R748xQUv078vV3uuwHDugZYL82w/NByY3
YE4ezlqPf1OKUa0b8AdqOTuZoCtt/jPg8DrMyceZIKgyHH+GF2FLyt4PMeHG
B9Xso3cMMCcvZ8JgXFJrzhom5nzbXAsSKx7mH7rNh/8HQQtSwQ==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwc4le8bx63M7L2OM+y2tup57pZ2NBXSVqHSIPkV0tCQpIw0bJGSVRLZ
MqKEUJlly977f95znr+r6+pyOec973me577v7/fzPYdx5OzO43w8PDyt/Dw8
1P///+ktu5d/6KYA5tvIW0x3vYGFvsS35K5mkd8f495i5ZxjtxZi/n/XFi7I
eIGndPpj7fgR+XsYVtXf8y3g8FrMF7CaRy8oCut+HleMallPHh+Dm+68bzow
sR7zaRxOUOuJw0q0uherHq8lz0/EIUJWK1Rd2dc7F9ysKZWEBw4LRBfPWUSu
l4x5JMsW95ZoYf7sBuU581PxyCL5nleRcuT6aTjPBT+/4iWN3UQfRqhEZmD1
gs2Cun108nqZ+OS36R2f7edhN/ajacuycfVCd3Ha5aXk9XPwVOShO/L9K7Gb
xfefzPxcTJfWa76+6//3k4ebI5lbXu5egd1unuvX3peP98+1b/2wbTG5vwL8
687ILHHjOfh6jLT4rNZC/Ji368dAI4vcbxGeR1vnUzvAwNcr47TnORZj8W1z
g+Isdcn9f8WmrPU2u7wN8Br21ZQFSvBPxfDPxXRD8n5K8LVAw3eH1gPOkht9
rbr1OzbXNFnTNbSavL/veJhVbej7ejVeo1eQrP64FFtHhxa1jyLyfsvwifFl
EWv7l+KsVU8+a1SXYcsLtP37huaR91+Omy7fO9qRzsBrdp4qY2j+wHXGOx0n
LKTIevzAbSt35NJt+HGW1fJ6lm0FzunqMzKTliTrU4kFVjdvm/pJw2v+E+nU
SqzEC2Cf5ultemS9qrBNR4O5zLoFOOvBz1GdiSqMKo2aA0z/v78/8djC+Qtt
Fy7Ga8OiBPXX/cKuxZ93KP9aSNbzF1b3TxQ0756Psz9clp3t8Run0lbBpi59
sr7V2Fx5VumTfk28tngTfW55NZ7t1XHrkvn/17sGHxyqSPx6m445D1erxcUH
uluOlDPI+tfiX9es9la0sfDaobblBsfqcOVn7WAvUy2yH/U41cjDZ5WSFj4y
4wBLZW89tv5EN0JNTLI/9Xj9p3XXJC7RcIhkrp7qWD1WkKvO7VmiQParAW/K
f6pZe18C/6Fe/kUDti19+3BmoiDZvwbcebT+IN1AEDM1fZaor/mDg47rBXuI
zyT7+Qen2GkMSmbJ4CNzJ1fSmv/gmJ8LslbcVCT7+xdLRulqRyeq4JBlx9dq
3P2La24+NW3foUr2+y82uCaSoLlYGf9ZQy1QI/7w+g09nFee7H8jdilN33U9
VRIzty02YZQ24mTDj1eiFAXJeWjCYitNHzwbmkRHTJ/vZTo0YXTtxZeEfUOI
ez6asKHrls7qCwMo5DC1QM04ZI7F3KDEQcQ9L814Yob8j2ClYfTH5vRRzbRm
/K9z/peys0OIe35acLLxz5etKv2I6fDjlNaRFnxC0dXvnvg/xD1PLXjTWr8V
dyYa0BHXVXbagq14vGnznOHiCsQ9X624uerye7+aMhRyN9xB51Ur7h44Mj1S
9BNxz1srLn/z83rKnwb057H4Vd3tbZhHbc/zldNNiHv+2nD9/uc19fotiBVo
f12vrw0XDnrFX21rRNzz2I5FBop8Du+sR0ejau7o+7ZjNc+MC96NFYh7Pttx
zVvraKHfJSg0Yb3XLMMO/Hov88NHx++Ie1478J7W5W5HT/1Efz+98Z1d24HL
V+2fvdDmL+Ke33/Y95S04ZymdsTKl38+x+0fHtm2pPzr5h7EPc//8ELBVyeq
JXvR0dKroXO1O3FmZMODI6u7EPd8d+LRMz/K/nvehEKrm6LmFXbiYWGjbuHJ
H4h73rvw5uSb2zVq36G/zdti55/pwiM73v/kKw9F3PPfhXdbe9dkaJYiVu+7
9wtkunHGtaJHMafbELceurGUhlvrtq4hdHRc/ZPB+2586NgrJ9r3acStjx5s
YqSps0CRD5fyUa/Yg5nGrreXGvKSeunBEndP7FntN476hIaPqbj0YCXZZwEe
XX2IWz89eMe9d7+HJ9qQDHs1Vb734ITEcK0ZqANx66kHB2rv0j6ycQgZyBy0
UWX1YsNrBaZRIXykvnpxxukayQF5MbxT8VGXqn0vVtGdOWVTLUXqrRcP71kl
XaEug8+r5Z1Ty+vF904t7s39KkXqrxdvejLJ99tdFHszxgfUlPvwwj7H5Esy
vKQe+3BXq0FQg1YPimevtrpNH763LUlfZuQ74tZnH9bWcDodX/MZlc6iVqgP
L58Su1/9shVx67UP38FnbKNXT6O++X7ONMl+/ERiXuSFBjFSv/34a0/DnjAd
OSyz5AuvxuF+rN+vdWZYSZnUcz+WfFakqvJSFRusmL6hkdCP199kqdsv/399
9+Ow2erdWzoV8U5YKEyfMYB5xLbsf/ZChtT7AF7Sv7Kyx0EEn19/4h7ddAAf
ySlNX+k5jbj1P4DnLbVX+Bs9iLw3P5VgRA3gi+YvDTJDhxG3Hwzgwlc1BkUT
vDje+NtD9hJhm0+7UgLqRUl/GMSNKx+uDvOWxqW7+eWZ2wZxxa9zhUr1spjb
LwbxcZ7pbz03ZXHf/qX+zMBBnDl2xfRuzP/nyyAeTDAxXlItjLnbO4gf5YSF
Crzjwdx+MoQjSiL1d9YNI4NjgS9Ya4fwokXnd7/PGyH9ZQhraRzq0dPiw5zb
8RnC5svWfF3pLYa5/WYIv9TepRo4wt7/M0Lhmi1D2OXO4c6D+opkfg3jINM9
Sw1WKGPvCyt0tZYP44pO03mOoUqY24+GsYl6pcLwPXkc73g2WuveMH7olhwb
mCBF5t0w3jesmnfCRhBzyrNmGJ/8YtWhJTpK+tUIXn76c4lMeTPqc6MKdgTr
7Fpx4fmZn6R/jWDdqVutJdsakcxtscU610awkZjmhyWdA6SfjeDm0p4T1715
scF9/EGnbARLmJ5YpL1emMzTEfzoNF6UGTET7+S8gVG8/cCakUs+4pjb70ax
XRuzvFlQDJ/3e5mme2kUL4/z6s/hESTzdxQX2LrVjy7lwY+e/V6tVzCKGzdW
ju1g1zu3H47ipCtSuyaF+lBCMKcg8Ya2YW95hz7SH8fwjqQ5kl+EhlFZxNqN
+qfH8OfDeOLWsknSL8ewdJTmz3RFXtwffemLfvoYVij88V6vgZfM9zF8zOnK
kz+ePFg2Lnr7LOlxTKuguVs3jpF+Oo5Tz9MbbIr60ML3dd/ZJYYnnh49n9nY
RPrrOJ57brehc2A52pUiu2f2u3G8bv+j/uaUbNJvx7GS/tTstII8dCFjQ9Vs
oQm8QmrJkG1+Jem/E9igY1tgyKZG9Cj3P/M5+ycw6vj4YIPVP9KPJ3C9Q3GR
3FAPSih8WzsnegLvrbPQoqf2kv48gTeHPmrOP96Dyr79PTx3cgI/WtmOxlLb
Sb+exO3K5biy7Q/qL1dsmms8iaVHvg5dtqsg/XsSFy/deqZzVi6S/bXl5Lzg
SWwnp3hW0zWW9PNJPPXg0tfzZZFoYZ1Lx7z+SfzywLDtwdok0t+ncOL6vSq6
fjloV2PCmfnrp7Dxtjhe76tfSL+fwnf2RlzdHFeMLrS19M73m8LNRU4RGnGF
pP9PYa/5BYs/S+cgqnsuaJvC2lbhs2QLP5B5MI31bWffGq55iRL6jUcWrJjG
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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw1mwk0Vd0bxs3zPM/uEEVSSZJq7zekviZJg2ieQxKFkkKaDGkgosyJpIgo
lSRJhopQUUhChpJ59j/n3v1vfWt9y7r3nnP29L7P83vuZe4+sn4fHw8PTzs/
Dw/9////sxd4/KG2QBjzreCtYPgG4CtSl2+Gn9Ihf4dhpYPSNV+8jTF/l9+8
uQUxOHDnKvfBnsXk9SQ8valp2cIWwHxRS3n04lLxLuQ9S0N/KXn/A4zj/Eo3
u2DMp70rS6MnE7/45+B1KsuMfD4bzxUf2fPw9nzMdzS+dZpMLj7C29FvIDCX
XO8plv7ducXykD7mf/1Dddac51hnR/sjh8Zp5Pr5eHut6IaKBBb2F7uarJZS
gC/0FAbO8dUh93uFM95Evruaaoj9qXdrmb7G9t+FP0beNCH3L8Kbhou6ftxH
2H9r5VdWyRtsNK/29enN5uR53mJdCfcXhYPm2P/c0T5duxL8RXXJ5Wfx/x/v
O5wk7LKotnsBPvtAVnJmeynu3F/wjefa/5+3HMvLMuR86hTx2c+ZurO9KrCm
mm1JwAwJ8vzvcelIYE0LLwObU1dTFfiIi/tmD+g9nEPG8xFbu3lZ/o5aiAsV
Ru6rr67EG9YzN13uR2R8lTjsZaB3VSXC5nrvnmqGVeGByPJdnT0LyXg/4WlO
/NOYuvNw4ZKbxdrfPmFBb5BViJ5Jxl+Nr9k5LppnNAObrz/0iTmtBrspx3rX
mBiQ+ajBdq8PFybwGOHC/Qub2M61+K2YaNNu+P96fcalKV42inIm2NxbtFsn
+zN+4tcU07TBmMzXF7ztyv2Qcx5zcWHo15Hp419wZu3ZeajPkMzfVxyferCk
5PBsbJGUKqRvWYd3j5lWjcgZkfmsw0+OL1R7pjQfv35yQt4guB5rCW23HKk0
IfP7Dd/pXGp1eHI+tqj4j2FY/Q0fzGqtfvHUiMz3dxya6stf2WiAOW/XaMCJ
qd8vCMvrkvlvwBVpT92X5bKxxeDvhUZ7G7H9u2rRvE4dsh5N2KCp0kt4hz7e
LbiNrbapCe/xXvif/LtZZH2a8Oj1489EG2bhBOk3euqjTVj6xtOSrRH6ZL1+
YHuFP5/z1XRxM337mB94QL87TMCOTdbvB9Zamrvdf940zJoWbqJp3oxr/x35
vG/dDLKezbj/zOtfqw1n4d2GE4u1WpvxULdRR9yl2WR9f+JbH0QUMhZQ9zfd
Z6Ed+BM7C/6oLnTXJev9E5su+2Ty6q06bjanJ6gFF7b4JGgtkyTr34LT16rM
LZYUxqw189cxq1pw3rJbWXrD8mQ//MKKM0JTtqqw8O7NtzexPH7hAEfbQ1o+
+mR//MIF7TfvWgXOxgm76AlqxSfCs4fdTGaT/dKKzzNE2nw/6uFmp8N7puW3
YoXax3Iy8Uyyf9qw3yKDF81H5THLo+aQzu423PtpXMNgEx/ZT214y5KlK9z5
R9Fu3yWuukLtOLh5+Y20VgGyv9rx5lUJBzxV5HBC4B2P6ffaccHucWo21Mh+
a8ezinqF/GwZuDlM0mfG2t/4xdywNvuZLLL/fuM/5jOKAqNYmB17/Kxe72/8
bEpKvugxk+zHDmywZcVnS2VtvCf1+yX9Gx1YN6K3MN1DhezPDvxAVbHXb5MM
TsxadmWmWSeWfaafsTKKh+zXTvzkXuk0qXM/0c8X6TcMGjqxEL/+9sLPrxB3
/3bhVRnGk59WdiB2ieLtWf5d+EZ0zCtNY36yn7vwr8O2c6plZfGeKp9EQ91u
HGj3zcforRLZ3924WlKvreCCCk789it1dmk3LvDNZGu8UCT7/Q/+rX0q1s9U
Gv9sXZMxx+UPtvQSiXRk8pL9/werP1jJszjwN2L/e5wzV+4vrjEwvOL/5BPi
noe/eMsfsTotxXa0Z0zzhVHOX1wwcPD2hsEJxD0fPfjY5UzFojRRXMVH37EH
B+jss1w3Q5aclx78om6XyB4dedwrPLRX7UwPRvO9q37ukCPnpwc7v0pvZl2U
wnLUbKpV9mDGGZl3MncEyXnqwQox0RMG0iPISG6Hkzr7H37wNPjKzku/EPd8
/cP3d3mkx1qXovXK1/+oH/+H1xmmJhX0lyLuefuHq4Y/nSlS/4ncNN4e1Xj7
D199o5y1+WEv4p6/fzi6ouOeas8ousYc69dQ7cUaCrLZNawpxD2PvfjO9v1u
n5sn0CNqtjWdenFleO1FDdlhxD2fvfi4qJDtdKceVDWTnqFebHrxpSwzvwVx
z2svVjysHSi08AfqnRNxWku6D/923/LeU6gdcc9vH06tOrRgfGcfkjMp49Xe
1YcV9DYEOIqPI+557sOCp2dvzT/Ni40WTQVoZ/XhJ25TfbuG+cj57sOb3Ge7
6vLx4fUwT4Qh2I8rZczaBComEPe89+O3Y5L7swf6kduyA0GMzf3Y5v30uyzH
NsQ9//046PuM408XVqJrK6OlmKn9+Kf37Lyx7iTErQf9OLQlKV5dLx89sv5w
lZoiPGxsfkirvRFx68MAPjjjltchn3+oagO/ImvNAD6U4/ZkfuYY4taLATya
NCu0LoYX925ZEMmKHcBm101sWWl8pH4MYIUbnzaWevBg7vIO4OtjVgsO7BhC
3HoyiNeG8267sqgdGe2NjWFbDGJ0CNQWipchbn0ZxH8vXToZUx2JOI8TPoij
TPjq/979gLj1ZhA7eZvsq7RvR24uwnemtQ3izIfxs8K2DSBu/RnCLqreYUa1
Y+ia+6IZOguHcHGh05WayAnErUdDeJr5tuoRlTH0yOtImk7QEB4Zt2AaZA0i
bn0awqFhC/eUzutDnOP5fQjnDPL0WSzvJfVqGAvzJCb7PepDvf70gR3G1Sa2
/o1PBhC3fg1j0bYP69X3DiK5i+Lzp/sNY2sNu/s+Tf2IW8+GcXLAwK485V5k
FIKfTP80jOct2pPvObMHcevbMN5yLBh1av1D6zkDGMHTT6pJWJ8eQNx6N4Lz
+d/XBn4eQ24Rd/NneI5g9lXzK5MPeEj9G8Gayiom5zN58fVb9Uv13o3gJkUF
6YH9PKQejuAQB4FBZt4oyornHEi8SvW36dWmPsStj6N4o/iL2q9L/6BPyRYr
9A+P4idmCjLKgl2IWy9HsR02lLUR6kF9aZ5l+i9H8YYV/I8vTe9D3Po5itXv
2K2QWzCA5DPT1s6UHcMHd8i9X794AHHr6Rie7ixhd1+wH83Laaykjhi+Uro1
+FZoH+LW1zH8U0pDIOj2ALJ9Jr/R4PEYfqY523nJjlFSb8dw1Xj1uf6JKeRe
sPyLgfA4jp5+9sNgNi/RD+O4OXttuQA/Nf433g6ztozj05+/2sssHyP1eBxv
axk5KrTpH8oqfdgwK20cCzOfXOq+3IS49Xkc/7n9rfDBwEf06cPPXYYT41ho
whtpB39H3Ho9gRVN3SJKS6nxVyv/MrSewKuTdHu834wjbv2ewOFn1tWutODH
8nWrDs6On8B7q2L4B5iCpJ5PYMagiM2Svfx4XuOZztl9E9jDVMXY980E4tb3
SSzx0iDcuLYX2bZkucxZNolNVra1yURT/YZT7yext/yWAz8eVSP3323/5kRM
4tq5PPGDRTWIW/8n8flvA2flSpsRXT3n/p7Ekz+CjYqn/yH9YAqzynz8Kt70
o6w+6+G5i6awRoV/9d1TI6Q/TGE/kzf8bTXj6NPwWW+jkCk8+n2yruXGJOkX
U9hWenO92qZJ1DeRO2nUOIWH59u4zrgyRvoHD5xfxbxczBhEgbyDBTdVeMBK
aCM+FNqNuP2EB65e2tRYO/s7UhO4Qm9Z+Cm2K6lfuQBx+wsPzLILt+fvTkP3
qN0Y5cgDUzsrB0s7KxG331DX6wphPDFvQ2aiReeirvNAlemckqG7fYjbf3hg
xZM1LUc9R1Cp+Pa3Uc95wCLezMy4chRx+xEPJDzqx8JmQ8healgk+hcPoGiN
hk/aPYjbn3hg3uqsjhU7m1CHDF1BeeG74Am5ybRXpF/xQvD2vZfjPyxDJ6nd
Gr2AF8LWzu3bIJBP+hcvSCRcLNoTV4fElIoronfygsjZoTTdT+2kn/GC1oO+
zQUL/6EolZ3Sty7xwqypjo+dVX2kv/HCX7mzYwEf+5C++ui6W4+o+zu+bpIO
+Uf6HS/EZnfmr4jtRHmaYddu1fNCo9CucrmRZtL/eMFHMXVcLKIGraR28y0B
PvDqE9jC9+4V6Yd84Lfw1G7tR7dRHYs+EHyw/0XD8sn0CNIf+aD/ZOCGVscX
yFGHrvh8wLPr1tVDrpWkX/JBq6tJrdKub2h0+njk7TN88NzG7a2hWTPpn3yw
TujfWQHXnyhQ/0bd7RQ+cM07893O5Qfpp3wgeTj5b9/IV6RGD7eSD7IXt/V7
jL0n/ZUPPA6s1hvFz9G92aXbYkb5wJT3y/36jfdIv+WHN6p574cXZyEzTgPh
h1NGoX5szyLSf/khZEnFC50/H1Gp8WRTzGp+cF37tUDEoJb0Y37wzJj+fZT5
BdnT7es4P5wRLTsVuaOW9Gd+8DkUkDjvSSXqWEjfgB/kMhINmo+9Rdx+zQ8n
lCrT/Rc8QScXl9+JfcsPuYKPjgp5xCJu/+aH5Afm1hZD25AY3t8W28MPcUeK
h+e980Xcfi4AjW6BZe8O3kGccq0qAIue1rucL8wh/V0AlDNv71OSeIXo3R9n
Tr2/V9qpjRoft98LQNQasdZyvyKUZ2V8P85JAPjWNq1HBq9I/xeAFj9n6+HV
uWjlf++748IE4GCM4gw/r7tEDwiAbF3rK8GKIMQpTy8EQKDMJDL44iGiDwRA
8fN/S8s0Q5DjWrqjCkCYV7zi+tJEohcEAG5NP9d6OwPRuzNeWhCUN8Q52x55
TPSDIMQdverb6JaLAm1N+uNNBeGuc6BrwexcoicEYbysX9j1/WOktunjfEoT
wLCf+fA6nWyiLwShavJ4grH5I3TPztEzIVAQeObnpaUdeIi4ekMQDG+ZurOj
U5CZg8DThCxBKMsoa4y+Go+4+kMQPBYcs7r/NwrRuyfhmyBIx7P3LFoei7h6
RBACKsZs5h5MRfY7TRcnCgpB+HMH2TCHbKJPhMBY87WZ3YrnqGM3XfCF4Pe6
OKHQ8gKiV4RgjnXB+wSTV+jkPueXiZuFYGaKyA77knyiX4RAZmXBZOOxJ0js
oBBvkq8QONt8HVg4kUn0jBBItHTeSH52D9GrS7Vc6OfJ4m85lkz0jRCcO3bs
xybpZKR/2CwgqUoI5n+YXqr59y7RO0IQ6r/u9PjvNJR3pPpN0pgQXHoad2iw
I5PoH2Gq3h214BF/ilZyPiAMC+waVaeevyJ6SBjUpXaWSN55i+qOifx3Z40w
ZOe7QeaacqKPhKGjyHl12uUKRM/+HQ9hOC36yzFjRinRS8KQ3r5bWzi9EI2e
oA+AMEQf2ftOa0EW0U/C0M361iZnEoYCT9VKJpcIQ7vCzQV3TNyInhKGi59D
lV/1JiK1M67Wyf+EIUHBq3tl33Oir0RgnpC4276kd+ieH13QRQAnW406zq8k
eksE7kenJpd9r0L07CRbiEDJoUfmz7dUEv0lApZG9z0vvStFpeeRwl1nERAL
eTC5daKA6DERaB1d6rxXKBPZX/qy8W64CNw+kVK0tvAW0WcikONkxIKfEagj
iFZYIpDUrfm85UYK0WsioNFUdnB+YS46eVni6902Edifq9y/4nch0W8i8NGl
SjyUXYo47UhGFCxGLvSNw0ei50Th0DPH50MHq1DUddiaslAUXPbPuCzXWkX0
nSjwnLD93GFRiTjlc7coJHyPflrMKCN6TxSGmypq5+i8QnmRxxpTgkTB8WVs
nldsOuLqP1Eoswr+fumHH1pFH/dsUQg5a39UWMQdcfWgKPS2LtdanJ6C6qmr
p34XBe9Fq1UanrxEXH0oCo8+HSnQFi9FTpztKQaV85TuDRz+SPSiGBQb68Qn
Nn9EYwm0oBGDlm0G63qCy4l+FIO42RpNrBWvURA9nXZikNL0aNWzykdET4rB
/GGjMcmz15B6iswhao2hys9Ipf2pGdGXYrD/oLGExtIbKO0e/U8MfHWG+a/z
PyJ6Uwx0I00WZB8oQIvSLbvufaLuv9EsWaG4mOhPMeg3eXWE8aAUlXHknRi4
GSUaecWXET0qDjVJOopq9e+QA2dDi8PaqYcz04feEH0qDpFBHQ+WPi1Andly
1CfEYVOP3frsvsdEr4qDm/LOs7PeJyPv3Pu9aZ7ikGxtVL55ZijRr+Lw7Hza
gNp0dyTOKdDioPVoZlGv3BWiZ8WByevyULYtGUU/bzp+/504xFzp6ssazCb6
Vhx+PnU+O3vaCzTz5UnqDuJwYvvnc3O9CojelaD66T//ltZ89OwVLTgkINjH
P+9XcS7hDxJQH3BQwvTAfbSq6IFZuqUEdCUYCR3cdwNx9bAEZGWM8+irHEL1
xStOpR+WABM9SxFdycNEH0uA3X7JyaqsMOT0rpl6IglQ+T12PqYkmehl6nWF
McH7UxlorOzUVPpLCUgYEa74oZJN9LMEOB6/uiZHIBsFvVda+qBdAr7tS3Qa
+i+T6GkJWK7cvGaZ1T2kXpnhTy0ZKCd+67r6LJ7oa0mwdgn61H8zHKV9WkmN
QBJO2Dq8VDC4RPS2JGBd/7oH3b5oUW2L4MM9kmDuEXRtu4Qf0d+SYNmgtzX8
/gVU9uX08ofBklAwYRK1aM1VxNXjkqCTdDpP0y0COdSrXHr4WBKkeJX2Szre
Qlx9Lgl/So5emNgTgzq/P6JGLAkXRXuzZ9ncQly9Tl0/yMD126kbyLtptUSG
sBTg+idxtw1CiH6Xgnmfm/Bv41NInCPYpWBp1T/jdPOdRM9LgXf/jzVdpzGK
/uUbmrFFCmrcrX5tPbKd6Hsp6BjkP7E2xw3RajXDXwrQ88d5Q2tOEb0vBWlS
8w42q/iiZx30BpWCJ42vBsJdTxP9LwXFrWtq39icRKu6127IrJaC9Nf+2SWP
PIkfkILxs5ZFd7y9UP3f9vDMCSmwPju3vjvGm/gDaWjUt763VPI0cuIUXGk4
uddG3efzKeIXpEGmCUd0ankiWk0+spaGextyzxQfOEz8gzQ4+kTMtA3eioKG
cuwfeUnDvCZm1rfmtcRPSMNK/8Tfh3XskTpXQMC/ct3XjlXOxF9Iw4a4p8+N
vnihtPEOagWo9y/9+2O+hR/xG9LQ5f9ojoltAOLiE2lYX7KneGVFAPEfMqBr
ksP3NcQftXKmVwbOGwixUpiniB+RATse77OFFa7IkCMYZODpYAHaaLiF+BMZ
2Bfe4HzcUhl5UNVwywIZ0EwYzW9PMCd+RQbuhewuc7J0QvkBg3J1q2Qg6kSZ
P88aX+JfZCBGu/1Km1YQEjr/ep79ThmoEWLYbGq5SvyMDCxIXyScGnwdrb1w
ZUPdMer14boVjWVXib+hXk9tqbDdFohuXNx23P6SDBhLSOrZvvEhfkcGlq3e
tvdv137UcInuEDLQyxvL8FbbRPyPDMxyP6+QYeKCdDkLIANC6va4+LU/8UMy
UOo0ulVy6xXkElz0ua5YBqxcPcXXuNwg/kgGvKttn+Xm3kQ5IVeH7etloLN+
xWb+TTeJX5IB1u/6oyKh4Wjy8nbV+r8ysNfA2ElWJ5T4JxkY13snHCPqj6yo
auogIAvXzttWd6xzJn5KFu5eDNIX612MLtOXV5EFH7upr0m9S4m/koV253Xb
UxiuqPYaXbBkoeO00uG3kQHEb8nCC49F1vxi15AWbX+WykLvTFmWt91N4r9k
4ZHQmtD5M2LQ/vAdLxw2ycKT6O1609tjiB+ThWSNT3vP6EWjB1S1rXeUBTeD
sMnxvuvEn8nC7XPrNwsyL6DBiJFJhzOy4Jhaq7SB6U78mixUlPJkZD7bhhAt
96/LghUzR9jlnzPxb7KQPpt3eMcSf3Se0+BloUaiZaGGyBXi52TBUmro5tFr
4eh99M5d357LQlTd5ri9tyKIv5MF67kvKg8fC0dKVDXeWikLx5RX6bryXiF+
TxZWvnPXbKb293Za3v6SBQ3+JJmDK5yJ/5OF7yrlojeuLkHJsW9fbx2VhRgz
5U9ygcuIH5SDF/Hf5s3OO4z+xIW1fJOSg3m7DrHmN/oSfygHjkZ2kzf/BSIT
jiCWg22z/uuZk3yV+EU52PPNoGNMPwydpuXcAjkwM302f31sGPGPcmBY/N6W
Z+gaKk4as9q2Wg4u76iuWDx1mfhJOdC/2N5t/e4ckkouOfB9pxxcOzJkPHHF
i/hLOZgenDkVMrwbbbobTp0AOZALMHrtvQ+I35SDOLM+U8Mfa1AMLV8uyQHf
Nq/V5+oPEf8pB6P8D07qWZ1Aram0gZSDg0sK8b54P+JHqb/768peLzqLDDkF
Ro7yi6W9K576En8qBzGXL36cuc0DeVDNeftbOWh4+su6hm8v8atycCtqJKBK
1Qzl0+26nnrdI9j3s8o04l/lwC14gcwmy61I6OGeNdt75CDid6zc7rKjxM9S
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
Ohtzf20+DXZvvheS800A/w96wRKD
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
tC7mfdtcB+Dj4w/VeaL4f9xyJog=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1: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
wp85sj5FfkX/A5CIL6U=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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

             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1:eJw1Wwc4ld8fv/ea2eva4w6lqdKg4pxvKor2Ii0qaQqJhkK/lpL20BJRaQ+l
JUoZJREhlL3nNa7N/33ve/49PU/Pfe543/ec8/18P+Mbf8Oupe4cFotVK8Vi
0f/+/49Pz8eFY+OrEWcu+wcv6AjWfCLlYeUijZnXF7G9utHon3KaWKoxeNLE
pFs4J6/klUW/Hnk/GjvdzNeEGEPMuTaTNep2LD47ZlO4zRF98vkn2DkmW35m
hxbmmLi9NGx9jv23Pb269oES+X4czp1WOfNhCRtzvCOrTdXi8Q2ZBdoTwroR
83tvsbWd4eWhN91IKrlMb9yED3hlk+8BiwEW+f2P2MG7P9zIWx4fVjh3V/9+
En4kXh1wMkyNXO8TNlg0VJCbqoUPU582tkrGgSqft6/U1iXX/4JPmt/VFxzT
w4fXZP8RpH3Fr/ZGvW231iX3k4pdJ368ntmviQ8f9W4f4ZyGv+Xzvp6YpEie
Nx1f91sXUcnpR/89UVceU/sNy8unRWV2VZL7zcCxv42CpyWWo//yn48Yv/cH
PrjGX8nYqBcx95+JeUutrVNtFLEt9Wt60lm4cJFxasBDLfI8Wdj+wOWV2ld0
8WetnkcG87Pxj0+LfOsu6pDny8ZO+zV3JnE0sO2o9LdGF39h7dYVnlkXpMnz
5mAl6ylBYN+MPtuEp5gU5+Cm2+s+zkvIJfudi99WPlN+cLwZ2S7dmsM3/Y1t
ro5x6KT2n1mP31hTmq03+oU6/rx5WqlwRx7W83c/qemtQ9YnHx87ZsUXHtLD
tgeGNQ2Py8cV/ocDVlzWIetVgLeU/vI/16GBP5/502PWX4DPm83/oKH5//X7
g+fvOZNxV8DBs6JjZUfPLsRTk3cWO3X0kPUsxKo6pfM2nutCyW/2aY4NLcL+
k51GhO/pI+tbjEeywr7P/MXGs37M45nnFuPjnB3J0QvkMLPef7HdottwxV8Z
Sz5u+A/rGpyTNghXJ+fnHy46sbporLsmniWum2axqQRvj7GINZ+qSfajFIdZ
6TedOK2GN8isFeqvLMUGhnIGBtfkyP6U4lSPyLMVdj0oSvXrKIPeUiz72GxH
76JSxOxXGY7iGwb7KHxF5fTlb5XhBGXvh6POU/Um2b8yHBi7oLihdhAJTC9N
NbItx4PR/o/DviiQ/SzHNsLunxne6niD+YC1cXU5bttsFb9ohgbZ3wr8NSpo
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
bh7z4FCFhuu4YYUkD+KB1/Oe6tXX/6K9FNvcH0+dh93ZMdOSi0g+xANnRcMs
qM5FhvPP/Xz3iQe5KQlPlhxJJXkRD0KNBpRsVJ6jJNo+/c4DUaij/cPXN0l+
xAPeZn9r+VFv0CYaXvN4oD+qK0948CfJk3hwsXpd0z/qevISA5QHdiMcjqtL
V5B8iQeXVm8UmVyoQo8W0gSZB9IfM9zF6ZUkb+JBRsFr80jpMrRYMr7Mg63f
PrlEcvNJ/sSDcNnlKc+XpKEOyXgj9ft/lp6MbHmOmDyKD6EBBtN1IyPR1ax1
FIPig5PG2mGC5/Fk3o8PJhu2PZC2+4Gsl3xd+l6TD9Ly1a6n+/4gJq/iwzaN
Ez5z3MpRKW2PGfFBIbps056CKjIfyIfm2sLrSeOq0RGJoOSDw5LFhxKUKxCT
Z/HB+M0kq39XCtFICeDwQf/axbLzo76TeUI+JInqWgTyT1HGsvUX31vz4cOi
lB/+X8MRk3fxgc1j2SnVJyEv2g6y48PIXn/nkLt5ZP6QT+lbA2t0vwJpUWx2
xhI+vPkT2WKpV4+YPIwPRmVzpg7oNqI3v+kb4kNK3QmzCT9rybwiH44+rPm1
42IZWiMxYPjw2eb+LnfFHMTkZXyIsTb2tLL7hFiSBs2Hv0veJHxo/kzmG/lg
qxE7lNOUh6Kd6ALjg2Hhf723s6pJnsaHovnsnbfvitBciu0GHOHD7S3+Fz77
i0m+xod0tWdDG5Z0o0bnCzofwviw5LRihiBCTPI2PohidWo21YjQWVruX+XD
feshsyjTGpK/8eHOi0tbyn/8RpMlhiUf4rlfHn+wiSN5HB8WnJk/SX9HCCoo
pAktH+Qco7Ys4P5/3pIPSjOdkpaOLkUBFBv+EM+HyfZ3HA+ENpO8jg+752fb
/PQSIx4tbz/xwe+vf47m2z6S3/HBCmVNtng8gL7Q8JZB7aem2mzHhD6S5/FB
5Y+NSmugGG3563oyII8P66uN1ppNayH5Hh8OjZ9f+OV2OVKSGPx8CNh+YuKW
p3kk7+ODtae37LGp+egZLefq+dBtV73cuKCczH/yIYIn96TxRxNaTh+fTj6c
Nov341W1IyYP5MOXCLflfrPEqJuq3oAhPqwR/Ig70dFB5kUF0LucvV7o04pu
0I87TAA3pOxL3XlViMkLBVDYoHlOXS0fAS1fNAWww+yIUturLDJfKgDHgX1T
nhkUoUo32mETgI3OGesmbj1i8kQBNGeOv2o4phOdkBgmAhjVdFtX9LqfzKMK
oNx0zopfr1l4rKShCiBhsU3kpC4WyRsFEHpUd46h1iDKoum6tQCmXnPoeNgk
JvOrAmhrd7+gk9aIfDelIRt7AWwN2r/uZGIhYvJIAdjaikteTv6AdCm2fXCJ
AJZdLS514MSSeVfq+x0LH9d7Z6IPdPy0WgD/9ZnJhf5XgZi8UgDf9Nhzi162
IleJwSgAca/BuF5PMZmPFYBLSeCe0xN6kLSEgApAEF+h5+PQjZg8UwApFeMs
z27rQPdr6AYggAI3X+cDSc0k3xRAi6+1zr1f1Wg+Hbccoe5vzzhOVVglyTsF
kFTcbybsr0WtNB0LE4B57M3IHWoikn8KYOn8ja8WVnSii9TptAkXwMMreL5r
RDfJQ6n76bFYof+6C1lJDHlqf1LmBXTptZN8VADHPrwTB7+qRcV0vPBYACt1
Ny55tbmA5KUCWI6tjA/uS0NBNP2IF8D6eCTXrpdL8lMB2D8fpfzcrRaZ7qAd
TGr9gspmWyp0kTxVADc/u09N8WDjNOr0HMqgnmfblVjHMbKYyVcFMHL1Po3b
gfJ4B22n5wmgdiKrJeyDHGbyVgGopWgFXOZKYzVJgCUAqxEH/v4xHSDzwwJw
bbo449RVEYrzpA0OAaxxEr6+0laGmDxWAG8Fu1e+TMpHzi2XKYUlgJBlFXf/
1peTeWNq/7nJvC+ubaifto+HBGAyOdZtLlXPTF4rhLvffjt/eyeFb7du9Bsc
Rr1eugr/nCBL8lshTH/pumJ0sAye7U07rkLQuj9tx8TZHJLnCiFywpv+t3v6
Ua2I/oIQjrV8U/64qIvMMwtBYb1CXnhaNwqVGIJCOH9ih/kCFTbJe4XwaNPi
rvsP5fEECWEUwhq/pgnX/dRI/iuEo7Oim4oPaeLc3XQBCKF5fO/lHXZaJA8W
gktYsONBJw28t+MbpQiFkLZr47EMpETyYSE4Td7JDopkY0PaHlwiBNu7A4Gf
tFoRkxcLQfn6azHXJBclddKALgRf9V19EbsKyHw19f7R46YzjDrQJomBTv2+
5UvHDxNlMZMnC8F5WMa97as1sLxEYAlhYbRm8FwlPczky0IQnBGbRvkZ4Ue0
HbZfCPjK8PRT24wxkzcLYZ148p2dtwzwYrq9HxHC7y+BC5oLueT/SwrhiIvP
gN5TZdyx96ojPiOE78GfV405ysZMHi2Es+sS9yjMEKOrdDsKF0J13e+x6we7
ST4thHD3rztDO6WxtSRwEsKvmdGBPy+qYSavFsKYxLHPsgTauJSGz8dCOBxq
+dK8Qhcz+bUQAru/mM2N1sFHDtCOthA2LRyucShdAzN5thA0jK4PznGXxyPp
cv8sBPsTalsMR/eSfFsIO4qnLRuSF6EM2u7IEAKArS73RC9i8m5q/fRm7n52
XQF70cczTwhZP25ErtyqTfJvIVzQLV2RPssEa0kCWiGMvOO22TBSQPJwISQ5
RFlPcRLiN/RyNghhtt2IGXsv8kk+LoRa06kjfWMN8Bpa3ncKQT0+c3+lQIPk
5dT52m1sY9TMxsz/NjeFE/XHSnz1KtD/AKFya+w=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1mwc4VW8cx++99uba+w6lRdIg6X1/lVTaU2lJaUpR0VAaGlRaGloiKUnS
0jAbUsmOQrK3XOviWv9z7n3/np6nx3PHOec97+/3+34/34PrtmuJO4vBYNRL
MRj0////yP069XevfhVizWb+4BwNwKfcTKYa/2Niye8huPZB1sFqHhtLNR8b
Py71Ll6jNGnE3mhD8nokvjFp+JT9IVzMujmNMfJeNJ5kF2E/0ZlP3v8UnwrZ
sNkonIdZphteGAni8W9W+fKvM0zJ51/ilJTb4Su26WCWV3itmXoCnq4wbc+z
W4rk+97iu+bT9bTPiJDUxwp9C6tEnPlu8tIh+TYk+f5kLL9UfavRKBE6rngp
yuBRKv7Wc3Nwprs8OV4aHpg8jH3kKxsfp95tYvsR36r5ZD47Upcc/xMef8Tm
hWWVHj6+Jvc3L+Mzbn895lkO7//z+YKPoUj/7BB1fPykV8fwlRnYzO3zznNd
0uT8vuL24p9j1g/2oBNPNVRG13/DJXYp+xSnCMn5ZuKLGz+sGn2SiU8UxQ8f
u/8HNhnnPaAfp0LWJwsrx/rP/1esjadT36YvnYMzyibc33nXEEuuJwcHHR/2
9ex2E/xBq/eJ4bxcLPQXmkX4GJPry8UytzSPzVbWx9NHfn1rHJKHvWUyH+5Y
/f/15mP7SS/mJo6TxR+mhqablubjzpOnzaYYd5L7XYDlBzz7wnb9QtOXbMvn
mv3E7JWvhdqmBUiyHj9x+pkB/zQtAfqweXI536MQb+LuZB4NZ5L1KcKpqzee
ykTKePohhZZhL4vwuZPH5h52ZpP1+oX7R4iueThq4Q8Xfvea9//Cm1BkS+kR
TbJ+v3G2V4vVLR91PCMyWnaUQzFesnJR96MYeSxZz2I896CH5XxVJv745oDm
mHMl+M00xcLQjB6yvqVYo/CbSvLCbjTjxxyOZUEpvs550/92Xz+SrPcfvD1q
ssc4BxYWv92oDFsluC4fdUyGrH8Zblm1CmdbyeIZwobJ1pv+Yvm8nyu/vZMi
96Mc46nRG2bHDiA3mbV8gxXleLj2R84n13ay38rxo6lVUX8aK1GE2ueRhqJy
HP3be8WL1CIkuV8V+L4l//X19gpUSR/+bgW+XBoy5eyNNiS5fxU4xOjQn99m
A4hndnWS8fRKrJOu5XdNW5rcz0q8fxKjNThRDrtZDtib1FbiF24H2Pf85cn9
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
L/lrczNQFCUvGJNQi/4D5VyIzQ==
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.0006820909392660997}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=0.55(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.0006820909392660997}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw1WwVUFU8Xp1s6H/UCDKTBAp17EcUgVBRRUUEwUGzFwFYMrL+BrSgGdjcW
KgIKIiFIS5eIdMe3+3Y+jud4OLy3uzNz4xd3BYGrvBdJSUhIVEtLSLD////H
J+jKo30DrUFqouR3/s5wSM/7Wn3riTv9PRLyw5Ndw/rmgHTdLge7uCioCfNM
WnUoiP79OiS+HOVhNnkJSJ13kRhy5TZ4zzn290/qEvr5B1B9pWhHq8sikDJd
8NSo4TEEL33XN/FJAP3+MxgyevQpo1G+ILUmutJM/SW8tToW173Jk17vNajO
VnHMGeUK0p9LDKxs34LXFm3Nso1Ir/8err6KiHBpdIXdSsdjeLfioHm78hyJ
fe70fh/ht3569MNob9jNfNpk5GcYot89b0WtL71/PNzp7u89LpoHu+em5wqT
vsDy4FExjQUB9HkSQaNW5/XCJYGwe++a5oGzkmBtlVT05NuB9Pm+wspxgjj/
EQtgzwONAUOrv8H+TSb3R6jNpc+bAnWR085MHjMd9vx6PNBm03f4b93R9bd0
x9HnTwW5x6kRTWqDYSxzNQOZNEg8Oalcjvwj3HrSYMm4nfz+OjP4pN15z9Aj
HSxsVvYY3BhL15cOO73D4r8Ze8PYIV9fG0dmgKvrKltbnTl0vZng5qRRK/Ng
Pnwacy7BtCATIt22mAyKmk/X/xPWl1563eY8B8Z6L80UmGXBz6WTPTKZ5+X2
Iwuq3yy7ENYzAT4tHlUsWp4Nws2b76UucaL78wuenai6769tB2O3KP41f/YL
grbP09Fzd6T7lQOH4vLW+i5E+PRfbuegnhzAtx1dkqUT6f7lgnnmokEn304F
1+u35SzG5UFH66hzi4Jn0P3MgzV7dZa2DfaFz682a1kezofSDoG+U8Esur8F
cON+e/DsabPB9fskvvXPAtjwxafLwnkW3e9CmPpCRYo3xwfEHzcqAnlLja/f
46fS/S+Cm9tN4rLBDVzbakbZL/wN0SWD3JsWDafnUQzZ+Z/jZ10xgEDZeSLe
zGIYJCXyiRrWSM+nGOyvvjUcXmIKV9W+DDHsKoaL/Zuevfkwkp5XCYiMhm18
VeQGpezto0pgilvKlQN/p9DzK4FBb/tjSt28QWh2arjx2FI4Y/AwuOTeNHqe
peDlk7BnZ6MHBFr3jjapLAV9/Z9zn11zpedbBvOKfERNksPg6shFrqYHy2CI
xp15B6QE9LzLQEGiZ3Qh0YLSsewGlcOTxMMhdQ0iev7loPx1ecr648NA6Dls
qiCjHKJGBSdv6neh8VABC+Y+OylZORECfS/NFG6ogNNPlgrM3bxofFTA83tu
sXc+T4WrC9gNqgQzsw+1DS7TaLxUwpz8IQ+G35gKpSErgszeV8KycbuOb+vy
pPFTBYtlWrbc+TERhBuylpoHVoGFSnKKv/tYGk9V8GSRrfHqu8MhcOeY1QPl
qkGzWr716TszGl/VYNNQc9truxRcPXhjw6A71ZBzdpQJ/1I24eKtGm6cFfYs
sGHWHzlg22CvGqi9fNkikWdJ468G9s4/tiNWYhSILofuGdJUA+mHu8459CCN
x1qYUiD1Xdg1FoJuF0ZYnK6Fa9LGM81+utD4rIUrGjt3DK12hmtPxx8b6vQH
ji77HeYyzY7G6x/wzv803DfQGMre3T9tWfQHXnjr1/jkNhIufuvAN8zT+Pyc
AiJK0rlktbsOamYfXtt9SofGcx2oVx/5JNFoCUEZ265ZD/wLTleL2qucR9H4
/gvxabun5p9wgWsFFbdtvv0F4+uGUi9Mx9N4rweZBX8PKsa5QVml5yPblfXw
QzT/kesiNxr/9SCozQ9unTkORI3PX9hp/oNW2X99pUouNB/+wZ3yQutDqk4Q
1G38zv7FP9ggoVzReceO5kcDqJ7Oy7LqEUGGFHvHBiia/JsnP16d5ksDZKWo
9lmtqyZN8u0LeTsagJe6211jdinNnwZ4oXBhebK6Mmgyu8lLb4Bux+u/b7zn
03xqgJbpn90XjLEEe03/EENRI1iaxZY6NNnT/GqEutji8L5Fw8Bb72S9YWgj
JHQrf0576UjzrREk99qUPTKyg7VGiWuMEhsh2PPV2wGrBtH8a4RQX5cwNwkD
OCHobjEyaAL1EjW9iDfSNB+bQLRZzRViOskTZreNQ5pAN/T96k45dZqfTTDp
fol+qKkQMoayO9QENww3LxudY03ztQmyVYfNWBo6DJpsz2w3UWuGOJWFgu63
o2j+NoOS/79b7xc6g+bwZEnTBc2w1m1tZPw4J5rPzXD9/up9u7KHg71zf7jp
02Zo2xwotOuwo/ndDCNVaoTjJw8Bb3RQ4Mu2gN92l6DWJhOa7y1gIa+yW2eI
Gqwdv+QQ37cFJA5EFyWFdBAu/1vA5VndrOpVteTE5Auqgtst0PPfgQPer3sI
Vw9aYLH9ufCsMnV4MuXHcWaL4OhOP5kFF0xofWiFhvtX1CbFD4SMGdI6Qs9W
OKX6fFqAqRWtF63AN3VdXuxnC02zR5wVXm4F3siR50xH2dL60QoGzv5r6q0s
gTveVnCa/rZdosmM1pM22Dp84sB7Gw3AfuHlKJFrG8Q63vZb+UWe1pc2GCCa
G3lOs5WIH+dUG0Q9sfn051cf4epNG6z/MPxF0zFNWLtS/oZZVRs8ORMT7OMt
oPWnHbYN+nPk7ZUhcGKd82DzUe3Q05a84k6hDa1H7TBgi9bxZcPs4MmmVXfN
D7XDRO/p80oX29L61A72vMEnbj4dCuL0LGyHG5lOP+3PmtF61QEucyyujdrE
g6bdbMJ2gK78k2Vhh1Vo/eqAXguH84WCLqJ5QHnYoF0dkJu4pnTh5X+Eq2cd
INBfYXZEs5PYH4FXgzI7wM/a4cCvkYq0n3bA+FmNelMTdMBbvIBOGN8WVyhh
zqf1rhPWv2hx9HAwh7Vnbr4fvLETfsVdjtbUHELrXyeYGjuNS0qzgJMX812G
fO2EoxW7Nh9IHULrYSe8lW60uy49EJ5GixMSnPsvX187lE/rYxcUpd+YtHC+
FmTGuE60WNEFeKR6qO9QSVovu0B5aNKyb+OrSfPdjckWH7pAYevsIRUOjYSr
n13wYrzd9qGp8qD1+K7XUI1uuDTgXMOuhXq0nnZDxwWl+L4TAnB48TudSTGo
a5CNepVkTutrN6B1SeMxo0Ew/Y2Wj+XzbmgyO1+R5WZO6203SGYvub6jkQ/r
4ibkWMr3wCbn+me12boUP/SAWvi2A4fjFeDkly1+VrN7oMBMSU4mo5nW4x6I
jU4wbfYvIk+/PSyyutsDIY+2Bsv+qyVcfe4B0YTSju7BkpD5o2yBdW8PXMjd
vFRpjDqt171Q1HzJZkOJPjT/1KuwntILgmLtscqH+LR+98Iii4OfXRJEoJXn
HmwT3QurZnkV2h83p/W8Fzw/7LC33WMODr93/LFp7oVq+8W2KltEtL73gczG
ldrPt5jC9PKnK23H94FXa/Tp/ZK6tN73ga7nlRSr4Yqwrqaq0fZMH7TaGwT6
yrURrv73wZbRQw9JuZQRtnra1fTBzs3BW1/Y/yNcP+iHgfrhi/JWSsHT5ikd
ds79YHJ6+4ZzK9Vpf+gH6+1yP/u19CCzY88W+yP9ULlR9mZXE4/2i34wunkj
92kqD5p7X/bZ/+6HVtO7R7ve6tL+IYHno+p2XVdWh4OSbXHn9CWwUypu4+pw
SdpPJFB9YvgxlxtVhCdzjA1ZHGHt7d68+xrh+osECn68rFNbkkruMNF4fpkE
+gamCRsVWmi/kcAC5+KqESflwEkxfu/5kxKYc4t3eedSTcoXJNBbufKIlpwB
fFOen3j+rQQuXa4Q8k7GhPYjCTS4N/fh1Rl8mKPaoXChQgKndlXcuuL1//4k
gX8lDy09+s8YatXZCiqJ3Y+CpQ9rGtB+JYlZ0rVr+VmaEMZE64URkthfEfvQ
/awC7V+SGFal37fkRBdR0k34fiFAEhVaZPJXqlURrp9Jonr76rlJx3PJef0A
tYsRkrj9bHa8m0Il4fqbJJaue7c7/UUbsTDsmnrxiSR+3P3jv8CtUrTfSeKk
ARJqUxcqQKxx5ImL+ZJYrn/sWZCeMu1/kng1XN3x/itFmMxE80UZKUwMWT67
4YsM7YdSuO9wo50goZvkCdmEkMLKA5ax2pZ/CdcfpVDa80O5y88cssycrfhS
aBzrvkn5vyzaL6VwmJyRT2doDeka1HP20g4pdD7+fGrlwy7C9U8pjEy8+HmY
vhwctDidd+mWFN6Z4etxLkmV9lMpnHz8RPOOIk3gsctNl8I3P3XP6pRr0/4q
hQu9v18ebKcDd2y+zYvqksKijHE/T2do0X4rja/r38/w0dUAJ3EDkca4Vw92
nqpTov1XGsMfGuQoyEnDN8e+4igPaYyE+pOa0E64fiyN5pMUTuR0VJI5bPsK
lcYa692JFzrTCNefpbHDQ7lX3ucjqR3F3kAah0bNUVaIziRcv5bGkP7AN5ke
lSRsdMqNy4nSeDvjwy/3302E69/SuOHrn/zI9E6iBIurLjdI475PMbxF2n2E
6+cyOOVnQWDChT4iLtcGMthxSuA3b0834fq7DD7+89DnuQxz/kz0Xxkrgy/D
1t6RNWggXL+XwZAPRwZhfBWJdXO8dyVEBiUvZVrqalbS/i+DSZdzREv215HJ
k1L/XomUwXu9E+a6mLdSPCCDwZetPf1d+4i4PL2TwVMXSu4k/5CmfEEGezT2
LLc5Kw/LvNiOKoMzS1wv/n6oSPGCDL4bYeJhwvzORme0miwOjpo4KfSSPMUP
sth2vX1+Vqk0HJw+vCV6pCzqhC5xKPDqIxyekMWiL5u9zea2EN7MtGEMJkDF
4rqu6q+VhMMXzPd7fPcnbcsgd2Yt23j1oCxaSCbE5d++Szi8IYtoleW3ROcS
cfKTeX31qSweLFMtTd73lXD4QxZnqRimF98tJmz0XC2Qxa5do4y1l/wlHB6R
xWV1xyZ9zWkhcwJGjr4mK4cEkwo2B3QSDp/Iob3hJyvNSd2kNpAt+HIoabHP
cDZ0EQ6vyKG8xo9rJ+PaSNii5R+u+crhuZZwDWMp5vzF+EUONQOfb4Yxf4hS
sJzk9Z1yWHBhS8Op0ZUUz8jhdd/J94/3VhL2dJmWi1vW2ydUxv+l+EYOrVzu
tcza3UIsVjiFX8+Qw8ntMwaqVXcRDu/I4cDSoD2FVhIQu+rnl+vdcjh61uvo
748kKf6RRzvfmM2n/pOEyeIvyGOoq+QCu0P9hMND8hiwoGPjSma9eesVJt3w
lEfvi9Nfzv/dSDh8JI/n9C7pbmksJ+zu39ggjwPDrWsHNKQTDi/JY+Tii9Ub
I++Srs1sAsjjEW3HeuheRzj8JI+yjxSPnc+PIwe3Zg+ISZJHN2uz3QF5uYTD
U/L4Y3J88pr/qglvx+opMY3yeOh9xQ7RqibC4SsF/G/sBLv6l+3kzi62oCvg
CqNjn0ZpdhMObynghIw26aiMbsLuToyrAsaGDVx/uaKTcPhLAStil/yOKm0l
3/YR7ZvLFVDSrtf7/r8GiscUcN6IOTpSf6vJnIgcn5unFHD2vMT/1MLKKD5T
wElLR6Zvli4jtYdYhMVcL2zPr5lbqyheU8AW+c2//Dz/kbCjKrk3qxRw9LLQ
qLk1zZSfKuAy58Ynm/XaibgdqSvi8KC0B690OgiH5xTx95zy5KCVbeT8SZx7
a5QiuiU6WHxY3kQ4fKeI3vcvXlTpriHi8hmoiFNmLjU+f7yQcHhPEV22jClu
1kgksWfX/751SBHVT1T8PalynnD4TxGjD+XlPw0/T9zZdH+miMeNXhyeHZNA
ODyoiKIm2YwH+wtIPnP124WKeAIXTxjaUU04fKiIKq5h091qGkmIODyVEAI0
Uh6vbyMcXlTCf6GvLxb5dJLuqyygUUJbe9l147W6CIcflbBoyoM8+Ysd5BC7
nbOU8NQk6RLLaa2Ew5NKOLE5xfdzWwMxvKW+lDljPDFS5cQ57RrC4UsllHgW
6pCsWEru3mF/lHCX+98JWUEFFG8qYfh/B45MlCggzvfH1d3JVMLFi5D/J6uY
4k8lLHcp/CM3vIIki+GdEmoffTJg7JgawuFRZTx52LrPxukP8RMHtDL++a0e
N8m+lnD4VBnDJdD53ZBK8ueZJvMNZcwK0+t7ZFBMOLyqjPsbzk0JdsokW17e
a7q7URn1NzdcrE7/SDj8qozvnwQdKcNHRFlcoJXxzT19lZ97XxEOzyqj3SfJ
xJl538mFt8Wh974q4/EiL9tJ6QWEw7fKGHazqb75fCUZ+iGMuYMytioM/nTo
VD3h8K4KbvEtOnp/RxN585EFHCp47WJBi/byFqo/qKBC8LHnI1JbiHv8A6f7
41RwzIsq+ZDbzYTDwypYUP3Fz3tsI8lPmLj1/goVbDxeYmssrKP4WAWfTqgM
jJ1RQUK+ljJPpIK9wtDNihH/x8squPJ6yVmf51mkO3lr//0PKuiXF/VcaJpO
8bMKXj+zSM/vRho5lKrr8qBaBY0vh9v7WWQSDk+r4J0e74/Bf7OJYfqj3cyR
YZbysZWyGnmEw9cDcLGelYLJoHxyN3Mys4IBaGOr6KxwLpdweHsA3lE4Hr03
JYs4Z5fLPgwagAdu3mmK6UkjHP4egMP3fMtRvvuVJOdsn/Dw8AC8/3nX0+tV
XwiHxwfgg2tW6y4WJRG/fP2Ih88H4KQv9+vCj6UTDp8PwGpcLNP+MZf8KXzC
rHgA/v2SW6dSWEI4vD4AB55MOudQWUm2FHuoPJJXxckN/w0dYfaHcPhdFTde
HHNpX9VfoiwG7KpYcn/e35sJ9YTD86pYm1mnpHj3L7lQsfO/R7NVcb6X8576
77WEw/equN2vvzLtFnP+DFp9tFsV38UpPl/B3J/D+6posKgzaa9DHnlTywao
Ki4OcbB53Z5O8b8qnrmiMSO/PJG4//Wa8finKk7v/7f20LCPlA+oopKLh8eC
cx9I/r/qU497VTHIS/Xog1ufKD9Qw8bvVovfCZJIiLjgqmFAIy9JakYq4fiC
Gp62HJLU/C2dsGjyyRQ1DKzyD+pamUk4/qCGRVleLjl9meRQ+4s5TzapYfi9
lybH0pjzF/MJNVTYtNfaPCKTGHIAAuf/q5b1r84kHL9Qwy9rW/2yDmeRuz21
zAmoYfzWsEmxcTmE4xtq2LVc0tx9XiHh5BM1fOVcqmKxuIRw/EMdLzqTK8u0
ykmleHvV8fqENX+0HCsJx0fUUeFvzCyDGVXEWgwY1LHF6ca0UYOqCMdP1PGn
3bAVU89VkA1MNZw9Qh3fpi8NvJRRSvmKOjaN8chzDCgi78PbNPPc1XGan5Vb
18Jsyl/UMWn3QA/Ty9+J3L7PDnMC1FFTsEs71Osj5TPq+C/nwuwTaU+I1/5j
M/LWq+MDvdLEmP47lN8wz+92oHvtmSfk9IF5oXMi1FE5ZJtAaBFHOL7DPL9l
YRv5/pUURbAdQh21eRGvj5hlUP1NHe+47D3sWpBNBooPQB0Hjx3eM907j3B8
SB2nNPeFzxlaQFYejv+Vl6COa8Lc/eZvLyAcP1LHj9vHlSZ8zScvjhzvmJOv
jhMv+0o/TM4jHF9Sx5ebJtw0m5BH+o7ON8j/p47+PT5LohLyCMef1PFS42m7
3hUFxI2ppn4yGnj1+6mkU7VFhONTGlifOUwU+rmYHGUvr6+BRtnvrgU+KCEc
v9LA09u9v+5NLiHZJ9iCpYHeJ3LzpHOKCce3NPDEswSlM+cLiQlLf1w0sPjN
0Hvnk38Rjn9p4OC0rMX3hOlk8Sn/d34zNVBb1r+ucd0Xysc0cH1s9nz/Oy/I
A6ba5i/TYPBpyIW3l2IoP9NAZ7cK53W7bpC2M519fjs08N4VaQc52eeUr2ng
UTN8P1EQTwgL909qoOKMRUtqJ6RR/qaBytUDevpzssk+cYPXwKCdY9LMHhdQ
PqeB10+//di0oZikXghYUPBWA+U73m9rDy8hHL/TQN7746/ubikhukw1npvO
3C9qntK9/4oJx/c08OnagMrWcUVkPgtvKzQwa2GFXMmUfMLxPw3cmGTcdkwl
l8RcTvw8t0sDp+2PlQ5q/kU4PqiJ0QHjtlTJ55D6K5HlBaqaOKW+97Bmfg7h
+KEm+qS8mbr+US4ZLgbEmui7J3Ba2Jtcyhc10fXKekPpwByynYVzIzRx0iXH
VonVWZQ/auLqVwnZ0lbpJOF6t9s8D01ccOqdIOJiEuWTmrjS095ts8UHohqT
tKQwQBOtbdRClmx6QvmlJj76ZmDhveoemXnzFJMBmihZVqv/qf4p5ZuauNYx
08326kcSxcKXCE0sM7Ur+qj8nfJPTfSoGXxrzegsUnmbJZCa+NthkP3Mv/mE
46OamOf18r1HSjGxFhcYTUw9rdsmG1tKOH6qiZ7lGhm4v4xsYJrz/ERNTHHJ
csmyLSMcX9XEfN+oQo+qEvKebdf5zH5pDeXNkyomHH/VRN4zvU0XfuUTuYdB
nvMbmPsZuWS/UckhHJ/VRIF6qtpFqyzixVT7IhktPB/xsmTlskzC8VstnN9R
2V1zKoOcftzLZJgWPh/7YPxP5wzC8V0t7Dul1NmUnE6K2PZkpYV7rv/SuJCS
Rjj+q4Vq0tEzlyqnkoHPzqTNH6uFUS1mN59YfyUcH9bC5I8fPO3/fCYrny9s
LJqphVrPP306Z/mB8mMtHL4//uNDmzfkBdMN/EO0MGWxjO55zfeUL2thQ11R
pdLSeNLHluMdWrjGbnLTkPXfKX/WwmUBVo7Vp38St9fJ0/0jtXD8EOGeE/L5
lE9r4SGe4oxjkUz+iwGsFra7lm46q1FG+bUW7lpg6dQTU06y3yxiMlgLv1RH
uN0ZWEH5tha+j9w3Ze7RcmLCdIvf6Vr4er3xjvmyZZR/a6HzhB032zOKyeL3
/dn+lVrosGKWpdLlAsrHmf3oUbOKiflFHnxIaf/dpYXkVnJdiGcm5efaONXG
KDs37wdhu0WAmjYqLKsI/jw2mfJ1bbT/e+Tnw9NJhCN82jjxdFm/7rREyt+1
0aJsTsDO3AQiLv8jtbEwwsmjITaB8nltfHn9Yr9scgJJjZdgIARzP8sd8SNG
JFJ+r411FdrhsqFJRFyuFmij9TgTfzNeMuX72jguKth+6K0fhK3mxaHaeLZi
5wkrq0zK/7XRbnLynoO7fhFxeh3Uxs4VesU9OwuoHqCN/v8ckiYyeLn+KxsQ
2sgbO7FnChPfnD6gjZlXk0uyJSuIOByeaqON980Ea/lKqhdo47k4SRKiW0m2
p6RCSaI2qv44fvaFeQX1F7RxTJeX2lDPMiJ+/AJtbEu/NMycqfecnqCNsdKR
F0tv5hPVH8G7Shq0sUxnlUHcvSzC6QvM8/7WPepH0ggnD+jguMtL5tb/TCQc
XNBB3Wk50+8LPpGodLZh6+DukLoe4cIPhNMfdPBA7ZW480FxpDKDBZw6GBiu
+dnk2WfC6RE6+NRTMnJ+WRJhq2HpWB08Nr+Wd9T4B9UndPDonAdTOjIyiJgO
++qg6p4NCQY9WVSv0EEwIFkhdTnkffZwt9IQHXysdGr7rFv5VL/QQYmOsc+m
Ti4icjnSSwJ36mCHvXpW38Ziqmfo4PczRpv7MkqIV27a/tJI5n5tLjxlyzKq
b+igyu+vrWGLyomY/t3WQcOKvtgB0yqo3qGD3WdvPn/2qoIwzYtB6Dr4+1+z
aHxIBdU/dBh+JxEvN7mcMMW5NjBDB19u0ZvyfHop1UOY9Ty+3DZwxm/CFB8G
ourg8x+xJoX8XKqP6KCJeo6ESUIG4eR5HXyrpCgZbvaN6iW6aBtTel/7v4+E
rSZlarr4X7q2tXHda6qf6OLW1AA9Ue1r4iYWNHTR5FDx7ZHbPlI9RRcPRM6R
Mfz1lRwtG8n808VaGLkjaUEG1Vd08dtjpT2D/XKIGN576uKVGWexR62I6i26
OHjkmHMOK0uIifiAdbFkg8HLRusyqr/oItmuoJ2K5YTN9qANuujUdED50Ydy
qsfo4vNr5r2pxeXkQfVyjfKDuhi0wKhInfmd02d00W1c0vgvf8qJGM5e1sXA
iU7CSO0Kqtcwz5c97NZ5twpC/sgxkF4XK9dnrR/hVUH1G13c+2P4naiqcrKv
LnPdwiRdtDdx+SCXVUb1HF18taxiwaDWEsJmY3mBLt7jb3ukd7OI6ju6eNnh
gWEhs37dfyuYCq2LcV4rbr7JTSec3qOLqRsvnHEan0TmNzgxW6SHY8e0mUuu
jCOc/qOHj4SBHuX735CYRhZQ6qFXyrnUs8YfCacH6aHbldxTnxd8I/VNLKHS
w+0xLXcvj/1J9SE9zB7yT29GfgFhs2WRqx7udTaIG1BXSvUiPXx4u+a5mUIV
2d66cnaFrx7ez3BWfDa+lupHeqgrYbW1fmYdSWhzZo5MD+fJRiXpDvlL9SQ9
jBjvt0evvI6I4eROPVTzdR+yu+AP1Zf0MNkm6UBuWC2Z2ZnFdAA9TJnyfqez
SQ3Vm/Rw1Pfguz5S1UQMf27robPxn20jbauo/qSH3c8+yJRurySV3at6F73X
Q/0HJsOLr1VQPUoPQ/rmj4iYUk7E7TpDD3um2uuf8iil+pQeGhXJ14x3+E02
9CkyHUMPb1seGnWvJofqVXr4cfGAl8vvZhBxe+nWwzE56ZpD5iRT/UofJwW+
KzrrnkDYaFusro/Zh3M2rlBLonqWPnY+qXlVH59GxOXQTB/jwqv6blnnUn1L
H+vSZnpecSolp6XZkNbHAxGLUvB6NdW79LFXMcVjh8I/Ik5fT310V3fJeuTZ
RPUvfRzv/GVF9ewWMlBcgPRRxlJ0rHrd//UwfVQsPr5v8NFWIg63Dfq4Orkp
8O6nFqqP6WOrhCjN1r2ZvFBgO5I+mgTa7Besa6R6mT66Kme4Jaj8I+LtuayP
sRvmtvjt/kP1M3080dOnWBVRTdyUVfYveaaP5MfUd6stKqmepo/rJxcumutU
TsTyWZI+bp79ZX7iplKqr+njjM5kpyP3iwl7WksK9XHumX8FJw4XUr1NH7+P
UHVJTs0lJmosI9bHSymyvtN+/X8+RB99T0wgx65lkcXqyKS8AW4Iv6c8bdQv
qscZYLEu32nZvAIilot4Bsh3irzUd7uU6nMGeCTkqnBZYTVh2V2wjQG6O9Wk
FgoaqF5nwODhix+DlVoIu5vVrgYYbz2k6sKTdqrfGaDg+4wNN2K6yD6d9UeC
Zxng+86zQd37e6ieZ4Bxht9Lfxn1ErE8stwAY29WDtef3UP1PQMcWfD9t6l/
F9HVZzukASbMWxNctKmd6n0GWF9Us3YDc3+WfVWfMsBFS31CeLsaqP5ngL9C
Ex893l1LbvJYgc0AYz5FCGfYVlA90ACjYgdm6waVkH+sHPDeAH+6ao9YOLuI
6oMG2F1s3jQuoYCMMGY7qgF6l/pu1l1ZSPVCA3Q4/HnB0iu/yQ7xARig7RQ5
x8LgEqofGuCk0zODUwLKSCLDjpb2GKD2wBEmgs8VVE/kYY3eeXfyrpqoMU9T
o87D2ibBbJuIOqov8nDfpvFjY241EF9xQeGh/4FhDWsONlO9kYcuh3Nfp39r
I5dFrOLAw1n9Ie9eD/m//sjD5u3xT9Z79JIqphgu8+LhZ6h6PDy5n+qRPHyZ
NGnHrWgJsBE3SB5Wrtz22ui5BPW7mestPHnmuaoEbBzEdmweSsnJrMkN6aV6
JQ8nLphkIH2mk3wYvHFz7SEevmvzmj5duZXqlzxcfmxcquK0BiIvBnw8PH/o
jJpbQxXVM3nYlO7uoSpbQqYM1XhT+4yHK0RVViswl+qbPMxr3aP7HLPJGZae
fuVhyPvUuFEM3uD0Th5GHpVLUx1aTH5bsQSGh6F3FjaO2VpB9U8ebn/mc2Vy
+B8ySDzewqz3wo+i1S8aqB7Kw8HrOj5M9momq2zHMy3MEIPq35Z9XtZK9VFD
vDDA+GyrcTt5ycJ/Q0M0ONAvsfVKB9VLDVF+0xqenXMX6bdnBTFDzGi9ffqr
RQ/VTw1RWmbFC9e9fWQCC1fHGWJkflXauUgJ4PRUQ2zx04icWiQJ/w3b/PHP
LEP0vZY7YXORFJ0HYP5+cmWYq5c0/GLh1QpDXFMcqOfTLAWc3mqIsgZ2JTMf
SYLpSC3pul3M85cb731o2k/1V0Ncm2Lw9PiRTrKEhQOnDTH5uH9Vtl8z1WMN
8dZXJdPA1Fry0IndUEMUTowssROVUH3WEOUCT73sCc4m7Wz7+mCICsd6Lb7W
ZlK91hB1F2odnEHyCYyZwLR4Qxz3ZvlYPtNfOP3WEI8N/+FSGNBA9osLhCF+
kjKfmXm1jeq5hmgt+32Izf0e8oNBz3U9hvj3e7DknnwJOs9ghG4NqU9trkqB
HlseNIxwc974AUuuSAOn9xrhga5zpUoSMuAvbnhGuLHsaJm8hgydfzDCsPT1
Z67ayMBNNpydjPDSgikrvt6QAU4PNkKZlAknFxyThX/jdNz/ehnhivHbS43S
5ei8hBFGretJEGgqwAgxgDNCx3sxv4/mKwCnFxvhqOF7E/2eK8COCQ8P/91o
hAPOhDkM9JAHTj82wpORwzLWHZWBRPbjh43w61X/VaaxEsDpyUZo/3DTniX3
OoiamJAYoaeNd0jksAaqLxvhQL9LxSkOZcTXnUVARjhkhWNdzKscqjcbYeJc
hzwL+3xymUGf9V+NcOq7zpTXnlVUfzbCPo/P2Q9HtpAqVk4tMsIHXvHkil8/
1aON8PKcDt3gd7JgM2XbtPomI7xtXL0jZqUynfcwwpe7zUeM6FWDjVNZxGSM
+xbNfVK6RgM4vdoYjX7NuDOxWwM+TGMFI2O8VhblKHyuQedDjDE52X35qxJ1
kBcLvsYoV1uioPdYDTg92xhNXD8saM4bAFNmPP5ZP84YvWJv1ak9VqHzJMb4
LMtmmZ67CpzxYRGWMTa/n5uLgSrA6d3GOG652nP1pSrweya7QcZ4Zn+xbV2s
Mp0/MUbePqUzD7MUYdAs/RGrdhujt7e6dcUhOeD0cGMcMLvvjBVfClYx6O3f
aWN0/ndgYNjuLqqPG+OrMaJcj9RG8nIOm/DGeLdl64vTK6qpXm6MZ/+UFZvV
VpJ+vx3n/n0wxvWrfzW6b2+g+rkxPpDOE14Y100mzPNgIKsxzpofO/uWryxw
eroxHhk29kDsQlX4T9zAjPHh24gXrxK06DwMs54Sh+hZCXrwy59FcMbY8qCw
z/gmDzi93QSfXLo7Lk7NCDi5ywTD/iqdsKgypPMzJnix8XrHVV8eLBEDMhPM
qu97dzReDzg93gTlxu49OfaZNojlGScTLFibUjLoiQadtzHB4Fsbx7zxVwVW
jV09xQRfrbY535SrBJxeb4Lrj0YmSOUogFhOCGLu7+DwcmCDPJ3PMcGFR8KM
7dfLAwN+4lZvMkGTuXyf6IdywOn5Jni4YfGknYNkQUx/D5sgcRpjSL5K0Xke
E/ytabRyc0s/0RMTZhNUm/lwqKVcN9X7TXB/UH7cllcdREzXnpug75quy9k/
u6j+z6w/9Oy34DGSwKKTNd9MULVhVviOUnng/AATVOraZfhtmTqI6UWRCV7q
ODj6bYQOcP6ACc6IfUjyrvGACR4GUZpgSf0zf0tZU+D8AhO8W1TzQENBAJx9
a4qZJbsNF94T0HlTU9znOOGrk58AWDVzjZEpPgszf/nLjA+cn2CKZyee2Hkv
1AjE8M3WFCXWwdj8VD06j2SKg3vORJhLaoHvehaBmuKLz3t9FBYOAM5vYD4/
b8oC6UQ5EMON2aYYvys66vAbKTq/ZIrPjV+Vb58oCVUb2AQ2xbpo9a5hzZLA
+RGmqPLd6uTSCmkQt8fdpjhpz86WW0Pk6LyTKUYnPJRdw5wn293XnjFFe6uG
+0YpCsD5Faa49EHD6doMBRCX87umWC2T1TTjogKdjzLFA/Pu1l3XVwT5reHf
18aZ4ozQ6UGTPZSB8zNM8e3U/bBUQh3E5eenKWr6X7WZE6dF56lMcVthwBWn
V/rAqoHrakzxylOjaflLTIDzO0xRNcsyer+CELjxMVMsjfhptmOFGZ2/4mPv
a+1Vvb3mECm2l/nouGz8bp/VA4HzQ/ioK1n4PPi6OYz8+InpmHz8PSLtbdgd
EZ3X4qPD21f44iMfClxYQZWP7w72tbdd4gHnl/CxxDFtbeN5LdgpBtx8DE8b
2XiwTonOd/Hx0bkol5uqUmAmPhA+ig6dHqO7tJv6KXyczWsuVZnWQ5I+z2Uo
HR8/aTU4qv6UAs5fYa6X4u+4bK4SLB/3WSnWjY/XjqcMEm3SAM5v4eOF8y+2
qczTAXXWbpjKxy0eAyf9sNan88l8nHDqcVX3AwN4xsIRPz52rnYZHG7OA86P
4eOt7ZsqnkzlwSwxQeWjMH/6SEUbQ+D8Geb55Nw9qh8aQ48bW8D46O01dPdV
WwFwfg0fkx6kb3twzgyusPL6Zj662XwNkHk6GDj/ho/fOiM8YzItYRzbfsP5
qGX2IEhJzxY4P4ePuT5/og0k7KA66di2sKPMevMsZsqV2NJ5Nj6qT5RVT59g
A4cntR+JPcvHONntPkd/WADn9/BxRIsDP7bDDGzFgg4fKy7z5/tMM6bzb3zk
nW1vOxmvAT/ZdnOfOd+Ta8o+LpACzg/i48HCs4/tNFrIJgZthr3ko2eFho7u
23bqD/Fx/k5fk5pQeTDyOP4j9iMfZ+zM/TvFQwc4v4jZn+jo7dJL+RDHyqfJ
zP0Ppi5U1hxI5+v4mHDm+tZ9VyxgIVtes/nYs+u71KwlVsD5SXw8rf4lIHe0
NSiIBVA+xlRmdmyJsKLzeHycO/igwNHSEu55sQCZjwWvzeymjxwKnN/Ex/yE
gxEdl4bCVPH4Mh9tbkbEhf2yovN7zPoHu3zekm8LLeLxRia+/E3rhjk4AOdH
CTBeddSa1V7D4GzafAZBCfDvxBOtDVuH03k/Adocvq3aNGw4jJ72xfuNlgBb
Fxc67XdxBM6vEuDX901yQSm2UMzKY8YCXNWuNn3Xp8F0PlCA1ycUPZ5uaQrh
YkIpwJxnaT6/JqoB52cJ0Hzfp+/RUh1ksLjgCNA1YWJ68MhG6m8J0NEq8tp0
fzlIme4f+Wa0AKVXvFGpfm8AnN8lwKE6N01qcgbCalYOchNgzImXd9/+s6Xz
hwKM1s6J6lYZDtoMmnWeJsDOiMuPvtSOAs4PE+DOq50TdjY4w6ss9oEEeGf8
qE73Wmfg/DEB6lS28S/pO8FcsQAjwAD1GYfyRSOA88uY53voutKy2QEkxA1a
gAaFoZZRK+3ovL4ABwVdi+eNsYXrvmyCMeu9eM1m9Alb4Pw0Aa6VnLBN09ge
JjJod2u4AG/tr/GcZ+oInL8mwKKijJRbN4dB3ayTem+PCtDtmePpooJhwPlt
ApzxdEneY1dHOMbS/bMC9OeFfx5fbUvfDxBgk869BUc/DAZHsWApwAbcdHLO
IRPg/Djm/HnPJ/NWqEJOHgtoBfi5erS28ale6s8J8NmN2OKratKwlUHDb18K
cF8gzp+urwucXyfA6Tdd7sUmmgOfpbcfBeh5+7FWw8P/v48gwO2DmneGFY6E
eLa8pQjQUr/vyCwvAM7PE6BLfe7aIsmxEFwYcHBrtgBPGri+TTNzpfOcAnyV
eW1Q7Z+xoCIW+AU4rtxhWegaF+D8PgEelJMb46lH4BFL52oFGCzb6pwUNpLO
fwrwuL9mwe7hDjCDDZ9WAW4ssIy/cMMaOD9QgLUGRkbzai2gg8nerf0CdOj+
kPxiyVA6LyrE+C+eg04Y2cBFdrmKQlx3z85hu7o9cH6hECWTa6RPGTgCsvRF
S4ghFfAx9bEjnS8VYuyIlUUHZjpA+QJWYRNi+tE3T3+Z2QLnJwqxXrhXLunu
IDggFkyY3+XOvu92MgHOXxRihl9FYba7JliKG6oQh8fF4IEDasD5jULMjlLp
FUgYQBoL10cLcYyHou+7roH0/Q4hDv5zfN42dQdYvzCJjJkgxBMhkfMW/3UG
zo8U4sjRZ2ZYLhoL+gza3jZNiMl+x0VrrdyA8yeFWOtqU9/waSK8Ze0nPyG2
N1Re4yVNAs6vFKL+oVcvvhhNggCxwCjEvbNwY2S5G3D+pRAL1dZsUgp3BRkx
ABXiweur0/eaA3B+phAt2iOeXggfAbeq2AYgxE8zj8U2brQDzt8Uotmllg79
+qHgwdot4UKci43vFOIsgPM7hbhl5X6tV0+soYGFY0eFWL2Adyak1J6+v8Ls
V62N6ZHI4RDJROeYc0Icen3bqifyo4DzQ4WYGLpx0C0YBSPFgrwQE3hX0oIk
R9B5XSHuO/nnQkCLPRSw9sJ9IbpEVN/Tl7UCzi8VIrmnNJUw+72ThR8vhXj6
ZVvEYjKIzvcKsSP0kt9lDVswW84qmEz8BC5vztAcBZyfKsTcjRscquvGQhIT
PdtThFjgUZ99f+5kOg/M7Aes+hdTOBWWs3J6thDfHd7Ze7t+OnB+KxMfK3iH
G4p9QF1sYAmxQmpLjH7ATDo/zJz3psfBDdN84NlKVuAQ4mTDRVv1872B82OF
OGNPVaLccy+Y9e80w7CEuMcw4VrBKzc6byzERxXVHrd0CPSw8nG/EHWqtK8l
5NkB59eKMKNPRdlxozlcaQja0Kcowso1/NSLS0R0PlmEDbWzdypXM/1/Dau4
ilB/yR29XfNGAOfnilD6aBq0/kGobmS/IMKFI0M9GreOp/PMIqwZNmqzrc1E
OCwWBEX429734831E4Hze0Wo3jSoyOuiG9iKAaMIww4EWah//f/7gyJsc9A6
an7NBX6uYxNAhKXRNVtu/HIBzg8WYWiUyPr74fGwqeUbwwhFGH35v86Edg86
Ly3CQx6VCyIvTAcjVh6cJsIepzkPLsJs4PxiEd4f2nvWZvx8iGtlC7oIpTob
QmK/BdD3nZj1e5V4pjsugIViAV2Ey23/Ng8cHQCcnyzCpIZd9QVSc0FBTLBE
uMjY4PfkeB/g/GURfhq+fujvk55wj5XDwkQYbzFKQXcPAuc3i3BE5Ra99zYW
MJVt7+EirDty/dlgJTn6fpUIfXao3F4tUoWWTWfd4T8Rnt6291zxPRvg/GgR
TtUr0eTjWDjLtqNzIvw4Tn/HPCYeOH9ahAkfzpqSyT4wWmw4iXCn4Ooe14uz
gfOrmeeLTuotDfCDYrZ83hchb3GE1IGZc+j7XCJ8pbv0rL+yL4RvYRVtEQYY
mBiUfvQGzs8WYWpf1oZQOy8YzKb7JxF26M4IuGHgDpy/LcKNpVLv5Ls8IYWV
O1KY67dXNgyeMx04v1uEp5olM6yiZ8NqNjyzmf3+qSqboBFA3x8T4THt4qgV
ewJBW2zQMvGzx6thdXAQcH64CFfcVDAZtzQQXrHb+UeEv8J+WSh4+wPnj4vw
3ZARJh4rfGEuS+9bRZgcqbledNgTOL9chOaZnm/fB4wG7m1zM0wvCFVWuWMM
/wPLTfMG
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwVUVF0XhumWbhiYIKRTVNBzNiEqoaKiIgZgAHYXfgZiKyrYiYUY2BiI
CoqAgEiDdLc0SPPfO/f8rm+tb81imDn3nH32ft9nbzgBm+evERIQEGgSFhCg
////f5+btknLPGFhoVmCv9iHwvC3cbeEL37TyOuL+MR9uR28M55YuO2wjVXi
bbwn31bHY+Ni8vMHWGlZvrHE/JVY6LqjgFHUY/wsR0zHJTiAvP853nbRo3NL
0CospOv/RrvzFX7qUHF745EA8vtvsYP9BNEUBT8stPVug578eyy9ejzH7K4P
+byPWEWivnPi0gVY+Hu1hpllAt5eN54gPvT/9XzBzqu9/B5quONQqQvRmjGJ
WG08d9dOqznk+5JwyTRtjZqk+TiUerfOlO/Y+tfaqyul/7/+ZHw17ZjQiUVL
ceiynD/ctB94QfOP0Ro/X7KeVBx66c4R55s+OPTo1h6DJWnY+O5lXeTmTdb3
E9tPUjm4PG4OPvJcYYJJUzp+5VKpyAYnst5MnDov9FrVMwt8pOiVgcWeX3jr
NsnHW3iyZP1ZeHTlvbcTpcSwE/VpGiLZWNxrr9oXC2PyPNm48sRkCdUjgL8p
Dz7T8sjBWrO3mlRGepLny8GufaqVbsne2Mno50fWxVwcZ3SwvUxoGXnePGxw
sbXHYJof/jb9WopuWR7+dq3SM8fWnzx/Ptab07E+Pt0PO80PzuPoFeC3RkNX
LWasIPtRgPd+WPz8JvbB39ZOreJtKMQ8nzr/izcWkP0pwrKfzwym/PPATiGS
f/XfFuEbezjmv87MIPtVjE+WNIY8LHLE3879GTQcKcaO2xTC9e87kv37gy+f
9zeW/+mMnR88FjN2KcGJr/Ur5tx0JftZgguTFyY92jELf/+wV8n0TCkW+W23
19JiFtnfMmymut2ja/8M7PxrNts8vwyXVGbhvlYg+12OZ6nEqB1ePhnz365d
gWNkFh+SbjIl+1+B3x3VyboZyMPO/c1TrVdX4r2VUtK2u/XJeVRhY57S/ZQS
KxwgupynuagKN7TWe8SoIHI+VTi/9Pv9sg+u+J7cDyOtoSossrcuVYyKB+a8
qjGevmq/eul8XEN//e1q3Ov7IqjTy5ucXzXelbEnWt1vEebqXbJjOdXgRif1
M51V/z/PGsyJPDD6uH0BDjAfnabTUIM7Ijd2RJfPI+dbixtftBbGLnPD96as
cdY9VYvXX9lh09TmRM67FofUB/fkKk7FNU70BtVhKL/he0fBkpx/HQ4O7D25
FhliruekeZzcOpwfIDEPDRmQeKjHb6Prn6mLmuGAxbcWcXfV45pXzTf8eq1J
fNTjpNxb2asEJ+N7/vQGNeCgvh2GMXgqiZcGPGwUsvm1OPX96zeu0vvSgMOf
m+mevWhH4qcRW4epX1lfY425uwqC9QMacfDaMKUPr81JPDXiphvtnyUSjXHA
oelbDMSacPSfrgH1dhMSX014243w+K7dVvjeqYe7DJ804eS7x9/cCJtM4q0J
a53dmHNUH+OaixP+mzinGefpbt4jFeZM4q8Zv1NEuy/WuWLenZ1HjLqbseSE
d+9+aM8m8diCtQPq7mumzcarHpefNL7cgtFv0/bOb7NIfLZgaaNzvG1mrvj+
mxnnTexbcW7wpYWma5xIvLZin5gLy9f+dcC1n2Mvm1a04imS55f/J29D4rcN
N0uIL/5M7TcvTeWWWWgbnmksNcoR0CDx3IZbHtyHEyfk8Krc/+6bG/zFhidr
ywvdFUl8/8WBApe+DNvr4Ptl9Y8t0v/igORQsbSnhiTe23Fs18c3RXqWuLbB
86XlpnZ8afaGihOLbEj8t+MzBdOTsl7ZYl5X3DsrxQ4clNEofEnDltyHDlxR
bWFzQN4arxpmfbZ+14FXvHYzjNC2IPejE8vM/JzxLtAE5wrR39iJK7dqaC9v
MSb3pROn5hkl33hojrvF/63WPNiJR3bJl4Xa2ZD704nRpW6HtH1TsCK1m5o5
nVhNTHi6pxoi96kTHzSwXrdzqyO2Vly5XovXhWs77hq2tDqR+9WFxS0dE7L1
nPF8tch2rZ1dOI9TvK1C0Incty6c+W/o7JI5GG/TTt2qndqFJZ51HtpXPoXc
vy58q/6FUucLKxzBGe7V1ujGgyH4WXyqPrmP3XidFVqxQF0Vv6Z2m7W+G89P
+VB1T06Y3M9uvFzIXpl1aRTlmtA71I3vqrx209woS+5rN2ZN2hm59LQO7ra8
ckBHrgfr3XrsH/51Irm/PXg0OPT7jCZLrGiXIajr34NXx64peeVsS+5zDx44
an25omwStnYYD9N904N/vsvOjHk0idzvHlxxvNFzua4tng82EmzRXmxsN+M/
RZY1ue+92HzwrsW0CEu8bUbgafbiXmzw826y5vT/3/9evEtvh+ntTdTzu92Q
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
NBBerwOWxzojFfE/xMcJq3QAH9MqlhATJvOYOlDm/urQpTYpTImfxC17dEDj
bOJCb1UFzPB8HdjzwjX/cq4S5tvfMzrQ7/77zkQrFczwfR3Q/a5+VaVOGavx
DTO1fveLPQcrFDHD+3XAnLXU41qaLObbtTgd+Jhw+/skdTEy/6MDA0Xv5zW8
GEK0OtmargPHRXS8B3c2k36ADnwz99wjfa4A8e1FhQ6kL0uqc8wvJv0BHWjw
tIhXNv2LqOChFKUOyOBeK07KMOkXUPu9ZZNP5w8RzLRvdeG9kJJt7AdJMl+k
CwZxEW9XqUljmmZu1dYFqwAhuXmrJTDTT9CFNMeccwH7hTBfvlnqgmn419Cc
d/2kv6ALXeHFya4SDWjxDlqB6sKmSduXpV34Q/oNuqDNES/dJNeI+HLDRxcq
dmmNBUYMkf6DLmCXzy/cr0rgxl30BdaFxzmt29gFipjpR+hCldJ64TOKGphf
HkN1YX/h2eDwDhaZd9IFr9DGmKg5bExX921XqPdbrXhxbyEbM/0KXdhmI73+
s4gO5qfzp7rQvqjprJKYBpmP0oUVC7XvHApWxOL7w35tS9SFvaimcXKkGGb6
GbowoJHL7ZLoRfz0k0/tj3J8m1xgFulv6MK6cG/3ntD7iKaB25t1Qbb62HnH
h42k36ELf3OSdm8JE8TM+Jgu7JzWfviBtDyZv2LDooDY8KEEVXyR315mg4db
zJ83WZqY6YewoVpd4tFQtyaekvSNqphskP0okT+upEbmtdiw0fDQrmub5HGZ
Iw1U2SCXfXRNySYhzPRL2MDD6/e/s+5Ah/iCmw0vu01PCznWkv4JG9znawUs
FutHevwDYcOz7/cyzewkMdNPYcNOzQeXjwuq4rTvyyhLx4btYVuV40J0yTwY
G0ApyFImhIc3uHyXindlQ+evw9aWR/Qx029hw8LV88qtL+hjebrdMI8NTWJn
vjum8Mj8GBsOrVd1kj7Nxm9pOeLLhnmOURa7qtUx049hg/HikGCp6fJ4Cd+g
ssHzT+3A8ERBMm/GBkvXg0GiHS1oxJVOYGzInpKu27OygvRr2BAcICMmktuD
omi8vpcNIbxDJ84kS5D5NDYkRna+bSlUxS50+Q2j9vt08IODXWzM9HPYIDbj
Zn2Bqz5uSjv/375w6vf31Had1zYk82xsOKEicftDmj4+M/vf2firbFBfIJM8
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
8XA=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
knQn0ZufP06gCdBS0dohxLaesPpCEpuX23PKn5SQOwvW7Yg5KYlrD7V/Grc9
mbB6QxK/FH7+HWuxi0xYJPE85pEk+rcHtskueUpY/SGJJMnGPLqiiDDRE/NN
cH8FxaoBeTWE1SOS2HPXdY/owB/ivXy8ww1JKbTPfVX++l87YfWJFG4utlUJ
+tpJGn2ZhC+FIT9r0HtUJ2H1ihQun3nafq9TG9ntF5B2w0sKd4yc6xZv1khY
/SKF54atLN0mU03k1kiJxu6XwoWpeeZuvV+pnpHCDeESwxu6vhJmdwUlF60s
HBpeHqim+kYKLydkxOmu/02Gr59wOLZQCk0nai61GtZJWL0jhT0/tbbKXftH
UjYWv43tk0KD6RE/tccPEFb/SOPsRPV0d9NB4ip8gzSq3Lj8pMK2n7B6SBrX
2B8zt6vpJmVbZabfnCmNjyM23Lyv3k5YfSSN7y48tyl684swq39zuzR+E+uZ
d3/1V8LqJWmUntN26v2ODNK7izkA0sjrUFtZteAcYfWTNCoULCjA9KvkZFCJ
Yly2NPrez2rZ9SiTsHpKGnvfzXhZaPGV6AVvmh3XJnj/3IzAiOBawuorGTwZ
MHf3eIlmcucAk9BlMOaKwjFb/XbC6i0ZfJfXrSQ5p4MwqxPnJINxRxYfXbKw
nbD6SwZLuyPsNsu2kPdHicatABkMfLdPMXDeL6rHZHBOdHOrxPdK4n3iy7xb
l2Rw6vauF6pTSqg+k0ExFSfLyR3FpPEUo7Bk8NRKE/Ju6zeq12RwnaLiI323
WrL7jMLXW79kMHnmLYMF5/9QfyqDm3UVTVNntBNhOVKRxYqt984Fm3USVs/J
YqvjSKnOTx3k6gVcfNteFsOUDX1MvdsIq+9kMfdI1h2dtEYiTJ++stgbGmh9
IewHYfWeLI7Ieq3zYnEhSQnfWnn7lCzqre/a5vMymbD6TxYnjrqoMXHMATKD
Oe6PZfHC7z1bgi2vE1YPymKi6tpRft8zSLng6vHfZXHoxKGBvWs/E1YfyqLk
nbLbv5/+IP7C8JTDC/szentX1RNWL8rh7q9rn+ft+UP6YhhBI4fnyhV56p0t
hNWPcpgTzetzd28hp5jlXCCHT0rPZZdnNBFWT8ph1tCz334j6oj+bZW1gj1G
nZQlq9/+qiSsvpTDgPF/1jov+0wS7jA/cug94OsddyuP6k05bC6+vdhXJo9M
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
k/IyHRxR3rAsvPQHES5PpA4mB10LtMmtoPxMBx32Xy+ZEF5GXOQVjq1+rINu
0+597h5bSnmaDh7796s1MLyYCPFZtg5mPjzaFxFdSPmaDq4PCKi6YF1AmN1a
/V0H90+LmHh0Wj7lbTpopTmm4pxsPjFSZhyxDh54J3Yv/k0+5W86WPbj6cKb
5YVklQoKjrwuOmxRN3J6UEJ5nC5K2SWe3bPzGxHiIj1dfMyfeExTvZryOV2M
mdX9PfZOHWHc3ZrRupi1bfLxoLgmyut00SK4trp8SithVrPeSRcjV+08sXBl
O+V3unii5Dn/dEsHOaq59fSaBbq4+9e0cUMPOynP08XiWRWFX853EiEeCdBF
+6bfs6TPdlC+p4vfb5t4x2W3ES0dpkLq4qyoSq3Jv5op79PF1LD0vP8eNBDG
fdVf0kUbnXcS/GM/Kf/TRYk6g+CxbZXklh4D2HTRfLL7xLW1XygP1EX/aLnG
qnXFpIXBAa900bXjSJjEf4WUD+piT2lhqPikImJnyFRUXeSH35Az//iZ8kJd
nOzkvzXl6VcSLNwAXTz/5aPutsAKyg8F15sr83R2wQ+SJXBHa/t10SvlhmX7
pZ+UJ+rhxsFljaXnfxFlwd00qOjhg64+X/OaRsoX9fDywMqPVtebiZcwoehh
p/q5mHc+bZQ36uGi5ARJkcsdJJLPEAc93Ap64SIZfyl/1EMlmQsFGN9NfgmS
4bpZehj9c67rPcl/lEfqof+lrh11F/+R0cICqYfOnnINN83+UT6ph7EeGS9k
Be/fYc5UbD3c8NS7on30X8or9dD4sJbrg79tJM1ix67GU3oYvohnOyz+N+WX
guez99n4e2stkRYKPj0sljng8X15BeWZevgw8+G6s/iZzB6h+qLxsR5m+yT0
Z4TnU74peP/SVwlPi/JJGGNPc/SwbUTEm3s3P1PeKXi9yDVpDcMKUjmSMTB6
+H6Xg5Xz2p+Uf+qhQWiPf6ZOIzEXjrfooVjkt/xffi2Uhwqu1wzj3RvayEYr
Z0EJ00dnt7vOzlc6KB/VRxOeRMDc0k7yjJH/+vqYpTlravuXv5SX6uNuBzGT
yqouMmTNADF9VFAfGRhm1kP5qT6S3HHtSWn/yFRGrk7Rx1fFM7VVz/dRnqqP
K15UWiV5DpDQcbteNy3Qx/tn177hXRmkfFUfD/d0k0Mtg6SUkVfr9VFTf1fp
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
mq4POVGd6wDst81NcEHdjB2j9Y3gfxAK7EM=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
QVUkddhyKQMb739KeJk6dG6pXqrGTEX85YlVh0nyJ3Y8cnxJ+Bnvfl+qD+XF
5aF50jKntj1Xh2Np5yKPJH8kPE0d7mgmWU12L0N8fFagDuPXbpReXFBJ+Jo6
5G2wS9bVrULUbm37qQ7nbya6JwRXEd6mDuHWZ85EunxGTHnKEavD181D7ip3
ygl/U4e5BbkdXy4Xo608K7NdTAMW62i1nknKIzxOA2IjPiv2sjMQHxdpakCx
3UahSfgu4XMakJxvlyvwIxRR7m67qQZMCVBMiR25THidBjw0O5VVPJKIqNVs
dtCAzxOzl6uufkn4nQZIFkxuzrmSj0JU9p/fvkoDFubmfxA49InwPA2out0l
Yj25HPHxiLcG5BnkXLt1uJzwPQ1Q3nD+1qyMUqSqTlVIDcjNUC88b/WR8D4N
cBzSTWx4lIco99UcoQHisfa60Tx9SvM/DTAe3tZyryMXJWhSgE0DbMJOZos0
vSc8UAN8fjax6/pLUSeFA17xXmvMWH6U8ZXwQQ24J5GZNnX9L2StQ1VUDQh0
v/Fw07N6wgs1QN0l4pPIvj8okL8BGjC5SXF7VNgfwg814PRN85m3e+tRPs8d
7RjVgHTOOaWkJ78IT9QE4YFRqVd+X5A8725aGJpw/9XMA902xYQvasIVj9A+
XUYWcuMnFE1Qb4jOdl4dRXijJrSm3HR5P7AZxXIp4qAJW5XWu8aoPiT8URN0
4hPnXujOQ028ZLjTUROWDR3YreVRSXgk7/qg1Uf+vK1BpvwCqQmLPjFH287+
JnxSE+yDajvVbzagg4ZUxdaE5zOLChPUGgiv1AQPowGlbrt6lDPp4OHWc5og
990+s0PtB+GXmrD/6hlmZF8FEucLPk34Ixu/1kOihPBMTXg0e/2aewklyGmq
Qlbrc00wsm/dMXfD//mmJry7t3rbu6ZfKJKyp4W8+5mb2u45tZHwTk0I9btQ
UP2mDf0ypgwM73lKmCPOzp2Ef2rCzxZJjlJfJzLkj7downXDrS9KjvwlPFQT
2jxyhoe3NiMfs7m8EqYFeau/3m9PqyN8VAuC7h8fO7rjM0qn5L+WFpzZudXE
8+cbwku1IOTcwX2BRjFowpwCYlpw8UaEsu20E4SfasG0E30HNr3MQPMpuTpH
CyKGc9Sz1pYTnqoFnuk+5lci61DY9MOv21ZpgfmtvIfqOa2Er2rBV32tTfpr
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
Ekz/b3M9SF61033raRP8P+E52OM=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
ueCcSZDRK8H/Ab+hA5U=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1: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
TKLwkg==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1mwVUFO0XxunuXJYFNujuZu4lJBQRuwUVCyzAwFbEwMIPUEzEREUs7EBU
VFBEFCwwaBARKQkJ/zO779/znfOdPczszrzz3nuf5/fs8uYsGzdPQkxMrFlS
TIz5////qaw4k6Y4uYaSCBZ/zd2cBJev1U97HScGotfp8LfivmZZlRpItm5x
cijIhFthK68qsdnk72dgUG7nONk6Lkgc8RWzyLoAnyYXKAfJC8jxl2H/6frk
A6oCkDCancdpvwYt6zwPVvJ55PwbYK+0NKJEmgMSsScbjdVuw9ELa9QO7NMm
73cXLCykJxUoqoPk0xo9G/sHELfi7de6RlXy/vlQt8+kpjpVAxIV/jvHPl8A
XPVquYf/dMnnPYbMit6115YaQiJ9tKH7U3jlKbX+VcP/P78QRk6xWqNmK4DE
GW8/84uegd+R0DuCY3xyPS+gecD8V4w3FxK3xXaZTimCkYKUNyf19Mj1FcOp
nLUpzmfVYOtldWWr5pfAH9MsPS1DnFxvCdz/trz/NLuZ2vrxmqldwmu4eObv
n6bYa5To+kvhySKd4fTPryk/+t30pMpgRfiV4Yj6Tkp0P/Rr64GAK2el4YlW
/yX90LeQrbpu6y5pDXJ/byH0zNEGpTYW+FkU3zVIfweR+13dC+D/91sO/mG3
oj2TuPDE5/Bzoy/lwCn3vF0YxyX3XwGPRngO1egZgt+4ReU84/dwK/plzrq1
emQ93kPWpoRpG5204Ml8j2rB4g/Qel+v9FSLClmfj6CYavzZeIQc+K2T/2Vy
4yOMte8+0mIvTdbrE7ha2tSnBtDXn/K532zwE0RWH7jwxUmWrN9naP/840HG
GHnwP3NBxjKgEmybR+3drKNA1rMSquV3nIzKloOnd9ZoWu+pgsF+/nvoliLr
+wWWxE36ljzzH+X/OoRrW/EFptTVXto41EXW+yvoxUzcsnZbPSU8nPMNzie1
Ru7YX0bW/xsskuzd6AjPKP+eHx6OUd/BSHtF6zjDj+R5VMMe+6dj9R1/UHOk
ZwrYk6rhoVixVVjWH/J8qqGmVl1qgdU/6pTqMwv9v9VwRcFxwOqtJHleNZD7
h2s7oloGapmPz6yBqofSbheny5HnVwMqZRlfTxjKAd/4gKuBXy0I9FUTcwJl
yPOshWfRbgPXrSRhju2Qt2FjLfil7BF0ZQ1ToudbB2dW8N1iDvVQp9zn+Rvt
qoNdvOvFnx+1UaLnXQc7a86wjl+vo2r9mAWqhw8j5zueGPhM6r0eisQ0f2SO
ek/xR7uE897Vg5yqks/9c/T9C/dDA9xJ7rlyyuEbNWfy8Un8VQ3w+c/hvd8q
ainR/mgA4/CcCLdDDdSp2cwCNcLD3ibDi/GNlGi/NMKyy55xhzgNVG3MkrnG
+Y3wyzhuckst3W+E+6cJlv+7PE9Hsorir3q/yGROE0SprFayvfuWEu2nJrgT
+fo1V+UpNWezz3JTmWYIPpNinpJ2iRLtr2YY8OwSWGSvp07tOrvK7GIzfN8g
nZsQEk+J9lszPPrPXc4z+DxVm668wTzsB/zXXKD57VcBJdp/P8DcPimDNbmM
EpxYudWi8wfcs/7P7K1HJSXajy2wId5j/MbsWmruha/JlgdbIOeV/KsvArqe
hfuzBT4Wvpn//mYrdTpvxH4rz58wuGj2LYWE35Rov/6EaqV+/zEFv6m6h7kH
rb/9hPv7a8ZFzv9FifZvK8yx79Wt+t1MCYq0j9sktkLJH+vdm5PryH5uBUv9
vcFH9nyl5r7bcNrW9Bfo3p/XfmLeJ7K/f4FMXnPiyvufqdNfGi7YvfwFc1cE
nHowVE32exvonxc4nKloouoaR1+1X9oGq4L/+ySo+k32fxsUblvwIz+tixJ0
3LzloPEblMrHJXX3/CH18BvmXFlsn7mmh5o7YPDQ8dZvGFn72mz9j25SH+1w
PHmaJHt7B/VOgvnEdjisIp40/8v/66Ud7jlOGTu25zvVKdsbxd7UDpHbpgRX
Wb8m9dMO3QND1x5Xnqc06NVkv22HZX0Hgh+mxJB6aoeAfs6n0Y4PKUeNiBh9
QQdEcRae85b7RInqqwMGjz0c26LTTI3TTWvTX9kBq6ZUZf/X3kmJ6q0DKo6M
dBVb3E/FcV7Ecl7Q5ytenHXPbZgS1V8HPJBkH3lkLwapvIFujl4nDJpfu7Ut
/R8lqsdOCDsh0ajrM0hdp1fbIKYT7nXc0v0R30uJ6rMTLjqxl++51km9s2JW
qBOi1relf89vo0T12gmJYZwZeypaqU77jI2Gql2w+JBdk0fPb1K/XYBbVk+z
XdZFabi+Ejea3QXZD9Zw/qT0knrugmnlQSeCe/5Sjl7/kozy6PMXbgg/sHKQ
1HcX9L1eIDi+eIAah05yXOlucPoydjCwsZfUezeoSf/Rct3ZScWNWLCbO7kb
ZFKdj3DvN5P67wZtQV7jxvBKKnXkURXehW74orJv7YGBx6QfdMPS+GOjr7tv
p66PefMfvUTQKvf64dXi86Q//AGF/tH7jgnKqHcTJLX5o/9ASKTco4mDtaRf
/IEDau8b7wS3U51T3Q7xT/yB3abJKeN8e0n/+AOUwVxxc8shSvR4/wD7id3q
mDViIOonPXD9qs/MZ8Ni4Bh1IlPg3wO1efbPDpiJkXnUA796nubcODhICS/n
QA88yNTnx0r2kX7TA+/af/3u6eyi4pbKnjVu6oHFbrCOl9JB+k8vXA3f+dtk
XQeVGu9lbuLRCw2yYS4dF7pIP+qFqaVH/45c1EtdT1iWY7K7FyyOdOzpPjJA
+lMvRLS/tj0q848SlufXXtDLW6JkOFEMRP2qDxxKYldO7/pHdSYyBdsHCqu7
+nM/DJL+1QcTtascPr7opTR2KrqYbemDrqab4dePdJB+Rh//IUz/1PVGynEv
3DEr74OvClv2fZ/+ifS3PghreD92geA5NU54A/2wSU5f0d+3gPS7fmiYfSBo
4ZoyKi4jO998dT/M0fiRaJFSQ/pfP4zTrgt3P9ZGpR2r8rUo7oeonWEjb53r
If2wH6JNWmVDLg5ReSeFBQkz10+Nkb8sTub1X0i8s3bNsXRJKD/nH2y55C9U
WLhtL9wuBaJ++Rdadg3KSxZJQVfO6leWj/5CibixJeeVFJnvf0GC2vEjUlka
NK/lhFmpD8D30pKl59qkQdRPB8Del79dPFUWnG59f0uXGKy/99l4fpk80QMD
4F+S/3EfKsH4+5oTrW8OQJyS7g3nsSog6rcDMDnfEQqXqEJ8QdAna9lB6O6+
/N8lgSrRD4OwuLzIYyQoQ9qzddNtpg6CseVpvZWV8iDqx4OwMOFsztFp0pD3
8so3m5xBOMf7Jd4RIQai/jwIcV76Srnje6nyN3WzbYcGQWvEr6Ejn36Tfj0E
WVXVM6q2NVFdFboNtmOG4KjtRLsXbk2kfw/B72VFxx9O+E1pVo5aaHdyCKYN
DU98s6+X9PMhaLnpdq3UTRycvm/6adc1BPmLr94yT5MFUX8fhvN3w+Tne6nA
+Pq8pfYjhuHs2K3z/4VrgKjfD4MpO6vppI02xP9o6rDPGIZNLUkGsWm6RD8P
A37feWvZKj1guqfDj2G4ouK47+4nNojmwT8obFj/yv2JPuR1jelz8PoHxdPq
QuvdOSCaD/9gyH/xoWovDpT3bV3nuPcf/HxwqfwdfbxoXvyDibH1m+Y9ZkPX
0O1hx+//oO+QWn+pjR6I5ocYSv55tnKRnC7sEu8pOMwSw2HLB6kwRwtE80QM
+7KffS+JVAe21H5my+KNKT6e79cpgWi+iGHKUrcbK3fIwEV6Nx6JFkONH3rV
43eJg2jeiGHbhY2peeGDlKd84bYjaWK4c6ZUwu0v/WT+iKFn3fzzKesHqZeK
s14ceSCGcy/U1EWABIjmkRjeaQiNyKmQg2kqfXJHG8RQOeXEm5TXaiCaT2K4
KD7+tE6fNrSoMR1UHNcnqfV7bNYH0bwSR8MtxdcnrubCWnq3HnUTx58L2xSK
GvhEH4pjkMfKtQYfjEFB5/nro5HiWDxhV+g7I1MQzTNxPJ5kF/I5xxSOsCJV
jyWLY19LsfaXVaZET4rjnNvndC7sN6F1wt/wY9fFcU+MyqnvLGMQzTv6eDXu
8dUefLhnkJ56rEocZXQmhnlwuUR/iuOu54bre9v1YSS9m49JSeCO2/oxjSW6
ZB5KoKHbqbUd8lpQyWcKQgLDUhz38krUiF6VwPkqej2Nk5ToPsF0fAkMKdhc
fHi1HIjmpQR+CGGdzjOXgb9mg4eOb5JAweX94wbPSRN9K4HfzMtLfnjKwi7L
g5XHz0tgfteM1M2WiiCapxKYdVOtPPitGrCZ230rgZM+TmpdE6ZN9LAEug+r
OcU0sOGi3cuZmX8l8IV62Y6Np7ggmreSKHOPFzDnrwA8hQNEEn/Ojx37186M
+CNJDA7bVvy0ywJeOg9XZ4ZKorWe3NHJg1YgmseSeKv59p5b6jYwjRlfKyVR
jLN333IdGxDNZ0lMlH3X9lDJGlo8mA+QRK/Bhydn6liCaF5L4rTJ7tu1l5nB
Wu+SsydeSOIlK51bFXOMiR+TxNMHUtes8OWBAsxvOtEuiepvjzyecJYDonku
hS/ff8hed1gXhO1aTwonzU0s/HpCE0TzXQoDtox4dbJUDZjdn+UnhTK6n9c+
91AB0byXQlX+SaW1TUpwL9D5UlaMFNacj46ctEmZ+D8pzNuq7HGlXxVGhpT+
ykqXwkT2yU1LPTVApAeksG2CeVJhmjYI29NDKcy8o3LBmMcGkT6Qwojgkkdn
640gOoyZqFIobWtcN32GAER6QQqDlr7NbuWbAbM7T6pK46S/9n2HxK2I35TG
lrJjt9NO2sKu8a7dJ92lUVZ6rfWOd/Yg0hPSOP6r1rtnlQ7AnlTmQmsCnFWR
8c84xBFE+kIa9QKtkpuVHeHilOjVp3bRx2/4qMCxcQCR3pDG5Eadj8/X24Hn
dKm7p/KkUfJ8zdtf76yIv5VG7b4Jsd2PzIDZPae+SONx+40DX3IEINIj0hgB
mY/tfhjBtEh379PSMph+IkpT9Zke0ScyODzPZpncCLr+5zANXwazksTeztyj
QfSKDAaPNjiTkqYOa+ctfnR6sgxeK8rg5tLrK9IvMhjy9L536AwtUFgoI35m
swyezbWYElSlCyI9I4Nzx6w+Z5nNAebp0iMXVcSTxfSn80Ckb2TQ1+Lxmf0D
xmC5xDPpzDsZvLs2OfWukQWI9I4Mqs5Km++RaQP3llU8OzNA/33yXAlVfQfi
32WxPmZhz9FgJxgpPEEWn0UlVoGpC4j0kCzmb9n45FiiK1SukAs5O1oWe322
hZs5u4FIH8mi3Zy5rjO5bsCs/tlVspj2NCFV0tcVRHpJFuteGVaGn3OGv2uY
ApDF7ZEBi3asdCS8QBYlBG/6NxTZwa71H5TPFcninZ9nDu6cYwkiPSWLLQWC
N+/dTYC9afmYcx2y+MvgfkrOQy7RV3LIuf7S3DWdrv8tTEOXw41SeRwVOx0Q
6S05rC1Jv9myQQuY1TnnL4dWL78m71+rTfiEHK4Xj/lV382Cl9sprezFcqi6
3zh3yylDEOkxOdxtfVNst7YApiV/mph9QA6LWld5LcowA5E+k0MddY8NLqfp
+t/NKCw5jLdMLDr5zx5Eek0Oze/cNNh+wwnW7lP6nN0khzZlx/XqQlwJD5HD
LJZMj+QBdxCOIzV5nCW+Nj5jkSeI9Jw8VsknrNLN9IIjaTjjvIc8uqaEjnFU
9waRvpPHs7/2hFpf8QJh+5wjjxem7l7BXuUJIr0nj9vMfcqlE9zh3qEV38/v
lsceddXSmEoXwl/kUX6j32X1ckcYxZT7DXkM3VU5y3+EHYj0oDy28lKmvNe3
gCr63S98lceLIyyLj+YKQKQP5TH9yu6fSR8NIUa4PRWwoPap68RJeiDSiwr4
Siv34BQfXRg4xQgaBRw+vsyw4SKL6EcF3F4QtfLNGgPYzSznFAU04e7pdDzL
J3pSAQu1eibzXpjRPlZtEf2MkdqS+DLhpQ3RlwqY9kbqkJSpI+RcZP4pINZ2
tx+LdSF6UwHtVRbFpqe5g1duQOvFcgVki7M73kz1IvpTATtHWs9UzfCBV0J5
R1/PaPs/20yA6FFFXGvLNo/5ATBduKEVkTU6XDqkHIg+VcTSbZte362h4OcN
DfoMRbQN3hAXyPchelURb9rffWd1zRPW3b7UmbNaEZ1Lbx1su+1G9Ksihi69
XlkS7QyKwgatiFN8ciVR2oHoWUX8u0yBlbfbCo4+qF55qVgRr3Zu9TlZbkL0
rSKyF6z1tRrLA6tHa+lPUMTDEXNG1OVziN5VwqSp/nXHNrDh/mNGcCjhBLek
o3WGHKJ/lVC2ZFuWYikXRhVe9swNUMKZEmqva8aZED2shLWOvfOPj7eCqufB
63OXKOGenVm8ficHoo+VUMvjUnGinAvEFNfSV6SEV2dFPU6tcSd6WQmjlknc
S0rwhoFX6//lPlLC2WejOh7vBqKflTC8sCma1Ymwu1TH93KzEvq9H9nx+pIv
iPS0Eu49pPDpRYsv6L+9mkg/MnywKX6T80VfEOlrZbTXqs0Koc/PKR9J34Ey
dmXwEuEMgEhvK2NISUePer43eH2ol74yVxmPH481mDnPA0T6WxkDx77OX/nO
BV592hh0ZY8y1qb9u7wJHEGkx5UxVHFfS/YrG5hexUq+clMZufu0w5/0moFI
nyvj4Y9mVPx8Afz8ep2+Y2WMHj/1SdtiLtHrylgQl2FXe8QQ1lWHKl2VVcFn
FQv4UQ5cot9V8OjN1l9+AgEoCgW7Cp6y/3ligrw50fMq+GHm3rhzp2zhaMPm
lKtTVVCiLOVYmb8T0fcqmOCT8D49ww0YtXo1UQWXlTlJUoNeRO+roPyP19f8
VBDutzAbVAWfPvRd7ljuS/S/CuawbrAuWfjDqF9hE65VqOBO65cGT3r9iR9Q
QQNlB2qqXQBU/W4+cG2Ivj7xRC+XN/7EH6jimndPO9bW+kGMsOGqooSfQU7F
Rl/iF1TRcPeLSL+tAIyavD5GFRU53cZxh72If1DF0smR5Ve2u8Hu3lvTrieo
4s7qu0UOKU7ET6jijUxr3nCtHeiLBAQmzZ8YxSq2IP5CFVMGLjm+tTGBnMEW
+gmo4r7WyEM7Z/CJ31DFXd/1lWnFCiJ8oooP3ZSXyNfwif9Qw9wDXq6nZ5pC
o3B51fCHknarb5MV8SNqWFE59F4x0wFshYJBDePxiZdzvwvxJ2oYOeqJ+smH
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
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.002944273367031275}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=0.55(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.002944273367031275}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7555035886550713`*^9, 3.7555036378733683`*^9}, 
   3.7555036781510477`*^9, {3.7555037256749554`*^9, 3.7555037530838785`*^9}, {
   3.755503789270277*^9, 3.7555038556701174`*^9}, {3.7555038988929195`*^9, 
   3.7555039591751895`*^9}, {3.7555040042933784`*^9, 
   3.7555040257608957`*^9}, {3.7555040724501824`*^9, 3.755504144618416*^9}, 
   3.7555041795849705`*^9, {3.7555042981224246`*^9, 3.7555043061196337`*^9}, {
   3.7555043539143753`*^9, 3.755504428175009*^9}, {3.7555045678952866`*^9, 
   3.755504591233197*^9}, {3.7555046327549915`*^9, 3.755504675139684*^9}, {
   3.7555047368387256`*^9, 3.7555047454107766`*^9}, {3.7555048409270177`*^9, 
   3.755504881560847*^9}, {3.7555049417404394`*^9, 3.755504968993712*^9}, 
   3.7555050163795104`*^9, 3.755505046710202*^9, 3.755505083632305*^9, 
   3.7555100530008516`*^9},ExpressionUUID->"e35c407f-9a26-4567-8644-\
6f1c8870a24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wfm", "=", 
  RowBox[{"wfmajoranambdis", "[", 
   RowBox[{
   "1", ",", "2", ",", "2.6", ",", "1000", ",", "vimplist", ",", "4"}], 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQbZ3yO5zv92vHawHvo0B0iGQQNz+Qdrh7SRxEVxwT
MATRlk9umIDoCe5nLUF0WMppRxDdmz3bF0Q/+bEATO9VKswC0eYTSgtB9Iwd
cxtAtMLpU+0g+prQq14QHeS3Zi6I1r/ocUMASJ8JXg+mf5369ghEH97K8hhE
S55a9QpEl1hvANOVOwy+guhT70zA9JXQAFVBIH3nWCuYnjFFRh9En3hhDKZF
YhaZgej+A8vB9NYcFk4hIJ3VxQGm2/P0eEE0R6YrmJZKOawIoj9t9VEB0ddX
THAVBtJLbj0G01vSD8SD6JQFhQkg2u3LzWwQ/Wv9XTC96RR7MYjWm8MDpj8E
rqwB0TWzNoLpvYyT20B0FP90ML0ov3oCiJbh7QLTAMpe1IU=
  "],ExpressionUUID->"4ea59d98-313b-46d2-ae1a-a70352a30486"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1: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
S0YVlLw6rg4XRp29HJbFIpq3qsMTuXejdQafkbaRPP+fK+rwTz3NQDO4FNH8
lfP93pEvN12qkT0lBwLUQT5j3rU1NZWEx6pDaQYz3C/xG3qzlFpQdUgYvjpq
9iue8Fl1mO1sZr9SJgYNU+MrXR2Q7R79NpyLaF6rDssttEZ2LqxAeMV6zohX
h4qjGyTdn1chmt+qQ/ES1bKDDcXIi9sg1KFeoLf/hHk6onmuOrjeuZf57VMM
KuSo5z/j6iCwYNIyfnU24bsasO3WxYsf48uQMtUeZDVAWM3vfg1nftO8VwNi
DS807xmoRLbcgacBGzNCMwxn/iD8VwNCI/x2Zx5LQ5HUcV6qAUc+LVY51phK
eLAGZHtHVfeZ/0B/1ygad5lwrjdTpyT1XA2i+bAGHFLakW+UXo8MuQJOA6zy
79330atFNC/mPM+x0II+pSJ0ef2b/7rOakBIb3bLIYskRPNjDbDZtntbI388
yqU+/p8GvLzf/d2p8guiebIGNByVPOtSWYWkuYZEA8YPeG7kFa8jfFkDbr1k
am8ULUXbjSkFpAHhOxt3MzoyCG/WgFTlfDGXBS9RMEd9dn/RAN0HLUUXirIQ
zZ81QJy3NvUBfxn6ReHUes7zla9dsPryT0TzaA1oPupw7cu9BjTP9KJ5d58G
TNw+2XdkQRmi+TTn+g+FMj/fTENnzSjFpAnF9qLn1C6/RTSv1oSDEa7RP2wL
Ubo5BYw0Ie3p7wWZ++sIv9YEO+Mu24cTDUiYC3w1Yfe8e4lSYVWEZ2tCYXic
Zu/ZPGS6Na60e40mFKjvDtvjFUv4tiZ0KngouXVlowfbKIWlCdZyq/lcP1cQ
3q0J55c51EQWN6KfVtQCacLa9R/i/j5tRjT/1oRFGS/mlTVXoRk7VAxPemjC
gz3Fxtu+ceqfy8M14fqD11vGdL6gkxz19jdAE0LSt9pqjHLqn2vwNCGx0SXO
UaIBvbemCl4TVI/UnZ53qQHRvFwTvAo7xa4uKUFTuy4H/U3XhA/HxPa/Fkkk
/FwTpnJMnixw+Q+t372ZI1k1IRUiz896koFonq4JwfPO/j1xuwzd5Q4wTXji
ctTNy6gB0XxdE/YvEBI8m9WAKmwpBacJUdeaT1V1lSOat2tBJfuu12fTL4jG
XVpgmD/zGu+fLEQffy1wi3gn8WP7d2TPFWRaMPop1fbmAk79cwG7FnSZjf7T
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

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwk0Vd0bxs1z5nm8QyJKGpVh7zc0SVFKSBlLRZMKyZdIKlQUjaJJRRlL
A4kiypAyhciQOYmQRPrfc8/+t761vtVy7j3n7L3f932e3yOm+9712/h4eHh6
+Hl4qP///8/cjnc7r9b8NONbyVvBOBaG0wfZe48ekUT032Px3d9WP/+pKiH+
/pD5cwsScIJanjtLVJH8/A7W1VfuWlQtiviuLuWZeSMZe/d7iRr1j5vR16fh
nqOTjZLqPIhPy+2R+mAmHq2oL8n6JU0+/xjL1XxybTqjhPj23+yaLv0U69ib
mSW7K5Hve45fNMxNTt8qi/gL21RmG77A239dL9Xp4ifP8xLb7KpScdrMg0LF
Yu6q3i/Ab023vEmjvp97v1dYxUF8RquRBgrlXK25uBBfN2qLEB7SIvcvwiaW
9xcve6aEQp0/NrDevsHFHgW3zGr5yfOU4PW9j0KWHv1hFnpi//AMh7c4Zaan
aV/o/9/3Hf42WBNSdp6JjqfJTNPvKcVMb2xZW61PnrccC7p5+Z64Oxsd/5Q5
Y05ABV4TJxlsKDiDPP97HLBCJjvISgGZc75NReADtrjeaL9lXJq8zwdc6sC/
A91lotfy4w/VrD9i8TyFFfei5pL3+4g3n9EZPZNphMxnvnuuEVuFr0c1vIi8
OZe8bzWW1b1ouPsUA702u1Ks1VSNO5f/XBCnL07evwa/fVmT8+4gE5mv31nN
nF6LAxRiUlomFpD1qMXDB8V0y/5i9Hr7kla2Tx2eU+31QVcUyPp8wpD7KDo6
aj4yPyL6XfvxJ2w4/Ul10GxNRK9XPV66yr5t0UxN9Ppcw7jOZD1ex+gpO+K8
gKxfAx7pTbnv9nwpsriTLKRn2YilZhRkDORakvVsxChbny9aF6HCZ4flZkV9
xkcvVcwZAj2yvk14j/FWA60hVWRRsYphUNOEbZc+0Q5LnkfWuxnPmPn5ihBa
gbiXq3/BJtmzN6dusyPr/wXvuuxvzpxjhyx+9S6Z59mCBT8NiZ6bWEn2oxW/
WK47882XuchdcAtb1b4Vn/1X1bDYTZfsTys+6urzPcbNAt2SejNT7U8rrl6W
/eFHgR3Zrza85M7DeckDm1A7dfuENpwQz5rBt9iO7F8b7nR13Xj2wjLEmh63
SMO8HZvs/vD5wF0Dsp/t2GHn0nZRr9nI3eCvqWZXO1Z/Geaw03EF2d+vGHwX
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
5tPB//w8Pd6pZfh/SMjxjA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJw1mwdYje8bx9t7790ZKcpMqPA8dyrJCIVSRFYkJMmKhowGKi2JioREg5+i
KElDSRstJSUNDZV2//Oe8/xdrst1rs55z/s+z/3c9/f7+Ya+55j1fh4uLq5O
Xi4u6t///8ErArZcWrQY86zh/kTz8cd8dW9fpchvIq/DsZXnv9Q4UXvM2+O7
eFHeXTyPWXIz6T8H8vNEHG3hPm0ka4N5Yky45sQ/xkX3xU4tK1xF3v8My088
L3h6ZRHm0XR6rtafjnvSV15NlllOPv8CP5DQ/M9ZyBLzHE/o0JLKxKEi/oey
LDeT673CY75eqyQ32mDe963K8xbm4I3qQ+90KteT67/F4pERjiENK7CfSGiS
yqM8/Om8+iy3fQvJ973Dc8uqX0UbsH7OereG4Xuc+3ax9dHsNeT7C3BQ1aj+
XceN2G9H5TdG8QcssZLvwJxPa8n9FOHUnYWPZykh7Hfp+F9tu2LsU/ZLAg3R
yf2VYPXTjRcUtTTxxWfS4nqdH/HltJ/tYYsNyf2W4R9BjKG6z6vxxS/p2gtO
f8LPXpjdXz77//dfjg8nFKdJ4dV4FetqynwVmMdfPPZAtyF5ngp8IWm8lXv7
LJwvN5aiur4Sj0/4fNJ0/v/zVWKxLz/OZbaa4FVzSl6ph1dh55dlSQyj1eR5
q/GGiX6dlihTnL/yVqFmYzVOa938aVbBEvL8NTj8okDzqdeaeJX1oWq6Vi1e
GD/UZGRHI+tRi60yzoBfxVKcf8Cohelah7e6ns1KyTcl6/MFL5hy3lbRYIZX
nRPunfXiC1bVPpe/9s1Ksl5fscaXX74XJ+bj/BvfxnQmv+Kls9r+7E/9//p9
w89iIyNHti7ApomPBXTN6nGP4wPnNaWIrGc9po8WuIisMMXvs87Izg1uwK/G
1Y4XJ2Kyvo1Y5IGJYLMc6/OfLGnzaxpxiOjUSyVhabLeTVhq41XFJaJ0zH67
WjMO7zJQ3vzZmKx/M+6IXOS8WNAcm478NtLf9x3fWLnl0990c7IfLfj1C71a
49jleA//TqbKthZs8j7mYXLSbLI/LZh55Gp0iaQivif5YY7qeAv2MRwSdX2m
TfarFQ+rxDzuETLEP6ivv9uKrVR8zP48ALJ/rbh8K3+HMphghlbEUvVVP7Cu
pXFVq4ER2c8fWMq9qTDAion3zJ9aodHxA9t9QL8Kg8XJ/rbh9eI+NkZHZuN7
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
21wL7AY0jskx1NH/ANTD+pE=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJw1mwc41e0bx+2VvTfnHFQqJKmo57mTaCgq7V0qlUIJJUJWqISkZTSIlBmS
rOyVlXpLSINCZvb4n985z7/rva73cnXObzzP/dz39/v5inbEfusxLg4Oji5u
Dg7q////89P19pPFH60R1zrOGnVPH7x0DVosautIfg7HBQtOqNz/zw1x93gt
WVwQhXV4tDu+VF4mf/8Ez9DvXR95cg5x3VvNMT8mAYtKRnheaz5EPv8SSyTF
jnbpbUdcaofTlftTcXan+zqOnyfI9zMwunbmyGTcBcTlGPtLQzwLS6VGVVgo
XybXe40Nr8yjW19wR9zvviks0svFMmv3bVJxcCLXz8OpcfVuY0I2yFvoVpzi
swI8oHMwnNvvMLlfIZZdpRer4X4OeTM/rbr8HW45e2tPqZwHuX8xPrP82Bqv
SC/kva/+P3p5Cdb2XAeLr7uR5ynDwXWru+a3nkLevo5DWrvKMdbkrU65soE8
XwW2Ur3kPHJmN7r6UkJkQVclFt1eoJC/xok8bzXe9aq7w/mdF7r6MVVL17UG
r/iWEquU4EOevxaPK+anWLl5IBPm1RR46vABL6sNczjtyfvUYeULSqtWhexH
RdLjSUoW9Vhva1Dyxv0O5P3qscmGlTbdmt7IZH7Fa5XwBhzm/uzS8Jgved9G
3GT9OeZroTcqWnW3VK2lEYs8Vtj6Pe48ef8mrH+jVllBbzcy2XqykabxATeP
TfkcXHmIrMcHHFZ9eWRg5UVUdHxFO8OuGdd8EJ2Y1vMj6/MRN/5L3r8n3B+Z
uAn2amZ8xA0zx+aV1XuS9fqEa+9uGH/EcERFN/8bnzv1CSdGGq31FjxK1u8/
HPTixp2tj8+hNU8S+LRNP+P0++KPxK9cJev5GSd1MVaF219D77IvSi0M/oJP
m+mfT+zyJevbgq3XXSwxyHRGa2rWq+s0teA/J55xP720g6z3V3x+V7DW56RD
iPVx5VbcJoXn3871IOvfin9/lGlaciEQrRn5vULfpg13uefbOTpfJ/vRjicS
rj7qdvJBR3j3MxR3tOOB0FVLT+91IvvTjm0X3VmSdfEQeiRWMl9poh33FnPJ
r7t3nOzXN+zXe8Lm8GY31EHdPuobFotc3nKjwJfs3zcsG6i4MMn/GqJr3DZU
MenAT8tSh4Q2+5L97MAPit+lLnA4j47oTK9U/dWBU+7WLVBt3E729zuuip9v
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
IhPM/tfmGrB0X9hxlTRN/D96fDUh
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1: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
Zbs+FX14SR2a4dB10VEad6r3v61JuUv0hDR679tyyffrc4o7u8ie1gTo8CXm
9xO5j0RfSGPr2tgq/YV1VMrcleFJh6Tx27Mv7p6udURvSGPRkmteq2w+Us7z
pB4kpUkjUg8+mTzJI/pDGgOW9hZYjnxNMdWTVC2NC8syjatvfiZ6RBpnPBj4
O/5FI+Uf6Dj2krQMJqSvfVca8ovoExmsmNy4WZvWx02LmYYvg3c2Nv29eeEN
0SsyOOFW/EwQXqMiloY8vTRHBsECYj14b4h+kcG/PuFTw7rrKYXlMuKXd8pg
5sCST+O+NBM9I4OKqT87rl5uo5i7S49cXPdmW3n9YDPRNzIYt/LqJ67xd8p8
tfOeyyUyeCZnKOBMXT3ROzJoNWETf/iRJurh2g95l/tlMLBpjTZ1tZ3oH1ks
P1bZFivdQXmLPiCLEz08k5fxGokeksXao2Z/tkq/pyo3yk284iOL6UVxK3rX
xhJ9JIvdRz/cWlBdRDGrfyVMFiUFtg1v//4kekkW28s/zq9o7KL6tjAbQBZv
TLoT4/ehm+gnWYx9Ez0rvq6FOhT5UTm5QBYtlI3eLdb/QvSULJ6gXL7fU62j
uDvWTU1ul0Wepupirsovoq/k8FxL6ROD/V1UShTT0OXwq0k51Z7bTfSWHH6M
srDDZ80UszrJ7nL4zj4rKexqMdFfchhZW5IszrlFvd5HaV4NkUO1S/6P7Onj
s3pMDvNyviy/G/aX8j9YMevqSTk8ahpcP01VClh9Joe1v8/dqJwoA02HGYUl
h50fOw8dGCMFrF6Tw305Q+EuFX1UxFGlT1cb5dDJZ3rQ9oVdRL/JYc+7V257
C/5SonHEkccPf6RfHbkmBayek8eABc1KZcFykPAfzr/mJI8Cm2EJpz2kgNV3
8ug+FLfJd1wbJWqfi+WxbPW9cTKbcojek8dpt4cv18/9TD08tbH22mF5vFQa
kfvvXj/Rf/JYb7d9g9wFJZjEbPd0efRvqDli4c0BVg/K4xE53YVa12Wgiv72
65/lMdhcbOu3ST1EH8qj07PoXdcW/aRWicpTARsFl2dH7e8helEBA3cvO+fS
Kg39SYygUUCPnpZXrk+VgNWPCqij+/RA20c5OMws51wFdHVdnMZf1Uf0pAIW
F/fq2dpUUvrXOCvoe4yTe9vfLjz/iehLBWx2STEtUOmnbqQwPwr4/Zz42gca
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
T3/Y
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
q73LNqiaYr5tboJFD7dtsd+QTf0PXfldWg==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1: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
nenIaAJUy3pSBfI5VF/I4o1nem3tRikkcs7q7TePyaK3Y02N5/dsqjdkUe52
3Ym+2WVkxDyZ1zefy6KZ4+h3J8IrqP6QxdUhAi9NiWLCVs/NYln0e1e80/N3
KtUjsrglpesEf2EU8V7k7HpLVg5bL4cXxMakUH0ihw/DNz/yXlFE6n3Zhi+H
M4uCXJ7aVFO9Iof9o+Wc7SOryK5la+Jveclh0rJvj9tsf1D9Iodjk6zibT98
JEor5SRv+8uhj3/wwey2J1TPyKH75b6CvQu+EHZ3mZGLp06taXHnlVN9I4cR
28vvz2X8veXaEYG3s+Vwt3XoMemeCqp35HCz3P6eEsgjb9Z/+3i7Rw5bLjbW
vJj6meofedQNco+M9i0gE8UfkMfCJRtu6TN6k9ND8lgpmpDU8aCRFG5RmBAx
WR4PKShXv/duoPpIHosWK3c80ysi7OpHbJNH52UdwxozX1C9JI+hg1zbCj0T
SfdO9gDI41HZnlmvWX8r1k/y6KE4xtNzQSM5tidP9U6qPFqnmEztbGqhekoe
Z81ZmfFfSSMx3L9h6p0WeeTpm98Y3F1O9ZUChnw2vbUloohEHmAbugJGTlos
M29mFdVbCvhyw8jElwEthF2dO2MUcLvTdM+Dye1UfymgGtkkgBm/Sdphon13
DfN3kPTq+0bfqR5TwM3FPxcPUr1PvIO+z7p7XgExx1lPeXgk1WcKqLWnc4hV
fAGpP84qLAWUMlHUmPrzN9VrCihQTNyw7Wkr2XVSpeBujQJW+44xeLa3ieo3
BXzz5oxDgE8pEY8jDUVcUD3v8ssvOVTPKeIX/7OhtwJLyOVzOP+eiyLeXXSu
c8zNBqrvFHG5/xXHqwWNRNw+fRVxwttjNy86NlC9p4h/vF/r6Z0tJW8ubvl5
77girj0hqSGqeU/1nyKOuPZs68TkR8STPe7RzOffnVLWHp5F9SDztxEkvO0o
J0XMt9//oYhD+oZfGfiinupDRbQ5MHWXsm4D8ROXpxKeWSUz/4xvGdWLSlgd
FRbY8jeF9NxkBY0SxmoPKL634SnVj0oY+T30r0R7JjnOLuccJSwqerNkwIUK
qieVsCb8S9rqKfXE6J7GKmaPcV/Irdk719ZRfamEugrvSv5TqCAPItl/lHB9
9f29Kw59p3pTCaPXC4cd3PidjHzk/isyRwlPXxr4ZDyvkupPJdww0mOD5NJf
5LNY3inh5mkf84Yx9cbpUWUsDuzd43momswTF7QyNn5uK7R78H99qoyF7vzW
MSkvSEO0FvMJZby6/rry6BlfqV5VRp7nQrW0NTVkd8zD1gfblfFCu+XTso8d
VL8qY2L5jO/WK3qIsrhBM9/XvjlDR76b6llltG32O7EzroNceVu69eEnZVQy
bSooWNNG9a0ypimbiyw8WolV/C7mF5QxsvB9psnPFqp3VfByus9mr3UNJDaR
FRwqOKjTd+GRi4VU/6qghwOulDsdTzw/PB7xyF0FP32cG3Tuynuqh1VQa+TZ
jm6fH6QoefyeR2tVEEfP9W59+YvqYxU8GHF41w3NNuL3qZy5IhU0Huzx4rh+
G9XLKhirENmUktpAej7v6X8Ur4L/2uMWjl9dSvWzCp5xVJN7eO07Of5Fd/Tj
WhXcJnQ5dDDhB9XTKhh2Pk1Wi6kno6ynAcyWoW1DxJotT0uovlbFN7DH90RP
JnmQM5G5A1XM3uix7uqnZ1Rvq6Jzv+1VpdRQMjKvUvbJElV0+2IvGHQzmepv
VQxpEkybPaeQfP6+b9yTYFUcaB3k+PVwKdXjqvjxgaz07IoiMq9IP+jJC1UM
95tgHXToM9Xnqpisqm61cnoSafjxjLljVVy+tOibl28m1euqOO9sT+f2HYVk
d+kklafyavh83rhfvxv+zyPVcElxbeGtnhKiLBbsahjesvxWW1ge1fNqONnb
Z/Q7Zh5dqfI/9XSuGpqvaAvy+ZJI9b0adiuPHpH4OJ2wavVpgBq62vyY4vIi
n+p9NTQzkLk0t6SQxNazBaqGJeenjulamUv1vxrypyyf7xGWQjx/T5kZ9U0N
Tyh3t0ncTaR+QA0LXC9Y5t/KJEVNteej/qmhimrTjuIFP6g/UEe9pfb/eZFy
4iduuOpYeCTec9SuIuoX1PGB+ei6OrcvhFWTz6aq4+bAfZtaGP3M+Qd1rNv0
hKQtzSXH/7z0frZDHd9MWjpI71EF9RPquP99wZZ/U6uJEScg0LRyIX+Ddwn1
F+rYKPnsfPivz+RBbz2zA+q4znpAihTv/35DHT2CKtyuDigkHD5Rx2fRm9UN
B/+i/kMDMyok7lftbyXV4uXVQEx6N6Qqu4n6EQ30yHB1URlcRYaIBYMGOp5I
F63SyKb+RAPVsvf/dJ+ZQ7Yx3XCukwZWy+41vPCtlvoVDQxJOXLAc0M7iQvs
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
3n9rTkWtyib/A9S9/ng=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1:eJw1mwVUVVsXheluuHDpGyKCoIhioOy17EafgQjYWGBgYSMqFqJiASp2ooId
iIoKgk0jLdIl3fmfc8/+HW+MNxhcTuxYa85v7itcvnHOShkpKakKWSkp9v//
/zehZGxcZs9PIjNF+qfAPwCUGtyOmxpU0p/PQWyXrTFf0Exka/YPHfLhCgyL
zV16q6iZ/v4W6J5OnvrbtprIXBwrZXUtAr5u0ar6dDSLfj4KNLbdLr2axlzf
fNkzk/on4NXX7+n09EL6988hUqu//+nuWiKz6XpZP61X4PTkvip/VTO9XjRs
fv/U1e5hC5GN+2toa/cWrqvMEKwPqKXXfw+eahPjAuQLyAGV03eM7n0AzSsl
TdlZWfR+H8FP7mqUwKCKHGA+bTYyDt6/nVgfw1yPu388mFn1lHlWdJADHinZ
oi+fQWpTedKe1Gb6PInwVGfYemmzUnLg0Kam/q5fIPbc6H2XC+Pp832F8XGx
Pr2myeRglLb6wIpv4FnsKv3Nppo+7w+wcBREyP1oJwd/P+k/eMdPWBpS61v6
voc+/y/4Nap2hfG9VjKOuZqhXDJkyfmFdyeU0/dJhopjOSF7UtLJJ72Oh8Yz
UuBwTMtKf5tS+n4pMHvZnZq9Hu1knNXXaNNzqaA6qeTq5xu99H3TYEawY5TR
2C7yyelCgnleGvh1+ypbD6ql758OZoUNTRVf08i4OWvThP0yoDjV+d8BuTQ6
HhkgE4Oy07COfFo1qlC8LhOMe+dF9A7qoePzG4w0bmtXTpKCcbuV/1k8/w0Z
nYs2rvBrp+OVBaMjTBVSt1aRT6eyOyy7syB1cLhf9JscOn7ZQHRSU+2vlpHx
tyIUrCfkwG/1c/U7n7bT8cwB02EnZ5lLS0Pc6526NkG5kPLSz71PqY+Obx7E
vk34GrW+gYz/OVUwKD0PFtqPatoYlErHOx+sfS73VMQmE8nHTQpgSOOqLaOr
6un4F0BcnJ6N6eU+Mr61cpS95x/obj3qtCJBBrj5KASp6X+Ga8h0k+Xyi8RG
LoWw5UR456jkWjo/haDxqX+uQ2g2uaH52cq4sxAMpviqPRr4m87XXzA9tpdX
dr6GFLG3v/IXUiwHnwux76Dz9xeetgW/OyGWAlG/88NNxxXB/RK1dQ9W99D5
LAKz2uW/1o2uJcsH9YwxKyuCleHtptZzUuj8FsNDP+W7flMyyY2RK8ebBxbD
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
HbQ=
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.005812986889120279}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=2.6(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.005812986889120279}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) L\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) L\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJw1mwdYje8bx1va8zROuzNkhbLn73lulQZSRCWkYSQrRWYoGWWFooSGRGnQ
HqSSlmhRaSjtgaaGkv95z3n+Ltfl6uqc877v89zPfX+/n+/BdDyyeY8AHx9f
lyAfH/Xv//80HRzSklykggVM+D8yLvjgM4as15/7lpCfA3BBAd1ZqFIfC/7w
WrQg5zHWKVmgAI/Xkt9H4mWuz1NPOAIWeLCGb3ZYNF7un3he7e4C8vp4vFBM
+8R9T1UsoOWQpN7/CrdJ2uu5XtQi70/Gu9v3JKhnLMICR8M7psumYel7Obls
tj75vAwsqu7p4aC/Dgu++64yT+81Dg9ROjOjzJR8fjbevrO/KX73GuwtfjtK
9XkO9oq9kHm9SI9cLxf3250vcNOehb05r9Zc/g4XZfu/eduznFw/H3s4akaE
2Zlg7x0VX1lF7/HuGcXWWccsyP0U4p1f97YusrDA3peODs2wKcLlxh9n2bau
JfdXjKfa20xmlCzDF+PlpHS6SnDtzM0+9vkscr+leLOLf2fzNRa+WPNqhu7J
jzjySfRz2WfLyP1/wifO/VmjtdoQ63M+TUWoHO9ZRI/tmDIhz1OOaRFLzNur
DXCewnis2oYKnH1uMKqzfgV5vgqc7kXrclujg/VnF2doBFTiDw+/JTRYsMnz
VuG2j5qBe1QX47z/ggu0Gqpwed7x1W5q+uT5P2NNUbGZ2QXGWH/z/irm9C/Y
6+qLNXMPGJH1+IKjRE4WPyrEOG/vimb2wWo8EVkjZjkyn6xPDW7dV5H87ZM6
1j8j9lM7uQZn146FtG3WIetVi012LpHwKUM479bX8ZmTtXh1ypYvl32MyPp9
xbeH7U8sX2CEDSKjhecY1uGYPvvSUAkg61mHq2VkPxq56OJ36afk516vx5ue
TuTEDbPJ+jbg4CZROakli7DBR1PG/M8NuPRgZWxw1Bqy3o04Ey5ubTBej7kv
V/+Gz7lENm6av4ms/zdMk3kmzM/egA1Gulcs3N2EP6AlZ9gxmOxHM55RG+lV
HqeNHaftZKtaNeOEhDv3awWmk/1pxr/3PWQab1qNI2Tez1b704yVso+tPjhm
SvbrO5b8vaUsYcQMt1CXf/wdn/67QrVJ24Ts33ecufLJsY/P/sOs6YFLNfRb
8MtnooP7t88h+9mCv174I3HEQQs7zv+7WrOjBdv6ZBqkGy8k+9uKR2sv9/zd
p48jlu8x0PJrxfemHlyKn7uO7HcrBsvd03xsTHCLPrVAbfiS0BZ60CNE9r8N
N2NDmdKCmZhltsSCWdmG/3wzP6bUwSb10I73vvvmntW7HDtaP7JiebTjdXME
58uI/P+8tGO2x4UDjdamOMKBWqAOXC5tuUnLR5/USwcevn1DylNsCW45cMhp
enYHblpjG9/pyyD104nnqCyPHc9TxyyPL/u1HTvxjoBakfyKBaSeOnGM9WL3
/r0YO174z3WGcBeOv+bud2qpAamvLhwutnGymW8NjvB76jEzpgubK9y7uVh5
Eam3LlwyWSeUu1cTtwRIec7a2I3z3yZUrtmmTOqvG28ey9//U3I+Zocevzh7
sBs7bpLIbc9cQeqxB2/z9oc1ZYCdoht959zrwf3HZ9KvMxCpzx7sqT3D5ueh
RfhJ0lp/nZW92Daz7kODOpvUay/2+X3OZm07Dbe+ibs391svvuBsWNF6XJXU
7w+st7XQcc8iHcwuUnw0z/sHPvz9uqbNgsWknn/g91k3JI4uWIKdKj2fzJ/x
E0+Enzt/uGAuqe+fOFLqR6zyGlX8pKE9WrfkJ3ZI1VrOLy9A6v0Xdr7gWLCi
Tha3dpi91Dv8C5sHq+vW0WeQ+v+FZRa9V0tUXYDZAympC2h9ONFO7Mnl1wvI
eejDY7TgLU7s2dhpQuPNwtQ+fL+Vb0ewnSo5H/14bzrz25FmSVwpQF2xH8ec
zTcS+CFPzks/Vtwxc0WkKQsPiozuVj3P+f3HiVq9mtnk/PRjs29P/U1GZ2Ma
ZzVVK/rxSYtA1OzFIuepH7dZeu5cz1DCC2m7DqixB/DAhU++07fyk/M1gM++
VGDI3+bDm+l3f6kdH8Ai4V9nV22hkfM2gOfonF3nwKkvN/XCo+qFA9jL02T/
wgEtcv4GsPbF0jcLSpXwHebEsLrKIN6zeovjg5NC5DwO4viQZsOAR20okbPa
GgcGsfpMvhutX34h3vkcxC0XL0W3gTiu1KFWaBBvPrB8trsmnZzXQbzRqGyB
46A6HtS7f05TZgjrfJfOaPOnk/M7hAetgzSf/5LEtKUf+LUchnDX/ZVrmddG
Ee88D+ElDlUKZSKdaOGqfz5aSUP4sVnH3k3B44h3vofwg9IbIj6/xPBmWCTK
mDaMrb/urjsZRiPnfRg3tdwTvlolh93W7rvGsB7GXk8emn65KkbO/zBO+902
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
5woGWQj1i7z6RbcF8fyJLDSPxszcyx5AHpxuuG2ZLOxPTWjzEBxFPL8iC8cl
NNtnjA6hbJ8RWt16WYgd3xHS9Lmd+BdZWGtXrFWs/BkJX363yNZeFt5nm5g9
SvqCeH5GFj45926/Ld6FNl7x31J3TBaCYv678mvrEOL5G1kYufJuZ2LNKLp3
dedxW19ZyJHerN8wPIJ4fkcWli1v4XMN6kPffKkJIQvikz4FwxeaEc//yMJB
vU/OWXc/oBncDZCFGSyfvTbTPyOeH5KFm+Yl6t9N2tDh6/k1dQWc5z/g/nTK
9xfxR7Kw/deAuqtqP0q9cXvMtl4WbpQ+V/3t3E38kixYj6UMhnY1oKmbdir1
fbJgb+gWSt9Vgnj+SRaajuxPdR7/gIw43XS7kBxUa95Ts9zRiHh+Sg6KLd/o
aazrQDepj1eWgwW0Vr6Fgp2I56/kIFldT3bR1WZUfYdqWHJw6qmK0syWj4jn
t+Tgk+TfDKvDr5AmZX/WyIGIZf+6eK88xPNfciCla9Xus6IW7Q3c9Wa7lRw4
Mt+qL4r/TvyYHDB9M69elW5B8ZxuW+8iB7HvXKcuDjcRf8Z5/fGYuW+tK9HI
/fGp7eflwPiyndHo/neI59fkQAU3hbqnFyJEyf27cjB754iebkIV4vk3OSh1
UjeU9PqKLnMHvBysXYeuHxipRTw/JwfK6nLWgyNV6FOIvUPDaznIa3uyrSo1
H/H8nRzs2DpLbtGsaKTE6cY7KuTgZXH41zk/nyOe35ODD5vtQlwb8pAdJW/b
OevrYPqhJbqC+D852HijPWeh3RcUFVr4bscfOVhyJe4Qf90X4gdp4OlwbUNm
bSX6FRbQ1iBNA/tLaS6v2/IRzx/SOPP9UNMqmQS0lCuIabAj7veWgPZniOcX
afDDdLhkhfRbdI6Sc8to8DBCtezV4Q+I5x9pIJZ/0brTowIVRE4Y7dxAAxeD
7C8RsaWI5ydpcElwtMrHNQdJRxXta7SnQYNCJf3Z/WjCY2lQzZhkNtAfI6tn
gZwTQIPQOYGacxqTiN+kQcs8g/eKn/PRY0q++NKAfrPv5dF15cR/0mDMKMth
1X+VqCOaMpCc178ycwnr/oh4fpQGv3bNeuB59h2az20wNDg857iJ5tdXiOdP
Ofd3fd72AEYY8uAMZ7tCGihoz5s/xn6JeH6VBtLWD8+fC8pB2dS4rqdBZ8zK
0pumRYjnX2nQN/vR3A7/EiSc4GRm10+Dg1n/WiS63yGen6XBzjlNC0P2JaKN
nG7/TUgeEpS+7WP9CSL+Vh7SF660pJeEoXuv/nJOmDwM8OvceDqZTvyuPAR6
egq+WPEefaPG0zx5+I7r4wwWlSKe/5WHatbldewlpWhG8v1yO315KMy6MUvo
Wh7i+WF5TvN0z2z9FYcOp+we+GYlD/Hau4VanoUjnj+WB9TZ9nBpWjJK5UyD
XQfkoVx2+ehY7XvE88vycPJDc11w9yc0RbXj8/IQY3/v0SqTUsK35WG+6ZK5
+1a9Q0YZHyx3BchDrJOem/nfBOKn5SGCtbK9OvkuuskVsPJw51HKx+9O0cRf
y8MPS5Gjc+/louqsPZwTLA9v1JSS580oRTy/LQ8rJqyUn78sR5qcadFUIQ/T
ozb6yhYWE34uD2cDGTR91ddob/a/6l0d8tCLxPdu1YhGPD8uD6a9NjN9HBNR
/NvS0aY/8tB/90PwzL/vEc+fK8C5gErXo51ViJoW9jIKsFr+we+C0Vri1xVg
ePm5HHzoC+IZPgWwGG4+PDuvmPh3BbBp2ywZapiEuO1/uQIMtk8sm2MdTfy8
AjzuCVFq25qLPuXzcSSEAsgFTbz2yK1APH+vAB1hwt/EBeoQt105KMA7qYxL
BXu/IZ7fV4Cm+pMl1/99RVQ3bz6uANci/30fulGKeP5fAaq3Si2UDkxF3OPl
p8Dxd3tVToclIB4P4Pwct9/SYSgf/SqmCkIBTpwJSt/6/AvhAwpwIfjr3I9W
DYhbDkkKUPi9/9Oi0BrCCxTgc9+/gyMVxehc6Sf8vVABbuWzz+6uTyL8QAHu
Gazcd+xuNOLefoMCLD2xr/V0fS7hCQognOVU9IVdgaTLnL2+9ytAr3vXlRUx
NSSPUABvkezwfa3ViIcHFKF+no5639WPiCcXFKF3robO17A36HEFNbAVQYwW
WPTGKp3kF4pgct7E1+9iMeqopASnIsy3iE5zulxNeIQiyF6TfeDeU4+obtii
rwinu9GYR38d4ROKcDslu3fhxnLEtcPWnOtdz99rV5BOeIUiOG5IfuidGIuy
q5catRxQhM2WOaESye8Iv1AEo/V85riMM/9rBfc5XlCEJVc/nDmm1Uh4hiKU
KDbJjtMb0cav5VdaAhRBhPZPQnNGJeLxDUWIeBN2Uc7qDeLav2jO728NmLl0
vCK8QxHKdmyhud8pRJzhxVHoiiCezW/mU1pD+IciFK2NpGkEfkOc5tzjWKkI
W2w2qGgP1BMewnn+fV6qISnliNN8OBJVEf5UPD7Q4JFJ+IgieAju9Jgj9Qrx
8LwiFIhdvSp1vIDwEiVoWXdLkv69GlHdpFVGCQQ8V+X6vq8n+Y4STAgckl4c
X4OMuEBDCZw35iRJVxYTnqIEGusQS8klBd1sXc75qwQWAQEaCRMZhK8oAWvF
2VMifp8QV96bKcHptaMJKon1hLcoQWrCRZM8/hakyd1gJUiKnjydeKiF8Bcl
8NxjV7lDsxFRp93JQwniv/7p83hWSXiMEizZvafA2SYXxXcdlGvzU4KMc+Nb
1zgnEz6jBL9LNo8578pDXDkbqgR8cjVXn0mWE16jBNVPNu8ZTapCqFeYI+mV
4IW79YqHipWE3yjB/IiM2Ftni9HlH1Xuu4uUwOcIY1tQSxrhOUpAr3J4lm0V
jajT2NbAeR5fmsn6Q28I31GCqM1DT+XOlyGlvkOcDq0Ex6oPRBQv/UJ4jxKs
X2HAnPz4Bdn1r+QsER1O64iX6nmUEf5Dh3yf5lyGdQ6KGqAEJR3C2k8+3VYW
R3gQHQa2p9ZYOCehX4OUoaKDemnA+eXh7wgfosMNidPTFgqUIuq07DGgQ4bB
KzkWx3/weBEdFHYd37btbiE69/vwtnZrOiRvPzZ80iad8CM6TN0OMFmWGY4K
RlZxtowOL59/Lr2UFEV4Eh0GWz4lv76Thbhy8gIdgs6Lr3apKiR8iXO983Z/
4498QFbjXzgTgA4n03H8r9z3hDfRof7w/LVhHSmIK3+i6TDfZo+QW+Ujwp/o
YPa8f3r42gjUMXHk755sOlQZsIvfZ6YRHkUHoX0eDiGj7xF3XFfS4XG+YF7J
RAnhU3TYaTkeaj/+HnlMiXEmBh0qQzq1MxelEl5FB+k754s2PXyIuONlgg4f
1i1+9uHVI8KvlOFAtXDilshkRFXbXlllCN95j/9uYB7hWcqQqFtNe/mjAHHb
4XRlsE+rOGV4N5/wLWV47MB+NLM3Dd0TpEpaGQ72026XpYUS3qUMjY4uzYXH
/BH3+JopQ9mUMWMLjiX8Sxl8ahcMNt94i2ZwG5AyHO16Uib7pJDwMGW4Fbpl
y8zNJYhbbh7KsObX4MX1Y3mEjymDfEEdvT8lBaWKUhOJc7/y/TeiPcIIL+Pc
74UB/XkXIhF3eUKVYfoMlex233TCz5SB/+mZ8jXtnPkvIXllX7IyiC3SfGG7
upDwNGX4E5cdFdeXi7j4rEgZ7CzqVf5IvCJ8TRk0H13MytYKRtRu7WtUhiij
4vuCSyMJb1OGuSd/WF4ZTkOaMpQjVgbBTyuFdCTzCH9TBu2u+bZPY96hvRxr
5CysAjXOD9tjPmYQHqcCEcbz5a5sDkdcXKSqAtXZzNcr1l8kfI7z+r1/QtP/
hiPK3TnrqoCd0v1ZWiKZhNepgIHm2eSfzu8RtZpdBirQ+e+ppJd5MeF3KtDi
OkXXWpuPLiseu+FsowKTu95HfA/MJDxPBWJq/NvDXsQgLh45qAKxfOeOvLoY
QfieCvCz+jreMV4hJWVqQqqAQnxD7832N4T3qcCKHlqolP07RLmvrkAVuDFd
xttGJZvwPxWoYJ+725AXi56pUoBNBTLsd4m9jLpBeKAKlLZ82tpTfg/1UTgg
WwUK/mvXf3wukfBBFSh7QBv/HJyNlmlQE1UFTm0aDSkJzSW8UAWM/677ku+W
i85zN0AFopPvxNcNpRF+qAIHHzWbuYhHoUKOO9o/qQI3C5pmX60NIDxRFfKS
6vIzsiKQDOduumVVoadphblFQiLhi6rw2k27c82D18ia21BUIXxyyT7pH28I
b1QF2WVHn6dfykShbIo4qMK5gsCTRsfiCX9UhVEBfeYc+2DUyWmGLhtVQVda
NtcJBxMeqQoutCz5oy0JSJc7IFWhzJVhYdb8mvBJVbj90KJnplMuOjGTmtiq
kDn98Yz90TmEV6pC+zk5l6j8VPR21olTPddUYaXG+sLT1U8Iv1SF1TFedyZj
7iMRruBTBYs5Ko7lgc8Jz+T8rLlnVndkBjLXkcvqSVYFxbv6M0PH8wjfVAW3
jOEM2858dJ+yp8Wq0L8uTINxLpfwTlUwtpzf8f57EmqaRxkYVbB9H/jQuCGM
8E/O+pQ/n6H79SGayf16iyr8gCrxrRovCQ9VhTe57t9eirxBR/TWckaYGqhu
XPMza1Uu4aNqYCWaf0R3YRZKo+S/mhokxNpmVKnHEl6qBqFVsyI89gWgfwsp
IKYG5jvHNrlYhxF+qgY+tHvL13ekImNKrhqqwfsnXTUiEu8JT1WDn7OzGTWf
S9GtJadye23UwGueFz3MoYTwVTW4YiJztW9GLqqh5NUhNZj1c91RaYtXhLeq
waHswrbgnFCktVxe8IeXGjht04rwbYki/FUNDF29Lt0PzkT7KDlwTw0iF2Qc
T9xQQHisGqw77Hi+WaYYJaykFlQNZgRJdCxszCN8Vg3i0fmM0w+T0Cg1vt5y
nm+x1KnD0mGE16pBts3xj1L0SIT/M+aMeM772yr3Gq1PJfxWDfYW63oG5uai
K9wGwXm9U2qXeH8u4blqcK/vumxJUSoq46jnH5Oc36tl2bafeEL4rjqs65BK
rA68jehUe5BTh7iE5gHB8qeE96qD6pnAtkPVaWgXd+CpQ9+nrkal5XmE/6pD
0aetnw8J5aFnVDmvVAff88/CTyumEB6sDvjZHcEgpTDUZ6i4/udGdXDOHUIC
6YGED6vD49W7l6Rox6FlXAGnDmJ6PjtPQg7hxeqgbiz2Lux7ATpvnHD95wl1
WPxjLHvV4HvCj9UhKecH/fyRbFRIvfy6OhjXOMRe/x5LeLI6XP1kquxq9ATJ
cA2JOlzfdAxGul8SvqwOr0OeS9i7vUHW6ykFpA6esgp3LlXmEd6sDoFv1a4w
fXJQKEd9/ipWB+FNb5WKTyUR/qwOz0bxmqSSENRJ4dRv6jA2s3bSq+s24dHq
oPvbkU9DPAbpmntu+jWoDv1LhjTmB6UTPq0O8pb5Vzunv0EnLCjFpAHJXl8f
Do+lEV6tAe3REvWeqS/R200UMNKA7y+3+HnlhBF+rQHp4fpf6jl+XoQLfDVg
Q8ISc8b9Z4Rna8AKaSM3pY3JyHzLq8+/DDXAJWJqcn9/MuHbGpB/p/pK+q2X
6P5WSmFpgCo7Rep++2PCuzXAOiLZzorvImqyohZIA9rcrbNCF/oR/q0B2z20
qjf0haGZNsrLjnhrwJnYub+118cTHq4B/qEmFvnhL9ERjnrru6cB2cGjVmff
PCN8XAO2XNsyOTM9GKXZUgdeA664vvqZ8+Iu4eUaIL0r66NtXBj6t/18cN9b
DSgXmeSvc4oj/FwDYsvvGtdFJyHjnRs4klUDIiTVT3ZcTCI8XQOui3Ta8HvH
oFvcAaYBbuNxXTpeDwhf1wCWkulnprkfqtlFKTgN0G24cFqQfZfwdk34HfWx
pvLJE8TDXZowt+V579UDMYS/a4JpYu6xhpAotI8ryDRBu/Dw62SXB4THa0K2
395PPjt8EBfPrNQErdthoYuNz5Dv22iC1MP3p58fDUAUjXU114TFxo+Xdjx6
Qni9JvQwtuTRj8QgLk5w0gSnr6ZBYxujCb/XhPGJxQmLJh4hjvjJcT2pCU25
/qt+2PkSnq8Jv6pO98KOW4hrf69rQuvxGxHBQmGE72tCZFNpleeyWETnGmZN
cNz0svN1/0vC+zVhYkGUsVteAuLatRTO/WW5Bm7uiyT8XxP2fy6yvfn6DqLU
ydESTejQcd6+44UvyQM0wd3PZOLuJGf+U/bimybc/E87JyQjnOQDmqDvct9z
7u9wxCkejqLUhI87cuoadR6SvEATJF+r/mbpX0e8+FYL9qu4XpOZ5U7yAy3I
ufTOrVHsBKJo5lF1LbCyCYj2771B8gQt8JR03a19Pxhx5ZueFty68d+EQkAo
yRe0gOlmUBIQEIKsj1EKVAukzS4uvGt/m+QNWtCQdcm3ydMTceXGNi1Q9D52
pszaleQPWmBrz5Jb/sITdXpQB1gLrj6S/m/N6hskj9ACd/7ukEsz7yDuePTW
goi80Ec5JjdJPsH5vGuiTLezXoia7m73tWDRwn/55zScSV6hBXOOfkpeIeOI
uO38hRY8q+Obo3LqFMkvtODLrWG9iElfJHLW56Nbjha4hOxZUmhxh+QZnOct
w2YZa+4ibvv5rAWyYtfHajJvknxDC7zzalRlPnshiga6d2tBbZXr4nmTB0je
wXn+IeMTsil2iPf1MS3wv6wi7fjlMMk/GNBp7+b878tZFMCNlxngbfrFW1Xr
EslDGGAk9sjreNlltDw3jzMxGXCZNi+0arM3yUcYsL4m6bBs/zHUsIYCqgyI
XMbcVyDrRPISBizqcJl2uscCXeAKbgb4aHd4gKMDyU8Y0PBVb53CnqNoOndD
GMAMO/PUne1B8hQG4FkZ8vVz3FDRux0cS8cA5+yVcksUdpN8hQFlnWsbO/KN
0EHDd+KZRgx4u93T97GzNslbGDCp2ddJ09mEZKm4wYIB053XJ3yx2kPyFwYc
z+plv/c6gpIpObKdAZ/v3ZjXMXCU5DEM0Lm8rKnR7wCy4RpUBiw+Pexkfd2O
5DMM8KxbLxWYpo8mjagGxoANZtYrdinrkbyGATc1Yu0vd1qgMAqvn2IAXclm
/vSFu0l+w4BHi4+rMysPI0Nq/PowoPhwms+p20dJnsOAIlqPb1fWYdRV5O95
+iYDWlK+2rdf3E3yHQZopyWsU40wR9dNR29kBjFgR/Bz1ahjs0new4CAAZqg
5CUjpMcFOgz45RcrlBrvQPIfBojTHtrbLjmCPlPjJo4Bal8HDaJOuJM8iAGh
aaHl1dbH0EmO2jydxoCCkdH0D/0uJB9igJixtccvflukvuF2WWYuZ30jygy0
F5mSvIgBv+Xvv3mfY4tyKHz6gQHZl39tu7PzCMmPGKBqRDeQnHkS7abaazUD
SjUZEsZBJ0mexACTF4nT2t2OIlEuAOXUV9ChydylO0i+xADLH6isSnslit1I
CWQG6BavfXjBciPJmxig5WlPv+zqjCy4X19mwGvz24dio4+T/IkBd54PzAs9
dRoNc7/eyICJMxpLtDRPkTyKCfcNjzw0rXRDQeV2HAXFBJcrY68P6zqRfIoJ
JqnZHyefOaHVm95vzpJngpRbkaXi1uMkr2KCX3icSqftRdRM4TENJnyiO/ce
3OFH8ism3DmyrUJP9Sry4RpKJuj/muXiEXye5FlM0Hb1SbN33Y9mcRsOE2aZ
flslsMOG5FtMiCp/Tk/rc0WllrsCslYzoWrbyTwdN2+SdzFBPpnPse7dDeRK
4SAjJnhWP/8Zf/0Wyb+YAH9GxCc451uBo2ZXbWLCyjcWs5xqTpI8jAm1/SFb
uisPoPQv1A0xQcFfteBsnwfJx5iwYXas4gfRK2gHF8AwgRFmctlK+A7Jy5hw
YF7ezL9JdxEfd0AzwabmkUC17E2SnzGhjN9pQ/aiCyjSmjpgTNi0M8GtvXsv
ydOY8MNg+9mnWw8jE47aPevDhLPKhy4L/PQm+RoT3J3UunfPvo1+2Nylv77J
BGyzQMx06h7J25gQf8lOfCL9NvKn7H4QE36a1UR+MvQi+RsTBN5I8YW3uKDF
XGDJ5Pir7Q9OC50keRwTDrNpysK3bqDaOkrQMkFWN0VJMPM+yeeYcNEz3sJ4
fRA6y1HDr9OYYJc+rC314zbJ65gQ1h1Erwz3RgzK3uYy4Vus2fqPZa4kv2NC
l2mdgGmxG8qn2lspE7pPmvS96vIheR4TplZn7DcZuI2cG+39zlYzQfpF2gux
tQEk3+PU1/Xz1hcMbiNJLuBnguSHjZ0jWT4k72OCc1Tvm7UWruglZed6mFDR
9Xk4uvgwyf+Y8DjCZZLmfxFtocrnNxPq3PLL9pzyJ3kgE4zy1zd6KN9FY5zT
e/YfE95v/95S7XWN5IMseG5qKiRSfho9pB5XjAW3/0wKPZxxgOSFLHBZe8n3
kuY5BJR9kWfBmVNrWl7l3SL5IQuCs5YFF7oHoTYHirCxoP1fTXfMpSCSJ7JA
bmH3pMD+AHSVC0xYcPxIyyu7oiskX2RB4jfVarOp42gud6CyAE4mLB1LPkny
RhYMLDotdHy2Lyqn5PpqFngvdSkTXXyX5I8s2M6+aRQTFICO7S5C/xmzICtl
tvb+CF+SR7Igalt+2lCzO1LmqG3PTSz4aPFg/yfWAZJPsmD62NxJ+aU+6DUV
P21nwWW3+//JqQSSvJIFa6a2v7jR8gDZcwEjC+x7MnxL+e6T/JIFSXYvDjXV
+SMhrgBlQclKKBZZ7E3yTBYY7ddoF7juip53UgOABTLDrZFSNDeSb7Lggcf0
J1f9vdAGKm7xYQFy0Sj89dyX5J0smLY/+5+u0jXUT8mxm5zr21oParRdIvkn
C/hWPt6Q4euBAjjV+V8wCwTmFf9ddMmO5KEsGH/suVx+0hEt5wJ5FpRmBxma
6Zwh+SgLKnfeUoEzvqiBihfiOM/7NPvPvO03SV7KgoC5ih8/pvmiC5T8SGOB
+saOJItBT5Kfcq4/s1zwS8tBNP0gRTBZoHhnVaPkI1eSp7LAX1J6acHsC6iI
Uz3nSlnw/pTdt8GIyyRfZUH3pVl+k1cvo4MUTq9mQcspF8UZrWdI3soCz8A5
11hL9yFZboDFqccw+1l/Z2wl+SsLxlIKbVjSLij5MAU4WHAqJcrngt95ksey
IG2Jz8SstsvIpu8ex2GxIMM+rvVP11WSz7IguvwUv96gN5qk8PE/zn6ayeD0
L+4kr2WDQ5OWo9YTRxTW7+QxJcaG0DXv+dTdD5P8lg1NHeVOp4LOIcOjFHFl
Q7FgyKyz8d4kz2VDdCJ9xZNYL9Q1QL2BDbMeXZ8aO+tB8l02FLzy6p7vuQdd
5wJBNuysWqOtdG4LyXvZ0GHfEhx7ZSfS4wpGNpw5+MzB+4QryX/ZULfhguEB
7TPoszt1ANjwi766mJ5zhuTBbBCwOjIk+8IDnRwu4ThCNrg2sFQyxPaTfJgN
BpfSJze82YrUKTy4iQ1Z8ti1vteC5MWc6y3QSspKsUc5v6mGzgb33c6LdFUP
kfyYDT0r5T5EdB9Fu7kAnQ0s7Og6rniY5MlsuB78oPswnwMS5RosNtAUz/kX
bzYm+TIbZqyqWmrAZ4xiKRx2mg0bN/Wm/1tnT/JmNogbZeckHjmALKjx7sOG
57CqbvyeK8mf2VARP2u5Qs1BNHwyaD2+xYYL0WdN3ZgOJI9mg2NMl6hYmAUK
osZRMBtqLRR+5OisJ/k0G+hJI2L+ZjZoNTdwYsO5iBfzX91zJHk1G+68bBrU
WOuImqn2GceGyZORY7ZC20h+zQYb38T3LnGGyOcMRbTZ0GgZ/mCjpDbJs9mw
w+yl9E7ZJWgWddzz2JA6NyfqS605ybfZ0LJ0q+WrFFtUSuGOUjbM7dw4KvXC
juTdbEgU9B3Z322LXKnyrGZDnGiD37Otm0j+zXl/q5lIsu4apMANaNmAL67x
N7daTPJwNjD0b6+bfx2jdGo5eznrMTnqpOK8geTjbFi8VFr4j+VmtIOy97/Z
ELssIrR+nznJyznPHz5HUsxMH/H+t/l0yLy7wtlRRBv9D9HDOVY=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 1]], 
            LineBox[CompressedData["
1:eJw1mwc4lt8bx+2Vvbd3mGmIQuKc24hk/Ep2WnYZlRbKpiKFjJKEkijSVBra
lKRCKaK0iIoQMur/Pu97/l1dV5frHc/znHOf+/5+P1/RfTe7BPBwcXH18XJx
Uf/+/4+dFdP0S8ewBc8y7me0+GT8z2PL/QSQRJyfc/CgPE3q6R4VxPs9wWjB
3RN47Nn121rcGuT1Uvzp2Pm188fkEc8xSy694grccrRLa/qVIHn/efzU+/v7
tJkhCx6NDZdVhy7iNWkzQd9lRsn1ruBCG4eVD7SFEc/Wkq+aktdwbZiC5JKc
/39fLe5LuGX3rUoD8T7oUZprcAuL/7tb6zGkRr6/Do+p5T63EJFBiSJZZcrl
d3FgRed232YuxLnePSxAl7y1J+WPRSLr3eqmD/CZ2UMO/9TFyP0/xOZ0ua1h
2qoo0eflW8bjRzj5Yh+9yZtB7qcBL1MYtuhdRUeJKVtHtD0f44Yn7V9+bJYj
9/cEq5o1iDVX86Kk81Ji+n2NmNtHw7tVo9eCc79NeHPh9qdj/41aJLVf1J4f
+Qzf8Lfcy8WUIPffjOsdky5EuSgjK9a3KfG9wBcff7JNyNcgz/MCzyqdnHdV
XxHdl/1TqeL4EjsobVyfHSBGnu8lzvWJWL68cNLCSu9JrVpOCw52OcOMjh8h
z9uKrweKHYr/KIzuW+TXa7xrxW0WAmnX1JXI87dhb+7mghlxOrJy2dhK13yF
W0qz0wW30ch6vMIvb7sqRgcqoPuBiz8wQ1/j1vYfjQxRfrI+7XjyzoXlY53f
Lax2C//QutKOp/em3ZC+w0PW6w0OGuk3ulSvhO5nvP2jM/0Gz3LrrZJ7oEnW
7y02WKk5HCSpjaxLKwRm23Tg1uww43XTNLKeHfjup1dy5Scl0YPrUTJz0jux
b7hQzalnXKQe3uGzvQJ+IVlSyPqZPW1e2zvc2X/OS8OeiTjr3YUtwkXmdTwx
QOy3q3bj1c1Fd67ymZD178ZJ3tv+JOgvRNZj3xYb+r/HbsVxk6UfdMh+fMCf
YxpbHbdLIF/+NUxl9w94y+2b2V9XipD9+YDTcmcMyvW00UmJR3oqkx+wlsr7
P6blxmS/evDo8n9G+6PN0Ufq8id6sBWD7iM8ZEr2rwevE4y9cjHfADE0c43V
rD7ikrOmitoe6oiznx/x3pDYl7XKYsh33oy5+tePeIXpL5+WEQbi7O8nfOVI
+xwzWWN00jTAWiPtEw71MjD7YWVJ9vsTlpPZaTlgbYk+WlEL9Bnb+iaH/BQx
Ifv/GT9Mab+eXchADKdFK+gtnzGf+7J0ugeN1MMXfG+heH8h0xj5ehS6M3Z+
wbzyDGPRCltSH1/wOcfzNZ8c7NHJDdQCfcWWdy4Y+Zy2JvXyFTdPd3crPjFB
H0PC/DTrvuLVD3g/fz/FJPXTi/slmIU6lnTE2Plqo5ZvLwbDHF/GK2PEqade
vP2/8GqDyKXIN95ii7ZAH74a1Hhl8rkDqa8+fNRfzaeym3X9tNM7dc724Ynj
y5RueyFSb334ZxR34GSRHvqYIxaj6/wNK+45s9i6TIfU3zdsU94UvKQcIWbR
jiS94W+4ptnohYe4A6nHftwX8NtbB7sgv4qu1Nl5/bhoYCLh4csVpD778eCD
Xeu49G3RqctLM/XNBrDuvrtZzExjUq8DmLu1qXB4Wh99ul2VN6d7AN+dHX1j
6WxTUr/f8SW72Utqo5ch5mO5wrmJ3zFTPbm/5+dKUs/f8b5e+V1D11nXb4k5
NU/7B87pSK+6oWRP6vsHPlx6a919ZIxOvftSMb/xB/aQ2x29wI1B6v0nztL6
WnKfyxh9+up0wSD8J7a9cv/50y0OpP5/4qSiRVJmga6I+etqzQLpQfxWOWC1
gKMrOQ+DeHLR90vung7Ib0rttmHNIO5uGB8L/GhBzscQ/r6hPNoPmaMWHuqK
Q7jHJCRYsMqenJchbNE3Z+6b965oWHDcXzluCBeOyQx1a3qT88N6/7FaulC+
B5JmrabyyyH82CUxNSzdiZwn1ut9m/YX70fIUHpdiArzF+55sH+j8L/55Hz9
woONT9bDJYxcFLJ/quz4hbm3rn324LIzOW+/8F93l7/CkatQhGrDVtWGX/jG
gr+6H3JWkvP3C7tUtwfO222NDtOnRlWVhrFeHk+FQPIcch6H8cj7J0/T5AzQ
JdZqq4UMY3/5ueYfG23J+RzGAveDw1+fc0ct+tQKDeM9xhPP3JN8yHkdxuMr
k/eK01ejYYMjseoSI/jr/YzpXu8V5PyO4Mzzi3d0zENI2vgpt8aGEWxdu3Hh
unRTcp5HcP0lgYCKxuXIcMm/ZI3LI9hyzZHqWY88yPkewcwj6d0/lNYgFzAS
ovGP4oX7htqsHVaT8z6K98yPrkioWoEilgYdoHmMYkW6VW78dXNy/kexiChu
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
CC1Dwn/2XqwivE0R7tgZVCnXnEfqEpQjVgRVlzf+q9pOE/6mCL/z98ie8yhA
gSxrEiygBEodfsOVdfmExymB7CXt89vFyxAbFykrgUTxw2Prnl4ifE4JFEte
cM1yuYYodxc8XwkOoZNX10XWEl6nBAKXexTMy68gajX7rJXAd+xTnGxOOeF3
SpAY5lBvaHMY7ZXbfjDYUwn2jsyu/3g5nfA8JXB9dcrQdrwYsfFIqBLYq4td
jhQ8R/ieEtBU6TE5184ieUVqQiqB6OKJvjvTJYT3KcGPvQEF0hcOI8p99eUq
geHbBxfuxaYR/qcE62su7LaWK0BnlCnApgTvz284eUq9nPBAJYiUej3TkFWN
BikcUKcEJrd753m/rSR8UAm+S43jmooiZKJGTVQl4JM8zqu6MYXwQiU4uW1r
yJecBBTH3gAl+Np1L6/sYR7hh0rAu9rkstWZUtTAckcbp5VAk2vrtGTDWcIT
lcH+eudmmx1lSIJ1N98klSGDi9H0riyH8EVlOHugZb9WTTzyYDcUZZir+DNP
VekA4Y3KEK+1uLxGsAQVMSnioAwha9O/cctXEP6oDBVzxDrDqipQL6sZbnJW
Bq+YjLZffsWERypDUDqae9QhDc1nD0hl+HjLZGx+Twzhk8qQC88yb7pkoV06
1MRWBvpHvovCwicJr1SGu0n6vgt8y9Ed3V1R/QeUoW3n/CgNVj1x+KUyrN+6
QiNv4AQSZAs+ZRieFx/i47+f8Exl0OERfzbatRP9py91s/+KMqTNOnm08OUB
wjeVwWTljaLWp4XoCGVPnyhDJ3/qeGvSacI7lSHme/yjuqLT6P1cysAow+Sm
Xt2HOiWEfyqD86MM6ZLH2UiH/estyuDU2Cn56dMewkOVwVz/YFJEeiTabLCU
NcJUYM51+1X8F9IIH1UBGZpf2nrzHHSNkv8qKhCz682Xzv4cwktV4IGF6rrQ
4HT0z5ACYiqQsM1wUd+BnYSfqsBNk/kd/V+XIjtKrtqoANRP+Dk/AMJTVeDQ
bJSb37QFZSyKujfgqQJ9egNTZxUTCF9VgY3pB7J2H92L2il5FaYC8pLfHrWp
pBHeqgLFZQrnMv/tRxqmMrzfE1jv1xxOssxIIPxVBezEltedO7MNBVFyIE8F
LBdX2/8LXEN4rAqcKVzzfr2CEqo2oxZUBfgbnhRX8ywjfFYFhi+41UWLbEXj
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
qo5Zz2/co0H2oMCSNRZDJC+igb1QnP/qdwPoLoVPn9Jg+OJnCSWxDyQ/osE3
7QxfZ/965E+119c0MK90P/0kvYbkSTQouWmVJTf3JRJiA1AavJmyfbnEo4fk
SzRgHFtw/HnJN1TpTAlkGkS6mUfF6v0geRMNtu3vMLF/04tWsH99mQa7ZZOO
97d1kPyJBgvCvIq29NxDo+xfb6SBgbihZMjmqySPosNNwdOrxOa1oaMv1rIU
FB08bQ/GP7n6meRTdIgojLp21HMAma985HJThg5Bf+5+iWH1T05eRYcVa3a3
X1/yGX2g8JgaHY7bdxf5MttJfkWHUqZx5OrLtSiZbSjpgJKL3G2+nSN5Fh1u
nY1WqNduQbrshkOHU3WVolEbvpJ8iw59YSO6EkHDqGnVupyb5nTokpswmPAZ
JXkXHYyfG525oDeCtlA4yJYO4lKVZW28fST/Yr3uSo8X/tWKZFlqdslKOuyJ
VNzxfc0rkofRYSjga5LktR/o+ivqhuhAuzQY0Tc9RfIxOtik7zVWUebBPmwA
Q4drPbweIV94MCcvo0On4pnwW31TiIs9oOnwdsGUrhlvP8nP6OBbtUlunW4b
KvWgDhgdtgyV0ngEvpA8jQ4bQ3pk+vT/omUstbsnmQ5pIefq/p0Twpx8jfX5
jQcXMv6K4++e2Qq3DtGhoiQwpZpLAnPyNjpEXRIQHLvMjTMpu3+UDpKMxg8T
Dj9I/kaHXRlNMTqNo2ghG1jSYcmCqu6sD6KYk8fRwUVrIH6nrzJ+00EJWjp8
2OzGq1ZEw5x8jg6VFWkVBlYqeA9LDd+6RocXRg+EbM6LY05ex3reyvdnPK9O
IBplb+/RYe7fc+9EwqZIfkeHhW4/5Lz8pPBDqr010eG0/oK8xGl1zMnzWPWx
aX/+XxdNHNy1Pm3PazpMLxnyXyzGwJx8jw4BPCljq7cpYFE24KeDe5L5Hm0v
PszJ++igNzP6yWTZBLpA2bl+OkDHnvQMZUnMyf/ocHFm/s955nTsSpXPbzqE
z9ptpP9cG3PyQDo05ttaXQ/TwhOs07vnHx0scqrpV52VMCcfZIDfloXDi6xm
4ePU4wozIDEij26ULIM5eSEDbp28ZS2coI2Bsi8yDEjQ8XBpm22IOfkhAxo0
q94YDhvjzxsowsaA+oiPe6qdjDAnT2SAxaY8xwzL2Xg/G5gw4Ev+y1dWWxUx
J19kQLhv8dODeyXwHPZAZV0vb9Vn3/V0zMkbGcCtqXejJswAv6DkujkD0KOJ
Qz3uizAnf2TA4sQpWa1KI7zd/zGysGPAUMvRbxqqWpiTRzLgZ8r1Uv9iGazI
UtsxKxmg3Gv1VOQEDXPySQas1nTNdtddhG9R8dNqBkyJ8NL9FllhTl7JWp/e
Lt0acxu8ng0YGbC3za32nS7CnPySAd3TzZ3fdhhiPrYAZYDqwv3yW+RpmJNn
MiDKvrqtXEYOl/dSA4ABjP0S0htcdDEn32SAy8Ou9rI0Y+xIxS3JDOBPDfjO
uLYEc/JOBkyL0jffjDDFQ5QcO8QAM8f0gEPqBpiTf7LW+9L8vwnKKjiHVZ0W
+Qx42TZ6v15PGnPyUAbMuna25tstHWzKBvIMuKayIDH38mLMyUcZUJlV5fI6
yxq/o+KFKgaIr50r/GTAGnPyUgZsFxGY59NijuMp+XGNAZMLG2ifJ+dgTn7K
gH+015In5jOxZihFMBmQotVvltFpiDl5KgNe8L8ulPCyxI9Z1RPbxNqvZzXP
bQyWYk6+ygDFJ5YXdrla4VAKp79mQE5yZFC4rBHm5K0MsBHi6hB5r4ol2QEW
A0TaIt4mmdIxJ39lgElhwZZtr4zxlXAKcDDArWjFgNgaW8zJYxkgYVl0o17D
EXsO5rEcFgN2PuiPFaE5YE4+y4A16db1DG0rPE3h438M4OWLS1luvgBz8lom
hOgE2s3bqIeLh/x2/hVmQp5IRD49ygJz8lsm/MywUjRe6oBttlLElQmtRX+9
f884YU6eywT+XbunAqPscd8v6gNMCH1gX9HrZI45+S4TbG3DHBQv6+B0NhBk
wqjfgvc+i5iYk/cyQco4Z5ad1CJswBaMTLgOn56u3WaDOfkvE5T2BuicPueE
27ZRB4AJU+q2md9tHDAnD2ZC4RWPmmv11jhytJHlCJmgGRn9SuecIebkw0zw
jP3Nk3aNhlUpPLiSCTd6vdoSamdjTl7MhMZXvvffK5rju7+phs6EtR38Upcr
l2JOfsyE4Y1ahc0jdtifDdCZYCGDY5zFrTAnT2ZCxuEK7TuihliIbbCYoL79
UOs8BzXMyZeZUB34rTBFfw6upHBYNBNUuHdMFr6xxJy8mQmlvk1Rk6XL8Qpq
vCczYW6awcPmICfMyZ+ZUONqZF/oaodHI4864AwmlC/atZb+whRz8mgmLNqr
M/CPXw8fpcZRPhNKJn8r+X82wJx8mgmzrhjHz78G2JwdODFBsbp01Vu9ZZiT
VzPBSGQp14n/bPEHqn1WMcFSgmfk1wZzzMmvmbC31FLqBp8WTt5NEW3W8zcb
NC6VEMWcPJsJQb1rfjf6amNd6rjfZwJv/zK8ONYCc/JtJkQWWd/a3GOLmyjc
0cSE5d9zsrS/LMOcvJsJTk07S0yrbPAWqjxfM+FIzdvLne2mmJN/M+F8V7z9
0SRdLMsOaFnPr2pSKZ6qjTl5OBOQd+LBK8rG+Dq1nANMmPyUFBgSaI05+TgT
/MWajM97LMM+lL3/zYQVM16hUwU2mJOXM+Em10IcMGaCOf/bXBOGlB7u5spT
wf8DSauP/w==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1: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
q1Awpxt6mctAxc1Gja3O/Yj2KzJgaWL+3XDDOHp9dFju12IZOClzYvvBwjFE
+xcZ0Ktr0z+j3I+Ejr2dtcpfBl5fn/cp62Ytov2MDNSdSxxvOv0ZOR8/5f5r
rwwM8OatvBpWh2h/IwMCr24yRN73o8So1UGromVA8Izxgc+LJxHtd2Qg8H5I
WMY/HlwbTU0IGUhJXbT50bZJRPsfGSi+1DjtOLMf6XI3QAaUr3sUKC+vR7Qf
kgEluYpCFfiOtse++/nrgwycmsVIYEi2IdofycDyKIdV49NHUHbc6dFVVTJw
4wmsC4ApRPslGXixdIuk7vVJNHnSV7WqRwbEB0+YLnceQrR/koHwmH0bc243
IUdON/UWkAV1m76FK75UIdpPyYLS7x8TXp5d6CT18SqyEDSR/OyU+19E+ytZ
GLl9SWUqhAeXn6EalixEZcQah2r9Q7TfkoXnDh/MLsX3Ii3K/tjIAuuRFcv3
XCWi/ZcsVFvvlpzq+IjWn/N75b1SFlb/ZUwdWdWAaD8mC13lvvfdn/SjLE63
rdosC4nLRsqFt/1DtD+Thfuz014tSBhHw+fHJr3DZUFuqlry9fc+RPs1zs/N
Dhep1DUgRMn9s7LQv/LhF/eeOkT7N1loapDd6GnXi45xB7wsbF24qGcsbxzR
fk4WTGVT4y++4cNfU/3XVL+UhanY+ab6kbzE38nC2Cyel+92DyMlTjf2KZGF
GW8XL3fSb0a035OF4/MW2V5YWox8KXnbIgtnxA4uDDKpR7T/k4XIGWM/PLf3
oxtpBW99/spC3delyve9phDtB+VgeHfR8/upArj7ckJztZQc7N0YetYnmJfw
UjnID82+81Z/EM3lCmI5yE1+X6fFrEW0X5QDWYFPo2mDP9EhSs6Zy4Fv0zo5
wQtdiPaPchCpfVdi9tIJ9CF93HH1Ejnwef9l96I4HuIn5WDut/D0TJ4JJHXj
44YafzmIkppzpUmnD9H+Ug76dtukyDtUopU3z3EqQA5ktHnDzyWWIdpvykG2
Z23sHOhElyj5Ei0H+3DBD+u1k4j2n3LQrtdTKb1GEP/OoAykHHStv//Y+dj/
/agcBDzYYFEWx4uNuA1GDuyfhnrdlR5CtD+VA4uwgwW/WI0omDOcfQvkQMd7
2kcdgwZE+1U5KArL/GYt249eU+O6Sg5eC+vmQs0kov2rHOyPanQVsefHQvcC
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
gT/7rdnLcQniLk+aCvwdOtG/cLgF0fxMBazapB/wDw4gR3GJ4xseq4D7wL5b
K8+NIZqnqcAMFd/3xulDiIvPPqrAwJkTdjNNWwlf49yfk+aUXFQponZrQ40K
/Nc7O33o2g/C21QAG9uPD6i0Iy1pyhGrgI5T5qKNuQOEv6nAtk+LRVUWDKP1
MsApeVXQTPOuiZ/sQrQ9UoWEU3ktp9V/IC4uUlOFqGXHTUKk3iCaz6nCzOhd
B11CfyHK3W00VgUrg/WHwyo5+p/L61Rh7dEmnoLkCUStZpudKtQtj1nhn8BD
8llVEJlZGGg+NIaOKe6N2+jJ+XnjQtO4y72E56mCw0qvnmPmDYiLR7aqgmXb
ja1T56sJ31OFZ64jc3d95NS/CjUhVcF+s4zivf2DhPepwla73bWzfUYR5b7a
zqnC5OQ+0QBOvdL8j/N87xOn+NKq0U01CrCpQo1lISPE9B2ieaAqzD0jWLLs
VRXqoXDAa1W4U5VvU67Sh2g+qAplUSFT0edHkLkmNVFV4YjRlt0GHiOEF6rC
ooCp7eJVAyicuwGq8HEP63GQeCvhh5z1evHYoUC8DBVw3NGmCVU4mV/79FBR
MeGJamDRqVO0zrERSXPupl1GDaQDp237vf0P4YtqINPhKCbK7EUe3IaiBuH3
9DckqHUQ3qgGtkkhgW7eDSiNTREHNThk/MLKKO8LovmjGjR1SetWMt6hVk4z
3OysBhJefP3m+uWI5pFqUO27/q9MSDMy5g5INYjIud167nQH4ZNqMGlxQPBT
QSvap0dNbDUovr8rQPpBPeGVaiCpxNfgqF2Mcqfv298RowY2GukW33xeEX6p
Bkvtnsr3JRUhYa7gU4O21ap8q2SqCc9U48zn6afOXm9CLgayLzoec15v2Tlj
w9lmwjfVwPLrnJxQy3p0nrKnhWpQsXew/cv6UkTzTjWo1C+aterKc1Q3kzIw
anBP/+r1srCHiOafaqB4cVm4UU0h0uN+vUUNjJo8JJevKCc8VA2WK/Yo2V38
hXaYOHBGmDosPGXne2PnD8JH1eGY4Wu5bJMP6Ckl/9XVYfLErHkx7g8JL1UH
18l3L12W56ApMwqIqcNpg9WXI/58JfxUHY4rZxZse/cLOVFy1V4dFs9bnirr
0EB4qjrYXnL/mjDVgOLn7M/746kOwd9MNHtwJaL5qjo8vPXRyvhQAfpJyatt
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
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJw1mwdYje8bx9tbe9epMxoqo6GQPPdNZVOZCZVsoSghWQkpsitZIetnZRRC
IiNJVBSlpL0nFa3/ec/7/F2uy3Wuzjnv+z7Pc9/39/v5hucXMHuFhJiYWJ2k
mBjz7///FCxt+C1/wJJITBH/yN0dAdPerZicHDuZvj4Jx3fYhwQbziOSTXvs
bDLOg+kce/VkXS/68yTwCLsuuzBkPpFImCBmkXgDVvIOGp76OpO+/w6Un669
33/MkUgYL31g2HYPDtfviZVO49HPP4Qx3vra556bE4mNF2tMVB/BmxwtnTkb
J9DvewLD03J+3VCcTSQzf+kNt34Gx9MmHMwb7km/Px1qTXvGTDVaQMIVjl3V
v54BRh9WVT63dKfXewkdDi1vti8hJFz4bqMxmRC5TWxL+GRTev3XULm01yNd
356EL877zs96A3dKo4s158yg9/MOAu1K5hoVeZLwfRs7zTyzYOigqXqhlje9
v/cgiJt2npPmS/beURtiVZcNl84/W/hz1BJ6vzlg6xSaOFN2DtlbdM9s5NaP
cKt634Gxf5Hefy7I2TV7nX43kkwUfpue1Gcos8yq6p/lSp/nM4ydU/N200JP
8krz7y2DGXkg4+kvtdZhBX2+PHBaZ/A6cpY/mWjx/gnnZD48JrXLOR4r6PMW
QPrujxd/Oi8gr8affmv8owAyFrmVBN4D+vxfwGD1nYDyVxPJxNlrCngmXyHG
Q3Eyv2UxXY+vEH54xscKrfXk1cqx5YJ1hbDgtJGNV2wQXZ8i+GwZp9f6YiOZ
uF2+2fRhEbjNM1254chKul7fwPDtWgfT3Lnk1ZHvf837vkHOnQUHoldPpev3
HZIsry6bNMqbOCfdkLF0KYa3Vz8Xy10LpOtZDLZfHd2TQraQzMfbNIYdKgHi
vDjiA2yh6/sDZhhd+eM8L4A4f5zKHfHlB0gnkFcH1njS9S4FB+XZo27JuBDR
2w3L4OCEo90zNy+i618Goc75/p5LA4lzV/1Y2+U/YdMPMYfdD7bR/SiHd7v+
Xj40bDvxk14i0J9fDrDWf6vj/q10f8ph3DN/567/NpFLKm8sDP6Vw/WUNUts
xJfT/foFbqvWSkr9m00qmMuf/wXrf+xLfpzsS/fvFzjJXx585RtM+CanHDgT
K2Dm2IDtm1T30P2sAO+gD2mbu/cQvxH9TkY1FdC9zHPn4Wfb6f5WgtkJOQXb
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
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.5, 0.5]], 
            LineBox[CompressedData["
1:eJw1mwdYje8bx097j9M6dVpnVCqadnjuOyGbjJA9MxKSZGf8iIzICClCymrZ
UoRSMkpCEtoqtKVS//c97/N3uS5XV+e84xn3/f1+vg/xojVTlsrzeLwaBR6P
/ff/f55K5WNbz1QQ+dFyr0Qhe+B8p+Z6Sa0ccD8fh1ODzvRWyNIGhfqdfV0e
R0NquNO6zy/59PeXoLXOISJ+uwbIn3Hn2Z1PAL/1E5Oqb3cT7vM3IWvupL1K
faqJvOXCVLOGZDDwD9i08Vw5vd8tGHpoxiTlnD9Eft2FKivduyCcZHnWvFKZ
Xu8+2BYNXHTFng8KT7+bODingclQda8UPz59nnQo2u73KWCxKuxSPxonjH8M
xX1+J97L/UPv9wQUVDLA9FIt2cV82mLQU3g2tOBz74R2ev9nwFvbOnLxUzXY
NSf/k+TFc4hcuUS/baUecM+TDT6bPd+eHqQPu/5b12wz8wVUnvV5tG79/983
Bww6mpNvufNg902+Vu+aXJij7Djpo0st4Z43D8qPeuxuuFBKdn9ItnEKfgVB
olvBGuJmOj6v4VTa8XabDHkYzlzNRPEtnPZ/v/FxqRp9n7cwocg+4mmzMmQa
/L1uOj4fNmdA0htlZn5k75cP+6e7JAya0UyG2+XcNz9eAH/Xev/rXPWdvu87
SMiaElW2oo5kDjudZVnyDp53q4+5PP0fff9C6PkQOmJEtDIMn7LindjqPSx9
sGNT+CVVOh7vYVz/iSvifRUhc9ngb1K/IlBOmWjbtPr/8/UBHoxxXFNi8Z0M
36L20/rWB1ixWaPJTPcb4cbrI2zpWzaoiN9GMo98+tur6yN4LsMZq18o0PH7
BOJ9ZiEfTVXA41KCsv2IYhiZ3V+3PUuBjmcxhPd75DpS0kae3tuk3+fgZ/jk
6CVQPVxGx7cEInsaB5q4VhKPV2NEjoUlMHDg/XFlA9vpeH+B/tP6KarrqYDs
42alkHPIYsXWMl26fkrhcevErOgEHfBo+zHYdclXEGwfq1zwXpHOxzcwHnL0
5Jvy32SR0lyp0PsbfP4wSXBieTHh5ucbrFt9pGDDmAYSq/PczrTjG1TN7Ngd
FShP5+s7BFtHdSuNVYMy9vbR32FuVfCowyJVOn/f4X5eYvdwNXmQWJ0YYD68
DG7MVvO75fv/+SyD5Gtz3Kec+EwWOf4balFVBudHpb1LXVNG57ccnklafQ50
/iGxg5Z6WB4oB9XooSNuqSoBN9/lUNs/8cmswSpQNpwdoApwCg3wNl7+//1d
ASberb+aI34RyYT+k8UFFRC4OvnLXeNiwq2HSjjP25Z4yayOLJpxzlsSVAma
B8r9z1vx6PqohK96pdljlihC7EJ2gKqgOnvguW/M+3DrpQrGzvG6vevnX1K2
avViq/QqGD/+qPSn5AddP9Xw1f+Uw9olhUQS9H6F9aJqmNiuc2ud/P/XUzWo
+8KMGyHNZFHIsLU2yjWw4tjyB5n63XR91YDpyrCh5bN4EHvgclCvqzWQrP9s
2S7jP3S91cDzcZXVEzKqSNlxrW22E3/A5bujbrlk5hNu/f2AsYarqhqmFhNp
zIbddk0/wKYzNuLPjZ+EW4+1UDZS9D2mqp0sTviy3/5kLQRmrNf6cbuTcOuz
FkZuuvLJO76NXEwdGd7brQ72VUQ1F+z6SddrHVQ82h0dO/cLKX9042Sf0jqI
Egpe1Yje0vVbDzWun3Q+On8l0heG5xx21cOh6cdbjK/8ouu5HkZk7Pix5GoL
WVyw7aKjzU+o6Z6Uesapia7vn1DSraN+16iaXCypTHDK/QlrlO+nDbucT7j1
/gtONHZHTBY9IuVVE5Kc/X/B9sxqQ8cV72n9+QUH5+2Z+35LNZE23r7jovcb
XI2u8YfG/CbcfvgNpjX7I8NP1ZPFneaPXO/8hp2ns4/eMCgn3P5ogH8PDdeK
uwpIgTx7xwawO6oc/uHmC7pfGiDt29k1NZ0fSJPKnyXCHQ3Q1ro/cXSfKrp/
GkBBOVp8vn890WNGU5jfALFOrw3fRf+g+6kBJs7bUzp+UgVx1Zu/ylTaCMPP
u5+oW15IuP3VCK2vn7R83faMTBFE/DLd0AiFfbp/3n/5inD7rRFiXh0pHXih
hASYZa8zy24E4ye1Ea2WFbQ/NELl4FErr/mWkWPizhYzkyYo+np4ZeegD4Tb
j02Qd9DrFKpnkhRmtM1XNcFhnZEBflMv0f3J/OxwbsWq4w9JQW92hJrAu8R/
7N4T+XS/NsHVxN5LLohLSJPzqe0WOs0Q7Sc8fLnjM92/zbDv3vuX/TzfE70B
L+UsFzZDVPWOwsXuWXQ/N8PUNivVh2uSieuQnj2Wqc3MeJndCd2ZSut5M3g/
H2Dn0z+LTMG+qiKlFphv4WSudqWAcPu9BUKeaS4UQSEJGOkbJprRAqJRYwJN
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
gyE3RtRffaeOprxlmbx3ipQvqeNjvfH3U9bw4KVM3qkjb/jl357WjVSPaqAo
PevHopsfyWzZgtbAoOjLu83elFN9qoF1F879qUrrInW39JhvaODGDe3Ft7ep
AadXNVDZRty0Zwkftty93nRtowbuKJinZ3xcDzj9qoHl2nlGcl81QENWoDXw
xK65bTGiHqpnNXCDyYUsw7K/5Gzatw3XczTQKnXkawMrFeD0rQbyD1T8tL/G
h94Zm5k7aKD3tt07xYcMgNO7mjj0WNt/V4J04OETVnBoYrXS8T8n4zqo/tXE
06W5pYvefiLjnt10uzFCE5//iO57zbOB6mFNjCromnXCUQ0+Z43eemO1Jsa8
6H3hdKYRcPpYE2f9/O+rgboZrMopY55IEzedGQIdxAQ4vayJefkNTld7a0Pn
y609NzI0MW5oStrc+V1UP2viged3V8z7JAdhr43cb9ZoYmD7ql4Bf/WB09Oa
6OBkfTTXRgSm+Um7mCnDmtAt657ISYHT11p4JGis28EGS7j2bizzBlqoseo4
hAUYAKe3tbCr/7sAqVsXGVJUoZS4WAt9RbO6A2wbqf7WwsH7u0RNQ1Xg5cft
nokHtfBZNHm3+J4RcHpcC5eHjg6XvDKD2Z+N9yfe1kKdPwoXHdr1gdPnWrjK
QlthYZM81H1JYd5YC2eVvHzifLKW6nUtPGOSuq94+x+y5dt4zSQVbfy4YOfZ
1WI+5ZHaeM/RXLhJxRI0ZIJdGyv2Jb4+c9kaOD2vjWOWf51/3NEGzlaGHEma
pY0xNfyD+ifFwOl7bQyYfrX42VtDYNVq0i5tXJIbunTQcUXg9L427i0owluN
f8nDWnaBaqOqZZBxoLY65Z/aGDt8eMGcHAGM+zlxWnKhNo5WV+OPcTMHzg8w
1zcR/rjTTwCff9ecSP6njab8uHSDOhXg/IEOxt1aEjrjZANZJSu4Omg+ucki
LqKF+gUdDEs88iN4FjP/jJpMmaSDFzQPnO4Takp5qw7+9Dk+0txADGF/7vik
BOugZtKPDCcTEXB+QgcHZcIA9Uf6YMoJCFxnum/Bg0Q54PyFDo4QJEz6skgR
rnXVMjOgg0dS6sq3z2TmX+Y3dHBsX/l+wteWwOETHbw4PDC0aoKE8l1dDBWe
cUq8ZwZVsuHVxVPHcnZf6qMJnB/RxXlG5vdmXm0mjjLBoIs1DYKejcHN1J/o
YmXbnpdvNbUhiKmGswbq4pKUhj0bC8yB8yu66JevFujyVAzpe9r0isfp4rdT
nWOGKZkC5190MduoLfPcKy1Q3vu0r88CXVx5Wq0pOL2N+hldtKlddu1UVheZ
uC98WnGgLpq+nFti94oPnL/Rxenlpo4rtERwMnTuBp/9upiX4PIxYZQ1cH5H
FwX/mRQ5zbCC0v1sh2B+PzzsuruVJc0XdLHQMyZynZMO2MgmQBdPfuyfgTc6
qR/SxeWD94Rq1/HA/+CzD8VZumixUaR5Ol4fOH+ki7pPJf5XjljCnUNH230+
62Lwjn0GAzdJgPNLuth0+3TuaZ4Iug/PM/n8WxdXtOxSrjyjD5x/0sU6AS/U
vYoHo5hqOluRj+tKOtuP5fCA81N8HNOs65zySA8Os5c35qPHM+8W5SMWwPkr
Pq5+3zny2FoxFB1jCxYffxRnTlurZQac32K+L76um6OtCRas/XHnY5So8qaZ
dxP1X3w86jL3pTTlN1l2Yv6j2d58fK75ePvqMarA+TE+5r7i624jArjJVNvP
K/n47s1Mo4QWEXD+jI+v10eMXOpsAW2n/nbP3sHHOSea8eQ5PeD8Gh+T9044
gR1yQFi5H8HH9rf+7RnycjQP4OPyCIObjS/5sFfW4PloezCoJbSPBXB+jvm8
mtxeJWIFr88uWFiSxsful46LB76WAOfv+Pg34NTIyFoBGDHVeE4+Hyvc47+/
ylAEzu/xUTh0Pz/62U8yj5W3lXw8mZlWOzmYR/MHPl6y79j4bawBxMVkP53T
wceQ+++K01rEwPlBPQx7vLs9eK4t/Dp/vKJEWw9DvljFOs+zBs4f6mHWsbod
2Y9NYIBMEOthYeEz5cmHFYDzi3o43F5cz6tsJ9tZOTdQD1/dDfevO6hD8w49
nDndSq7QVwRZlzpHzR2vh7zLlVfdLlgB5yf1UDW9pc3snQS04174flmgh2Rc
R4LAyAQ4f6mHxybpqh/9LA/eV04wO0AP30xpkbdQb6R+k7nesoQF+ls0IJqV
L/v18Kung2f3LDFw/lMPFxn3jlyk1RuqElgDqYe10UeEFekOwPlRPRw8f1fL
rYP24CgrMHp4Puhw7PHdYuD8qR6WxV5Qrb7N7H+mOc/L1sM7Jdd9rkQoAudX
9XCE597RCkpGkM6268/MeKUqOobstwbOv+qhfX73BFu+IygnLp4wr0EPix/M
SJgd3Ac4P6uH/Yd5JUxMEsNEptqXKupjQ1ppytKpOsD5W3387h2b8qyqk5xM
/sfsMH1cO6pYUrddHzi/q48v52aaew+zhlK2PTnoY1Pwe/cjdc7A+V99NDu4
6PGnQ33B5tapt/OG6+PqY0bB5e8cgPPD+jhF6H4thel//reXNJZ66+OnJdcc
R99VB84f6yNf6aq44o8B3GG6wfxV+vhCU0HFXNEWOL+sj+7FhUu0012hmy3H
O/RRfEnn2ZM7rsD5Z32c+7mrIlGnD4y6/3Lq/OP6ONlkcnbkZyFwflof7zZ2
b7uwkgeHZQJWH9tTe93fJ1YHzl/rY/z71LXOkVIoeriU2cH6mPgxMODYd2fg
/LY+Vq7IPF8n7Q8WTLf4mq+Pcev/uZo7utB8TB8fTrvxovOjFJal9xTNr2LG
r6Nf7oM5fOD8uD72S9Tua/DZAG5m5P352qGP+VueLXo5wA44f26A1utXHrQ/
MBDYbrFAxwBnKXge+WRPgPPrBnjtwXL3pDluwBk+Axy3+LBop7MzzeMMcK92
mF+/QmOQlf9BBmj3wKvoNdMPOD9vgMN/OU4bFSaF1894jIQwwE6PMqdfI/oB
5+8NcOywIV4Zf4aBrFwtNMCC+oOe+efcgfP7BtgevnhvmwcBtpp/22CA5tXV
3xrvONP8zwBNj5W6vw0Vgmx7HTDAyc814hvT+cDxAAM8YLL1Pn9AL/iVwy4I
A9Tat3PtQcEg4PiAAfbPqk40PwEgWw6pBuiyyHD+Em834HgB837bfF3eZvWB
7Xmv4Xu2AVoedxc2dxoCxw8McLOPt317oAbIHr/EAH9XDUg7MVEKHE8wQIdx
kxLsLruC9pvlO783GKB30tu0u28GA8cXDNDIQH1Djvxg4PCAIZ5x8U66Z+cM
nFwwxKed5p/+GIsgOp9t2IbodOTv6+n7TWjebYj5gU3HXybaQ1UBKzgNMYRU
GBikDASORxii4dyko7c2DAO2GpYNN8SoHRG+44OHAscnDPFsv/EWXwa7gMwO
zzBE1UavMoWfJsDxCkPccaVlxpi/mpBeNGBU2SpDbDvVeXrwUCvg+IUhVgYI
zvw60x+UPyr4LgoxxJM83iayhADHMwxxWe2xgYM3EZj46e2+suOGWDVkXuYq
g77A8Q1DPHZ9Utjm5xYgs38Jhgif73058ZsPHO8wxNx4180zY3sB07wYhW6I
pomOO03Fg2h+a4gV+fedzg4CYIpz7aICQ4yNFIdk3xwKHA8xxLvbxo6cAi7A
FB9Gohri+/kKa63GmALHRwxxfR+zkc+f6QKH5w3x/OwclR4nG+B4iRHaPXT8
pVo1ANhqUq5jhN8O5pdcUxtK82IjDA76ZjbGeBCMkgENIzw5Y9P2SYH2wPEU
Iwxb7OeDuw3hcPkg5q8R3nRc/FklwRg4vmKEwoEeY239HEAm7ycY4bLWmEZl
oyHA8RYj/HnaKrv8hTtYyCbYCP/6yT9RnjWc5tNG+EWeX93mNky22xcHMc87
7K1JYLUrcDzGCI3bL1Rp3BTDzRo/fsUBI3QNjxwXqWIAHJ8xQv/yKHlySQwy
ORtjhH0Elm9mjXYCjtcYYbtv17ItIX2B1Ckzkt4IRY23vk/u4wocvzHCre5r
ikcp28Pe+nfrl7wwwuyW4fk5J42B4zlGSGbrPo11VQV2N1aUGOHSu3HfveNN
geM7Rug5+cH85KWOYPR7NVOhjXD1yp0Xnpf2A473GOHgCVsmxr7uD/Ma3Jgh
EmDui2NV4+Wd6fkWAe5IC7Z3aRBBXCMrKAXIKzU7ZuqsDRwPEuBQz9hd5wfq
wa8m1lAJcJHk6oCyNAlwfEiAIrMA7VMbegO7W5Z6CHB85IUiLStn4HiRAHt1
LBh9YYQtbG/1n1U5Q4AL1n63D/lkAhw/EmD2r9Xlf4/JQ1bbEGbKBJg39l/V
tnBF4HiSAD1IwqVND01AJidDBLg3IfbIL71ewPEl5noXazx2+vQG77/vmQ4g
wBKX++OKptkAx5sEqFvRcXjFCAHI5E+CALePtC4f59lD+ZMAO/KCmw+39pCq
zjX/lqYL8NMvo7ikKEPgeJQAG29vORNYbQWydl0gwD/5P18P2WMPHJ9inu+A
+L/To20gqFuNWUMC1P42b+3xVQLgeJUAdYb1G6sT1E1k7aVTgPEWj/ppSf5S
fmWMmy4PeOqrqQfsaluma4ybR43a5yoVA8ezjHFXi9GIUiUbkJVDK2P07zys
Xn/YCji+ZYz7jHX2POKbwEkFtsMYY/sU/4L2jXLA8S5jbH7YPCUusZbItu8E
Y4ybpz5rXboyPc9kjDeCz/uPO2gKNrICZIyZGwYv6X/XGjgeZoxkeXD8Zic7
kC23IGO0KMl+mv9TAhwfM8ZgO4On804awR1VtiMZo6dlRHmLBQ84XmaMtc9P
ywU68kA2PDHG2EtQl5BZZ0DPaxjjt/oFAw4OkcAoDc19vreMUSqeeLPkkA1w
PM0YF/feOHHNTgnI8NkL5nnmzns2xkQfOL7G3G/fF50v9Z2EnS3fL8a4QaSF
8cN5wPE2Y7y0ug1VBhuAhQ7riI0x/rmZd/oOEXD8zRhF25oVrJh+s0wXmS1v
gn1/BPeZ6WcKnD0ywWkNTdmLzimCDBcJTTDmcdaKVyZfKZ8zwXrNFyYKV9sI
6+6WO5nghfb6ctOlBsDxOhOs8Fm/73KSBNjRrPEwwcoY26UTm3oBx+9MMJTn
G3DtvRXsNQw8tHymCR7tu7f0aG9G/8sKugkum/qne890XZDhET8TnGO1Y2xD
qRxwfM8E92w9txgYf2NkzHZIE2xySe0qUzUFjvcxzz/y9kS97VJg3VfNCRM0
vn8gLrdWRM9fmWBaabt+/wI9uCJkAZsJRq45sLsio5XyQBP0+eX0YP67WvKb
xQHpJvj0gHwf7fEalA+a4Pvnk7VSdprCQHO2o5rg5Aad22cXSSgvNMHBcgGb
rd5ZwQ7ZBJhggO/QpVv3iYDjhyZ4ZWY/++UuepDNuKMVXcz71w63LUvpoTxR
iL23TPWxSOghOszT/NAVolmWi87qI3zg+KIQw43GmeiJRDBDVlCEGBtw5kT3
XSlwvFGI0lEbVk4YbwUxUpY4CNEzev1YtSBTyh+F2GLfWG7lqwbVTDFcOVGI
x7/FOB4v6CIcjxSi44q1vrNm8MFJ1iCFqGQ/L8qPWY8cnxRi2XH5ZwO32sHG
XmzHFqJgp1R042hv4HilEDOT7fcI/Kwhw3bjptow5vrpJW2xgYbA8UshLhsY
b+HjrAgqMsEnxMMZDT/4SVrA8Uwh4n6B+qZNYpjUm/+w9pYQZ/RMSMl3dQCO
bwrxp/v6jIFPXOAUa09zhNi8Zd+6fd7OlHcK8Umv3nc35FjBVwfWwAhx7fS9
ncei9Sn/FKLbtqDjoVpq0Et2vEWILy/mB/rEGVMeKsTyT6vCJwy2hTXOI5kW
ZoqL/g5ssvd3Ao6PmmK6l/yQSqvecJeV/6am+Liq+4KvqyVwvNQULUc/6q1i
ogw9riwQYz6/8eK6s5nKwPFTU7To/aS3zQYxeLJydYQpDlml+ePkCRfgeKop
RhSWnE2PHgxH+m96UjfTFKf7Drc9cX0Q5aum6Hmi9FpbuzN8YOXValPctnei
RZaXhPJWU0wq1OqZMVEXLAfpK9TvNMXJO41CdsrrU/5qirm3R2+NS7cBX1YO
nGSud8ls02u9fpTHMt9Xtbvq8N9ASHRjB9QUo7xPDwpb7wocnzXFfPmL7qWO
VvCHbV8Zpnj8g9r+mV91geO1zP1e6d9cZ6oHMMyTafGmGP26d9IGOSvKb00x
I2TWTa3dzrBPViBM8cMl+Q5rDxfKc5nxWTD96JlcG3jDqOf6LlOckHIsPXv9
//muGfr6q+rVucqBgC0PfDP8N/NcnpqvPuW9ZnhggKVvbr01zJc1PDO0jZv0
3wTiQs/TmuGE+5FJJ9e4wBV2ObuZ4bfxWYnvS62A48Fm+DHyQs2Ocbrwe4Th
uJ8TzXD7R/Jm+F1F4PiwGSafMAvL8mH2v0zAmWFMZsvpf82OlBeb4ftboU3P
5AbADs/Egz83muGmX1ZRmtCf8mMzXKc6n3c9ygGy2Y8fNMMBO86YLp/5f55s
hpIhR654L9EHHZkhMUPlJQdTInTElC+b4d6zsySPNjrAjHGsAjLDLutj24pu
u1LebIbmhdGTosc5QwyjPn/lMM+3Jvx5mIIUOP5shlGuQVlD1DWgmsWppWZY
aHC7ONdMgfJoMwSl0DsTYkzBadI2r19NZvii3H907io7yqeZ63983LF3gwNs
nMwqJnP07hclbb7Qi/Jqc6ydU5KWqSiCDC8WGJnjq9993zcZ6VJ+bY6L3R+f
KfLRABUZ8DXHdn1DnvZmIeXZ5phUuV7oUGUNk6YlF/4aYY5jrgrsnpy3pnzb
HN/o7tvRhCI4NZ1VWOZYU5NS+2+YJnC82xyF1XHNtcZN5Ks3O0Dm6P/MQWHu
LDng+Dfzc3Ja8ZgzBtBrpvHANbvMcVegx7wQZTHl4eZYdvuPz+BwMaxh1Nvv
k+b48+aJD0mJAsrHzTHLM9lG5Z8a3PVhN7w5Nty8P+xSsyrl5cz78UNv3akz
hJ7ZO07/zjBHrcLVgVqVYsrPzdFVsGvsv6k24Dl3PCNZzTFf0r1gZpYV5enm
yPf49+m6hxCOyBqYOa7sCR5sHK8KHF83xw9+VxMGJ/8jH+azCo55/jy3I6/H
qAPH2y3QL1c/fF2LMXC4ywLNRXkz6+ItKH+3wPFz3mg8ey8AX5kgs0DevT21
DxNVKY+3wJpUQ/vLOU1EhmfcLPDOA/MZO/l/6HkbCxRW3a+4qaQLLI1dO8kC
F+VkBO/+KqS83gIfHsyoNl4lAs5gWOANxZMYrGxO+b0FJkvSLZuG6wIjfh6v
DbZA66ii+dGqPMrzLfDmi7en1u9UA5n9PWiBtr8feHTXCyjft8BR170alR2k
IJAZZgtM768d6rXEGjjeb4F6Lz3cnt6VgMyu3Waep2zMWYVfRpT/W6DNQaPs
8VkKwKqTdbkWaHEwbHKsrRzNAywwc0z8k/ojzP5n7UWpBV4Pdfbazcw/lw9Y
4Lyo6VLtQkNgFg+jKC1wcO7rOVMPaNO8wAIn9zdT3rW5g3DxrSVuGb7li79e
JT1fZInHns6LS0tpIyzNXGdmiQ02pTV6A9WAyxMsUeeMIPJ6iB7I5JuzJeaN
umrTOMQAuHzBEt/lODj226gDMwJZBWqJqnonm2culaN5gyXOCPf88L65jsjk
xixLtJp8z+6oWy09v2SJm3ourClZ30Gqg9gNbIkad0/a2toq0zzCErVTLod4
PlMBWXvcZYmWm0e/ACM5mk9YYmzqtRnBeQ2E7e4Bpyyx1XBNt/u3YsLlFZa4
V3CGF7C8isjK+TVLHLM72/KDZgc9H2WJ/AH51aUPlUBl655XAY8tMVVrdPPm
6+o0z7DE0lN7dO1aVEFWfgotsV9V2D3/a3I037BE0Zm0NFFzI2Fp4Pofljj+
lbHmyI7PhMs7LHHr6sjem9+XEO74mCUmXr928rHXT3r+SoRrVRY0HPFrI8dl
8bIIp81PmLJap4tweYgID1U6nc8M6yCDnmQyHVOE+k0OD6dGNtHzWiK06PP2
zZnq76TEnQWqImwbVHNtwLQ8mpeIsOKdtHHEseckRCa4RWhYX7Fgh/wnmp+I
UN7fbZL6tQpiJZsQEV7/+NP2m0sV4fIU5uepV1dBQCl58XQOY+lEeIpvdDOw
OoeeBxPhyErXcf1sLhC/EU/VH4wSYfPQjaOffogjXN4iwsHrMifcjM8humzc
MFmE6cde3Gl1+0jPj4kwLuX176NbSsktVo7MFuGZ+4WlIs2vhMtjRBjgccyg
+vF7MlNmUEWYJuFlFhc8p/mMCHUL72WGLb1MukaxBYwZn2W+ky+HHKV5jQjD
PrgqVix4QM6zeH2TCOO7RH8j17yl59NEmPxxR9gGhWIygm2/e0R4/rLc0IH9
vhIuzxFh/3cxcyrdv5CaF+HbNh8WofVEXaP7ge/peTYRHq7bkPajLZMcHPPn
0INIEWqqLh+8+vppwuU9zPuYWeTuexdPnGVAR4ReegaDrXzz6Pk3EbopXIsS
ln8hhWy7uSHCr+OXv3Q1qSRcHiTClDfbU0q21pBgRm1uvivCBsGtj376ZTQf
EuHbH7ct5pS9I2bjj7558ESEP1rdQ0wmZxIuLxLhkSsHdnxzek0es/j0pQhH
l2pevOlYTs/XibDEX64pYWwDWcKW1yIRKrSn7o4b1ES4PEmEBy5OmpqaX09U
ZQCUeb+/1nnrdn2m5/FEKFG0CNuh+Ihcn8gKZBGGGGf/1F3/kHB5kwhVFB2D
Lgz8TCbLji8z6zMzvniAaT09vydCn6Cxw8CwmbTIjjeKcNKxe6PHZTQTLo8S
4+LSC7gv/zeJfDuPUVBiLPV4dz15xDd63k+MC/prrUSTEjLU6/mUh/pibJ/m
vU0o+U24vEqM6pfyn78c0E2+sXjMXIxqN9cffn1DieZXYixY5zi8f6Yi7JEZ
SjHOOVXe1ediF+HyLDH+wnRJqH8NsZUVHDE2JdU5dYcUEi7fEmOVtv2rjuYf
JG/q/OMPh4qx83dKn71v/hEu7xJjyPaOaevV1GAti4NGiTG6Ma3YiNEbXP4l
xknrXDMKvRXBgFGzQ7zEuMLhyOILt9toHsa8b8jM+F9FNeTee/aBmN939Mve
eLuZnlcUY9LGviZOfRVhjgzAiJE/4XSql40uzcvEuMfiyQL9P3zgyRq0GJ9O
ndZwrVSD5mdiDNxo3m/Q8W5yaQa7wcQYdfv52KZnlYTL08RY71fs5Xqmjoxm
1O7WPWJcdChrRfFMOZqviTGzV5LOxUIdqJ8ZIUg7LMZPnRGlJ7YZ0rxNjAsN
z1b+vawL4azdjxTjKE/zSW6jeDR/E6Pmkhlh73f+IP1kwFKMdxZUqU7T/0O4
PE6MOfnXrh8L1ISPxaygZeYjf+x38Wcjms+JccbO2MTcpQLYyqjhtLtifDT1
ouZsNz7N65jPD5t/0eODHIhYe/tEjBOmu68KG9FAz2eK8a3foHhVuWbyjC1v
eWIs3vzUdoqlEs3zxDg7oJ9j8V8+LP+y4MDWIjHefrT2Js/WgOZ7Ynw2mbck
RpEPmjLAL8as95+ilPopApf3iXFw1pbz79/9Jkmsnatlfn5kM05g3kDPf4rR
anfY3HEBijCNXT6tYhRfWFbm1a5L80Ax2i2MWr58pT60M7t3a48YQ4XwtTNc
g+aDEjS2r414f7iDRLGvqybBhyHuD5dk1BMuL5Sg3chcm/B9PEDWvuhLUOFe
pkqWgE/zQwlmeVxy+FxtAhULWcImQZvPaqsuxfw/T5TgCbP5m1bIG0KoDJhI
8E70gX1pAlWaL0rwkKFP4f3TbaSPrKFKcGyU3o/qAZ00b5Tg5nH75FUPacBb
Vq4PlWCi/fZD888b0PxRgluuj89xvG8IgUtekGGeEvT56FK7f7M6zSOZ7/+O
u9h/SgsxZtT2Ni8JDuEdDZ469Tc97yrBqFMF/5S9VSCNjZ9mS5A3fp/j9scC
mlcyz7/gisaXVHNYIAOMEmz/VciPajCm+aUE197YaLb+Mx8UZQJUgs1FzVdX
Zv4/z5Tg9djRlYu8Gkl8NdsAJPjRIc9UzrOV5psSXDk30fxDiiKMZ+OWPRIM
4ZeahU7RonmnBEeKgv2q2rWggZVjhyUo5k22c5uvQvNPCc6KK68/ofKHHGdW
57DTEnTS/FUK1t8Il4dK0Kx3sGN9Zw0ZJAPyEmy0UtrTS0OO5qPM+C9L/fn3
tDaUsPHCDQn20p6+cm88n+alEkydPuNNgKYWhLDy464EH7zab/t6HY/mpxL8
75ttkP70BmLlxxJMCQbi0785ZS2Ey1MluNApdKCrhSK8YFbP9jwJTvGYrrlh
tAbNV5n19LypRG+sOvixOL1IgqoTxnXeG9lDuLxVgrvOKXywb6whurIAS4IT
63d2CnT////pJPjS/b7KrexGcsufBRwSLBka2eO0UpHmsRKsuHvkaXe4Jsz8
fZJxWBIs1p345o+TNs1nJRiXefXsNC9l6GLxcY8Ef6VFuJ5600a4vFaKhX2q
a0w+VpHzDYuDutWkuCGyZWsSttDzyVJUOldoKqpWgBHrWOIqxQ9i/ZA/Z1SA
y3OleKjzrsf4m0pQ08h+QYpnfh92H36+g55nluKisO9ak5n+cFAGBKX4dE50
U+bgT4TLe6W46evxwwGvK4izTDBKcdyMO4ZdPm30/LMUfU8/3vjgvhwUrmc3
gBQVvOIEww7K0TxYirvIYv3Oh50kuCWXcYRS/Ddi1OANwT/peWkp1h1/0fps
4SdixuJBLykedstbdH/UB8LlxVLUi26yCvWtJo9b2YIuxaoJkn5X9jbT89VS
zAiu119q+4cskQF0KQ5badfz7DnT/2V5shQzQ/vs37uygqjKDJYU+0btwuyN
efQ8thTnhPLkL0nzyXUWh22W4tZHuweOWV1NuLxZig/KvFcZVTWRyWx738OM
19igh2Ns2uj5bSnuSe4uefOwibQER46DI1IUWpjP33alknB5tBSjx4eMUO8p
JJFsOzrNPL9ewq3brwvoeW8p5vQ0fX2k+Z0MlQVOUgz8bd0U5f+DcHm1FOWr
rJSdZ9aQb2z5vCFFrSKvSnn7b/R8uBQnxReapBzLIXu2sERbisfKZ9sP2XuN
cHm2FMf313V6lfyY2LLbPZNZH45xvf3efKDnyaXoNnVkxmjPcpLH4o48KTrp
6en4x1QSLu9m5rvL7JI4qoysZZdnkRQjHlrmrg79QM+fS7HoaMxdvkU2MZAF
tFIEF8HskT/SCJeHS/G6ikZa/Yhsco8dzjop4tCvK5bdKaTn1Zn3qYr/L3VN
MZnD2vtWKabXNFa7bS8iXF4uxTFD3p9eK8wl3P82t8KSpDeFrfU3yP8A852E
lg==
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJw1Wwc4ld8ft/e6rnmtO5RQaaiUnPOlovFLmrSk0i5pl7a0aGiQtCUSCill
FJGsZIXsTcje83/f+56/p+fp8bj3fc97znd8xvflbDu4aoeIkJBQk6iQEPX/
/39avNTnLv27B4ksFv7JvuCB9040GX/3+DL5/T7ODbJ6On/aHSTaenHm9MSn
2PSAl27R6Tvk74F4a96+qegb//P+lkKGz0OwVJ1aYWXoYfL5tzjNR0Mh7/xB
JKK39b12RyR+EWY8pX3e/68fjWNmWOltOnoPiRx60aCvFINLJMxml5x7SK73
GRe6FVaH6z1CosnVmlOmxeMZ3ee3Z4nfI9f/gt/JGDtYbXVH7jJ3glivE/H+
/5J2nKi6QO6XhMfvuCnsmn8fufM/rWuWjL+afFi6Rz+A3D8Fz55y5tqdI8HI
fVPuH27adzzDdkrp1dJAsp4fmKG+StPR1w+5Xz7UPdEhDZu8bR99c+MMWV86
/rZS/p7MyDF06S1D3rgpA3sM/bk7dMKXrDcLR+ZEGoXvDUGXiiInmpz8iY9Y
h75LeBpF1p+NQ5XknW0bIpEV/2qaYjnYINWl6Wnra/I8OXhumN6uI1/uoW8q
g2Fa/+XifuPUL0Xy18nz5WIjk7aurNsvkJVh+med+3nYaGWlpaNmJHnefDzh
Rkrcn+oY9M3iYapeWT52UFhvidgx5PkLsJD/teulmhHIatWefI7+b+yQfq0l
69ojsh+/8QS/6bqf71xG33bOreLtL8QLNf51Juo8IftThL+MxridZUUhq9PS
/yZEF+Gy1raimvPxZL+K8bKN+RszihPRt9t/Bg1GijFzuqtrDSue7N8fLG5z
4nvh3HdoQWCIhNHCEqzYtXfxFsXnZD9LcNgvv+Sqwdco+dMp5uQbpbjn/s2g
Y7bxZH/L8O7bT42WLExFC34uYU8tKMNFsq+7F3LSyH6XY68+ln2J8A8k+Lh2
Bb7rtNylfcM3sv8VOOLLeeWM6Ei0oO/v3BnOldhrxFQpq+8pOY8qzNUY73Oa
GIG2iW/msdZV4T2WJUJ6hd/J+VThs6bWqpucClCA4ndDraEq/PJ5k4X3lj/k
vKpx3tqzUx+8LkA11O2fVmOLC9ONLaO+k/OrxvHCowZneRGIq+8zW8eqBn87
4ffQgxNFzrMGl1lu9nRQT0Pbpo7O122owaNzn+RVrCok51uLpQtYBUmW5SjA
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
WBBbOFodgui3zfXhs0jaB/e+m+h/04syDw==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[1, 0.85, 0.85]], 
            LineBox[CompressedData["
1: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
3Wqm9f839ChJxM4K/kbOzLyszIv9DZWZmxdV3mwibD34DWhTHmq2tpwkur09
LVwiiNm3Ts16fCqtD12QMObvnqErU0nJHAlNvksXHH7jHzO/opTWiy44HpTL
dTWuJR0LxkfwI7vg87v7S0411dH60QU2vlu26f37TNjX2wUXxq4qK+x5S9h6
8geSjnVeONWZTEatiLwmcPgDUbZOp7x+RRO2vvyBnt8r4hZWPyei2zn3B0K2
bL+6I+0dYevNH7gw82lT3YkKsmWDzC2T5j+wKqxrT47KF8LWn24gjv1WJmsr
yZmt9sNMbbth7wpuYd+tt7QedUPx8yK1Gr9kkhiw8a7psW7YPEtS3nrdHVqf
umGb5dlLht/SiOh4fukG3l335C/7imm96gGFHU2G3FllpGMfc2B74MilC2Wu
j8tp/eqBU/x/IRKLSonaYYWxZnt7IM8jTN438yVh61kPrGwYWzUx6DEZdRye
mpX2CPuJ+2afgSu0n/bAQFM3b0VFAvEQPUAv2FdNb71pmUPYetcLYhwP1fDa
IrLlwu20YTt64ZuLxZpTVcW0/vXC+5PZ1hGb88nZK5WThr/shahtRbM2aifT
etgL5ervbXvqLpNHUaIDCQenTVsXcOs6rY998DJdtdLD6CkpjXFwNF/fB9dK
+oLn+efTetkHDSXHxt81LyKdd3e8Nk/vg/wN1ydodr8kbP3sA8VZJn+3L0wj
6g/vulqo9sP13iGcN5dvEbae9sORes9l7vevkNHJ1e+ERwxOhvgfT1qfRNj6
2g9iZxKfPVHLI7NT1eeOeNwPVRm/Dd5w3hK23vZD5WaVYVnb3pKtGdM/jpAZ
gCyzF16fJhbQ+jsAl4dUTE84kELO5u5aaLlgALTO//D6sSGK1uMBkDYyTvTS
iyaPXt2vsrw7AK0t2dZmkErr8wDk73mmd/nmS1L6tn7Zf38HYLmcxqDv+kJa
r/9C0Z4PP5tNc0nne+3G/9z+QurDB8c1xZKpPvkL8WN8UlW+3yTqFU5rRkb9
haCtJZqBB24Ttp7/BX/lysfvlzwjo6v3fBvZ+Re2mJnkmGjm0Pr+D1qk5qY7
ZQmfv+HRBqup/0B62WVzscdZtN7/g/g/abXaJU/I1q/N7VYX/kFGWVewxJco
Wv//QVK65KWWZZcJUz2tv/4DK1WN6IH8RNoPBsFa5bSfHS+HPOp067G2H4Qz
nAjZZqU3tD8MQj1XSnW/5ltS2rN/16jjg3DBPvHigsZXtF8MglRUl8Udp0zS
+ffJv1HVgyAeNCb+xsz7tH+I4SrdfVeij94mR4f8ybioI4YmpkOfpxc+pf1E
DJWmHekA1xyiJ3mK2bJ4dsGFNwlP8mh/EcPSzRyu1vFsEifcjZfWiuFd47dO
c08/of1GDHd9LonLyrlO7ORyDlw6K4aE7yTXtP4S7T9i+CFzaaZxyyPySsE7
/9JzMVSRDjP7Mj6X9iPh/WSrZ/f6FREv5R7Zy41iODu5euzE98W0P4lhsbeT
c8ybItLKYSroELTbs+Kh84cMwvarISifuTPE61E8CRTu1svjh+DwTbtvvWi4
RfvXEMy9xNG5d+4ZkdfKe3N56RBUXJOlnlr6ivazIfg3vnS8nrC/XNJZqnLl
yBCcdEvV5FX1O9rfhuD11qx8z/rXxFy/z/1K4hAsquz619b4gva7Idj9JiFy
elsMeWYYfuZK5RCcuzW+7m93HO1/Q1Bb090z8FcWmSnczVckxfHolruThm1+
R/uhOD7MNSrm55WTCj5zIMTxcVRT2ZAdZbQ/iqPuu6UPNo56R9aaMhVfHL2G
2wQ2ncyk/VIcQ82qxx0ojSd9ZgMRV/eI4zgs/vS1M4X2T3EsrmtrX/yokBw1
P19x9Y44tm357jJJ7j3tp+JobC41rl6hnOgxj/tOHCP77860iimh/VUcDYd6
q60qzSVxI18tvtYnjpJt4Sppgfdpv5XA7V5N2RpW8cRO1EAkMDGX02p9IJf2
XwnMfrvVxXhbGXk15l/NNWcJ/HSix/a4eBXtxxKYECdYYKj9hXgx7WubBIbe
qAzVSnpH+7MEirmuqusxSiOttswFJLBv880XZ78l034tgQ1Xp32vMisigRMK
b0XmS+CEWXcGZwVV0P4tga6tp7UPHKkm8rCqObJNAhfOr1V4tfcz7eeSKFmo
XhitX0xE5VpXEgsHzm9qaXtC+7skzgjQeqhnm0CY3X99siSuiUwavXJYPu33
kpip0br7wuoK8mzamPjr6ySR/7sg9N7Jetr/JbH04KfIXdF1ZOaMoh/XwyXR
55Re01/3T1QPSGKPvbPU1aJcIipPLySxa/+ns8pZ8VQfSGKEqdPRW7UZZK0r
01ElMUtm2/f7Y/+vFyQxe1jDMHeHesLszigVKVyRlLJ9jOAr1Q9SWFc8iDW3
m8jR2eN+R9lIoZaB0yZv4f2yekIK0yKjpdI7hOd/XvFYoSbA23Zn/jyrz6T6
Qgqvmb8r4it+InGea3dEH5VCP+nwhMu+LVRvSOGaB1tSKgN/EbuFkinRj6Rw
9HfNzYE7W6j+kMIKxU+Lc/aUE2b3RH+WwlSTdQ2fHdOoHpHCuC+zeysvvyVe
S20m3JCSxh9b59sundpM9Yk0SmjM3tH9pp20+jAFXxrVjRrs7hj9oXpF+Hu9
e/di+9tJ4Eq/9BvzpdH7K69C80wD1S/SGFNbcGnY1tdEfo30kJsh0thhEosS
z/KonpHGg183XVlr20CYtytsufj16nJpMd0uqm+ksXn1Cc7ogwPEfL1d6M0S
aUyeeXbFlz9/qN6RRq+D2znqS76SZxvf597sl0Yd30Oh9nnvqf6RQa1r5RkH
rWvITNEfyKDDmMvh9Yc6qR6SQSW+3EO/k2JQ4S8745aLDA4MeOsoeAj9okgf
yaBr3jJPabm/hFn9W9tlsLV4R8SjA9+oXpLBe68OBgVNKCV9O5kDIIMHS698
2ylbS/WTDOq0Fw5N3/CHHA0qV4opkMEYseGOhXslgNVTMgjW+5e2qsqC3p5N
bjHtMijxpexNxXhJYPWVLDrde3Q60KOHxO1lCros+pUd3W6e3kL1lixKf5w3
3GX/T8KsToyDLI7TOHYzWF6M8hxZ9B3p7ZLTIg2vDhKN236yqLrWbfUOgRyw
ekwWy48tLwv3kAOvIx/n3j4niw/fRnbmXRCnflMW9aQ/ReWf7SStxxiFJYtv
VHqa2pbWU70mizMD8kOPFbWQwBOKn243y+Jvhcxms+4+qt9k0ep4h1m0iQSI
2hFHDhP9n/T1caSA1XNy6J0RuPLBjEFy6SwuumMrh4Pjdk53M/pJ9Z0cnpI0
U3yyuJSIyqePHJ7LGb3GxrOV6j05HCP71sKWiMOzCP/qO8fk8JrzLtkdHYqU
vwg/3zYzUytKHZyY454kvH760DLvOg6welAO0y5Or51RMQQqhd8e+0UOA66d
qlTc/53qQzkcdyZ4svTpNrJOtD3lsfxRzKtDPyWA1YvyaGJnfmH+Ow70RzOC
Rh79pogfa3BRp7xHHq03+mV8GKsMx5jl9JTHZbXxz4a0/qV6Uh7jwucOtH2s
Ifp3OL7Cd4wzpgrqB6JaqL6Ux+1Hygu6t0jC3TjmH3n0JV6tj0erA6s35dF1
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
/21ugh+63Etz2s+R/wHt6ei8
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny], 
             RGBColor[0.5, 0, 0.5]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10.}, {0, 0.00570261629645271}}, PlotRangeClipping -> 
         True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"\"", TraditionalForm], None}, {
            FormBox["\"x(\[Mu]m)\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\\!\\(\\*SubscriptBox[\\(V\\), \\(Z\\)]\\)=2.6(meV)\"", 
           TraditionalForm], 
         PlotRange -> {{0, 10.}, {0, 0.00570261629645271}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"1st \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"2nd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"3rd \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\) H\"", 
           "\"4th \\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\) H\""}, 
          "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}, {
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                   ",", #7, ",", #8}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.755504326666164*^9, 3.7555043439434676`*^9}, {
   3.755505789834924*^9, 3.7555058566111336`*^9}, 3.7555060597132177`*^9, 
   3.7555060898314967`*^9, {3.7555061290348854`*^9, 3.755506192601372*^9}, 
   3.755506286954006*^9, {3.755506511686955*^9, 3.7555065740555997`*^9}, {
   3.7555066956893425`*^9, 3.755506928055628*^9}, 3.7555094821290245`*^9, 
   3.7555095649569073`*^9, 3.75550961440012*^9, 3.7555096599519567`*^9, 
   3.7555097036950493`*^9, 3.755510111944743*^9, 3.755510181827833*^9, 
   3.7555102344251766`*^9, 3.755511909335272*^9, 3.755511942155181*^9, 
   3.7555131733821745`*^9, 3.7555145814482155`*^9, 3.75551466781015*^9, 
   3.75551475804554*^9, 3.755514813784305*^9, 3.7555149048078136`*^9, 
   3.755514974484082*^9, 
   3.7555150527970657`*^9},ExpressionUUID->"e8608f0e-c79a-45bf-83aa-\
5d7466bdc415"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hmbp", "[", 
   RowBox[{
   "\[Mu]0_", ",", "\[CapitalDelta]0_", ",", "\[Alpha]0_", ",", "V0_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "H11", ",", "H12", ",", "H22", ",", "H", ",", "Hmb22", ",", "Hmb11", ",",
       "Hmb12", ",", 
      RowBox[{"\[Eta]", "=", "25"}], ",", "k", ",", 
      RowBox[{"\[Mu]", "=", "\[Mu]0"}], ",", 
      RowBox[{"V", "=", "V0"}], ",", 
      RowBox[{"\[Alpha]", "=", "\[Alpha]0"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "\[CapitalDelta]0"}], ",", 
      RowBox[{"\[CapitalDelta]c", "=", ".2"}], ",", "Hp", ",", 
      RowBox[{"\[Epsilon]", "=", "0"}], ",", "sl", ",", 
      RowBox[{"u", "=", ".5"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"H11", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Eta]", " ", 
           RowBox[{"k", "^", "2"}]}], " ", "-", "\[Mu]"}], ")"}], "*", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
       RowBox[{"V", " ", 
        RowBox[{"PauliMatrix", "[", "3", "]"}]}], "-", 
       RowBox[{"\[Alpha]", " ", "k", " ", 
        RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], ";", 
     RowBox[{"H12", "=", 
      RowBox[{"\[CapitalDelta]", " ", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], ";", 
     RowBox[{"H22", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Eta]", " ", 
            RowBox[{"k", "^", "2"}]}], " ", "-", "\[Mu]"}], ")"}]}], "*", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
       RowBox[{"V", " ", 
        RowBox[{"PauliMatrix", "[", "3", "]"}]}], "+", 
       RowBox[{"\[Alpha]", " ", "k", " ", 
        RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], ";", 
     RowBox[{"H", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H11", ",", "H12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"H12", ",", "H22"}], "}"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"Hmb22", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Eta]", " ", 
                RowBox[{"k", "^", "2"}]}], " ", "-", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", "\[Epsilon]"}], ")"}]}], ")"}], "*", 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"V", " ", 
             RowBox[{"PauliMatrix", "[", "3", "]"}]}], "-", 
            RowBox[{"\[Alpha]", " ", "k", " ", 
             RowBox[{"PauliMatrix", "[", "2", "]"}]}]}], ",", 
           RowBox[{"\[CapitalDelta]", " ", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]", " ", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Eta]", " ", 
                 RowBox[{"k", "^", "2"}]}], " ", "-", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "-", "\[Epsilon]"}], ")"}]}], ")"}]}], "*", 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"V", " ", 
             RowBox[{"PauliMatrix", "[", "3", "]"}]}], "+", 
            RowBox[{"\[Alpha]", " ", "k", " ", 
             RowBox[{"PauliMatrix", "[", "2", "]"}]}]}]}], "}"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"Hmb11", "=", "H"}], ";", 
     RowBox[{"Hmb12", "=", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], 
       "\[CapitalDelta]c"}]}], ";", 
     RowBox[{"Hp", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Hmb11", ",", "Hmb12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Hmb12", ",", "Hmb22"}], "}"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"sl", "=", 
      RowBox[{"Eigenvalues", "[", "Hp", "]"}]}], ";", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Table", "[", 
         RowBox[{"sl", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"-", "u"}], ",", "u", ",", ".01"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "u"}], ",", "u"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "u"}], ",", "u"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "LightBlue", ",", "Red", ",", "LightRed"}], 
         "}"}]}], ",", 
       RowBox[{
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"sl", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "/.", 
        RowBox[{"k", "\[Rule]", "0"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7447262906743927`*^9, 3.7447266335471315`*^9}, {
  3.7447266931490993`*^9, 3.7447267973487916`*^9}, {3.744726885645029*^9, 
  3.744727001946761*^9}, {3.744727246621029*^9, 3.744727473874261*^9}, {
  3.7447275700703115`*^9, 3.744727570180249*^9}, {3.744727951577109*^9, 
  3.7447279786406593`*^9}, {3.744728134227785*^9, 3.7447281392459188`*^9}, {
  3.744728250799217*^9, 3.7447282646782923`*^9}, {3.7447283079256177`*^9, 
  3.7447283933438177`*^9}, {3.744728449787551*^9, 3.744728450752008*^9}, {
  3.7447285218034244`*^9, 3.744728522966769*^9}, {3.744728554947725*^9, 
  3.7447285684348154`*^9}, {3.744728598612336*^9, 3.744728609655038*^9}, {
  3.7447313648533196`*^9, 3.744731399131024*^9}, {3.744736899171209*^9, 
  3.744736944368393*^9}, {3.7447370358108025`*^9, 3.7447370382334375`*^9}, {
  3.744737085760227*^9, 
  3.7447370859111414`*^9}},ExpressionUUID->"2329ef32-6948-4764-99fc-\
9476436d9b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Hmbp", "[", 
    RowBox[{"\[Mu]x", ",", "\[CapitalDelta]x", ",", "\[Alpha]x", ",", "Vx"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalDelta]x", ",", "0", ",", "0.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]x", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vx", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447274780658755`*^9, 3.744727558115157*^9}, {
  3.7447275982852507`*^9, 3.7447275993706117`*^9}, {3.744728703686674*^9, 
  3.744728703816575*^9}},ExpressionUUID->"5d7c6d22-10dd-47cf-848c-\
604b3d6fc09b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Vx$$ = 0, $CellContext`\[Alpha]x$$ = 
    2, $CellContext`\[CapitalDelta]x$$ = 0.2, $CellContext`\[Mu]x$$ = 1.27, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Mu]x$$], 0, 2}, {
      Hold[$CellContext`\[CapitalDelta]x$$], 0, 0.2}, {
      Hold[$CellContext`\[Alpha]x$$], 1, 3}, {
      Hold[$CellContext`Vx$$], 0, 2}}, Typeset`size$$ = {360., {127., 133.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Mu]x$2249$$ = 
    0, $CellContext`\[CapitalDelta]x$2254$$ = 
    0, $CellContext`\[Alpha]x$2255$$ = 0, $CellContext`Vx$2256$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Vx$$ = 0, $CellContext`\[Alpha]x$$ = 
        1, $CellContext`\[CapitalDelta]x$$ = 0, $CellContext`\[Mu]x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Mu]x$$, $CellContext`\[Mu]x$2249$$, 0], 
        Hold[$CellContext`\[CapitalDelta]x$$, \
$CellContext`\[CapitalDelta]x$2254$$, 0], 
        Hold[$CellContext`\[Alpha]x$$, $CellContext`\[Alpha]x$2255$$, 0], 
        Hold[$CellContext`Vx$$, $CellContext`Vx$2256$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`Hmbp[$CellContext`\[Mu]x$$, $CellContext`\
\[CapitalDelta]x$$, $CellContext`\[Alpha]x$$, $CellContext`Vx$$], 
      "Specifications" :> {{$CellContext`\[Mu]x$$, 0, 
         2}, {$CellContext`\[CapitalDelta]x$$, 0, 
         0.2}, {$CellContext`\[Alpha]x$$, 1, 3}, {$CellContext`Vx$$, 0, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {216., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`Hmbp[
         Pattern[$CellContext`\[Mu]0, 
          Blank[]], 
         Pattern[$CellContext`\[CapitalDelta]0, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha]0, 
          Blank[]], 
         Pattern[$CellContext`V0, 
          Blank[]]] := 
       Block[{$CellContext`H11, $CellContext`H12, $CellContext`H22, \
$CellContext`H, $CellContext`Hmb22, $CellContext`Hmb11, $CellContext`Hmb12, \
$CellContext`\[Eta] = 
          25, $CellContext`k, $CellContext`\[Mu] = $CellContext`\[Mu]0, \
$CellContext`V = $CellContext`V0, $CellContext`\[Alpha] = $CellContext`\
\[Alpha]0, $CellContext`\[CapitalDelta] = $CellContext`\[CapitalDelta]0, \
$CellContext`\[CapitalDelta]c = 0.2, $CellContext`Hp, $CellContext`\[Epsilon] = 
          0, $CellContext`sl, $CellContext`u = 
          0.5}, $CellContext`H11 = ($CellContext`\[Eta] $CellContext`k^2 - \
$CellContext`\[Mu]) IdentityMatrix[2] + $CellContext`V 
            PauliMatrix[3] - ($CellContext`\[Alpha] $CellContext`k) 
           PauliMatrix[2]; $CellContext`H12 = $CellContext`\[CapitalDelta] 
           IdentityMatrix[
            2]; $CellContext`H22 = -(($CellContext`\[Eta] $CellContext`k^2 - \
$CellContext`\[Mu]) IdentityMatrix[2]) + $CellContext`V 
            PauliMatrix[3] + ($CellContext`\[Alpha] $CellContext`k) 
            PauliMatrix[2]; $CellContext`H = 
          ArrayFlatten[{{$CellContext`H11, $CellContext`H12}, \
{$CellContext`H12, $CellContext`H22}}]; $CellContext`Hmb22 = 
          ArrayFlatten[{{($CellContext`\[Eta] $CellContext`k^2 - \
($CellContext`\[Mu] - $CellContext`\[Epsilon])) 
               IdentityMatrix[2] + $CellContext`V 
               PauliMatrix[3] - ($CellContext`\[Alpha] $CellContext`k) 
              PauliMatrix[2], $CellContext`\[CapitalDelta] 
              IdentityMatrix[2]}, {$CellContext`\[CapitalDelta] 
              IdentityMatrix[
               2], -(($CellContext`\[Eta] $CellContext`k^2 - ($CellContext`\
\[Mu] - $CellContext`\[Epsilon])) IdentityMatrix[2]) + $CellContext`V 
               PauliMatrix[3] + ($CellContext`\[Alpha] $CellContext`k) 
               PauliMatrix[
                2]}}]; $CellContext`Hmb11 = $CellContext`H; \
$CellContext`Hmb12 = KroneckerProduct[
             PauliMatrix[1], 
             IdentityMatrix[
             2]] $CellContext`\[CapitalDelta]c; $CellContext`Hp = 
          ArrayFlatten[{{$CellContext`Hmb11, $CellContext`Hmb12}, \
{$CellContext`Hmb12, $CellContext`Hmb22}}]; $CellContext`sl = 
          Eigenvalues[$CellContext`Hp]; ListLinePlot[
           Transpose[
            
            Table[$CellContext`sl, {$CellContext`k, -$CellContext`u, \
$CellContext`u, 0.01}]], DataRange -> {-$CellContext`u, $CellContext`u}, 
           PlotRange -> {{-$CellContext`u, $CellContext`u}, {0, 2}}, 
           PlotStyle -> {Blue, LightBlue, Red, LightRed}, 
           ReplaceAll[
           PlotLabel -> Part[$CellContext`sl, 5], $CellContext`k -> 0]]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.74526088936207*^9},ExpressionUUID->"321ffe08-2f86-4b2d-9271-e276b27cbe1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.02"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"Eigenvalues", "[", 
            RowBox[{
             RowBox[{"Hmb", "[", 
              RowBox[{
              "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
               "\[Alpha]", ",", "3000"}], "]"}], ",", 
             RowBox[{"-", "20"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Arnoldi\>\"", ",", 
                RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
                ",", 
                RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}],
                "}"}]}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444209953513603`*^9, 3.744421122022649*^9}, {
  3.7444211563358727`*^9, 3.7444211839363956`*^9}, {3.7444214145696507`*^9, 
  3.744421462593421*^9}, {3.7444671431860485`*^9, 3.74446714338491*^9}, {
  3.7444675410160303`*^9, 
  3.744467547544303*^9}},ExpressionUUID->"3d298fc4-e2ba-460c-9842-\
c9418c895a41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.18330527380480588`", ",", "0.1687861079174257`", ",", 
   "0.14891304916751155`", ",", "0.12891563284293456`", ",", 
   "0.10891840122884315`", ",", "0.08892202658350556`", ",", 
   "0.0689274714846928`", ",", "0.04893705177251509`", ",", 
   "0.02895911209456521`", ",", "0.009066873145708376`", ",", 
   "1.4676461573153879`*^-10", ",", "0.031150774698447674`", ",", 
   "2.2202734870247624`*^-15", ",", "8.066058131768429`*^-16", ",", 
   "5.153327255003878`*^-16", ",", "9.373919772518828`*^-16", ",", 
   "0.11692186027912746`", ",", "1.6869073554843883`*^-15", ",", 
   "2.573462789996764`*^-15", ",", "1.0877545415904812`*^-15", ",", 
   "6.749418291918407`*^-16", ",", "1.4031510861363783`*^-15", ",", 
   "1.0917398131066817`*^-15", ",", "0.10261673006600325`", ",", 
   "1.4936502393399294`*^-15", ",", "1.2424555986530982`*^-15", ",", 
   "0.09789522417537976`", ",", "7.845291700085082`*^-16", ",", 
   "8.350013697762366`*^-17", ",", "1.445917284639284`*^-16", ",", 
   "6.962231454456089`*^-16", ",", "2.5974395373848188`*^-17", ",", 
   "1.3203347690295076`*^-15", ",", "1.0513984914141483`*^-16", ",", 
   "3.5114572926739767`*^-16", ",", "4.4390759614728793`*^-16", ",", 
   "7.459942984342737`*^-16", ",", "5.762197243872052`*^-15", ",", 
   "7.750788270792742`*^-15", ",", "1.9278816766255285`*^-14", ",", 
   "3.9777520391445365`*^-14", ",", "8.070503142781562`*^-14", ",", 
   "1.524018645851602`*^-13", ",", "2.8874200363170233`*^-13", ",", 
   "5.019734449801442`*^-13", ",", "8.006420711324854`*^-13", ",", 
   "1.0411117054432505`*^-12", ",", "8.434946944824635`*^-13", ",", 
   "6.012000310303554`*^-13", ",", "3.4516838213965017`*^-15", ",", 
   "3.33276619408426`*^-15"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745261145042797*^9},ExpressionUUID->"d992fb7e-81d4-4457-bc9e-\
b27e4f2c4595"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.02"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vz", ",", 
        RowBox[{"Min", "@", 
         RowBox[{"Abs", "@", 
          RowBox[{"Eigenvalues", "[", 
           RowBox[{
            RowBox[{"Hmb", "[", 
             RowBox[{
             "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
              "\[Alpha]", ",", "3000"}], "]"}], ",", 
            RowBox[{"-", "20"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Arnoldi\>\"", ",", 
               RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
               ",", 
               RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}], 
              "}"}]}]}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444676801383963`*^9, 3.7444677399456024`*^9}, {
  3.74446781323557*^9, 
  3.744467840587977*^9}},ExpressionUUID->"48b50dfb-5f90-47e8-a67c-\
c01e5aa5929a"],

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vzm", "=", "1"}], ",", 
      RowBox[{"vzstep", "=", "0.01"}], ",", 
      RowBox[{"\[Mu]", "=", "0.1"}], ",", 
      RowBox[{"\[Alpha]", "=", "2"}], ",", 
      RowBox[{"\[CapitalDelta]", "=", "0.2"}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"Eigenvalues", "[", 
            RowBox[{
             RowBox[{"SparseArray", "@", 
              RowBox[{"Hc", "[", 
               RowBox[{
               "1", ",", "\[Mu]", ",", "\[CapitalDelta]", ",", "vz", ",", 
                "\[Alpha]", ",", "3000"}], "]"}]}], ",", 
             RowBox[{"-", "10"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Arnoldi\>\"", ",", 
                RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<Magnitude\>\""}], 
                ",", 
                RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "\[Infinity]"}]}],
                "}"}]}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"vz", ",", "0", ",", "vzm", ",", "vzstep"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7444209953513603`*^9, 3.744421122022649*^9}, {
  3.7444211563358727`*^9, 3.7444211839363956`*^9}, {3.7444214145696507`*^9, 
  3.744421462593421*^9}, {3.744421743490605*^9, 
  3.7444217454782896`*^9}},ExpressionUUID->"45535e27-d6ab-4fde-ae68-\
e0c48dad0aa4"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "vz", "]"}]], "Input",
 CellChangeTimes->{{3.7444211578388824`*^9, 
  3.7444211775161495`*^9}},ExpressionUUID->"b67fed22-b137-428f-8e83-\
9fa5fbf9d438"],

Cell[BoxData[
 RowBox[{"data", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.744468086702876*^9, 
  3.744468088772694*^9}},ExpressionUUID->"aa2e6e9b-deee-4d84-8374-\
e31ae74e5925"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744421662400079*^9, 3.7444216785249166`*^9}, {
  3.7444679375478973`*^9, 
  3.744467950056754*^9}},ExpressionUUID->"9bd5f7ce-e207-43af-83aa-\
9d334789c8c9"],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.05meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.7447451030448985`*^9, 
  3.744745103620572*^9}},ExpressionUUID->"d2fa7534-b927-4086-804e-\
470bd2bdd27d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p05", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.05.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447451054945035`*^9, 
  3.7447451085087986`*^9}},ExpressionUUID->"34647beb-c01b-4899-8372-\
d7e6d3420d96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p05"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.7447451125974684`*^9, 
  3.7447451132170887`*^9}},ExpressionUUID->"9cd1ff17-ebd9-4181-9173-\
a230bd45743c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.1meV", "Subsection",
 CellChangeTimes->{{3.7447351589888496`*^9, 
  3.7447351636511855`*^9}},ExpressionUUID->"8a2dc1f5-4005-4933-a865-\
d180e4eb6a1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.1.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444693604806414`*^9, 3.7444693831377783`*^9}, {
  3.744470865173907*^9, 3.744470891590144*^9}, {3.7444776391384597`*^9, 
  3.7444776565269003`*^9}, {3.7447390303306456`*^9, 
  3.7447390306344643`*^9}},ExpressionUUID->"26771f19-db62-4ebc-9884-\
3c064962128a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p1"}]], "Input",
 CellChangeTimes->{{3.744469388697604*^9, 3.744469461186886*^9}, 
   3.744470906269737*^9, {3.7444776747695007`*^9, 3.74447769940843*^9}, {
   3.7447390371067743`*^9, 
   3.7447390425216775`*^9}},ExpressionUUID->"da3f7cc7-f781-40d9-b7a8-\
ccb4dcd46b35"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p1", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444694763282576`*^9, 3.7444695617020807`*^9}, {
  3.744470927584589*^9, 3.744470932888536*^9}, {3.7444777253596153`*^9, 
  3.7444777422435927`*^9}},ExpressionUUID->"d6f7f71b-c640-466d-aac6-\
e21f199896e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.15meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.744745127643877*^9, 
  3.744745128148563*^9}},ExpressionUUID->"bd9d587e-7198-42db-9194-\
a5b4b4b6fc01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p15", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.15.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447451304372797`*^9, 
  3.744745137293359*^9}},ExpressionUUID->"21e43e58-c7a4-4fa3-8998-\
21cf05bea92a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p15"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.7447451322052717`*^9, 
  3.744745132486104*^9}},ExpressionUUID->"ae61ee0f-6951-4865-97b2-\
642a9918cd6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.2meV", "Subsection",
 CellChangeTimes->{{3.7444806991072645`*^9, 
  3.74448070751149*^9}},ExpressionUUID->"9d23e9fb-b40b-4819-a935-\
ac217423d33c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.2.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444777582204695`*^9, 3.7444777606680746`*^9}, {
  3.744734193101802*^9, 
  3.744734193422617*^9}},ExpressionUUID->"5501f436-abe2-455c-9ddd-\
813758344d3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p2"}]], "Input",
 CellChangeTimes->{{3.7444777723094473`*^9, 
  3.744477772468357*^9}},ExpressionUUID->"b42e5751-77e7-47bf-b263-\
c46592fc5b08"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p2", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444694763282576`*^9, 3.7444695617020807`*^9}, {
  3.744470927584589*^9, 3.744470932888536*^9}, {3.7444777253596153`*^9, 
  3.7444777422435927`*^9}, {3.744477786926076*^9, 
  3.7444777870230403`*^9}},ExpressionUUID->"18f66eb0-d412-492e-b1b4-\
93cbc7d5a2c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bottom", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\b.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444807337924747`*^9, 
  3.7444807430631623`*^9}},ExpressionUUID->"99ca0bd4-9919-4eeb-a9e9-\
1eb32c461820"],

Cell[BoxData[
 RowBox[{
  RowBox[{"upper", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\u.dat\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74448074557273*^9, 
  3.744480753880004*^9}},ExpressionUUID->"3412c9e6-bfc8-4776-a61b-\
4deab007aa2a"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"bottom", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744480760241378*^9, 
  3.744480770352579*^9}},ExpressionUUID->"cd002c36-e319-4686-bfb0-\
09080a6d2cae"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"upper", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744480775312765*^9, 
  3.7444807831522875`*^9}},ExpressionUUID->"5067bb2d-d01a-4924-9e0b-\
178053edec8a"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"DataRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"ToString", "@", "#4"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"bottom", ",", "upper", ",", "delta120p2", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "2", ",", ".05"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444808081560163`*^9, 3.744480972990719*^9}, {
  3.7446545312054152`*^9, 3.7446545864166045`*^9}, {3.744724399086091*^9, 
  3.7447243992969885`*^9}},ExpressionUUID->"fb80be6a-a773-45d1-b092-\
7207e799fc4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.3meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 
  3.744480716992052*^9}},ExpressionUUID->"d767949e-2baf-4208-b47c-\
5f9c69fa854d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.3.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 
  3.744739081113639*^9}},ExpressionUUID->"141319a9-c5e1-4337-91c6-\
f1386cd1dcc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p3"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 
  3.7444778178604116`*^9}},ExpressionUUID->"1016eba9-6578-4472-a62c-\
31f9f2492cf6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[CapitalDelta]12=.4meV", "Subsection",
 CellChangeTimes->{{3.7444807119839306`*^9, 3.744480716992052*^9}, {
  3.744745058126552*^9, 
  3.744745058252477*^9}},ExpressionUUID->"c5c2a5b2-b8ed-42cf-a83e-\
554fc461b34b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"delta120p4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\deltac0.4.dat\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7444778064129725`*^9, 3.7444778086686773`*^9}, {
  3.7447390808897734`*^9, 3.744739081113639*^9}, {3.7447450603342905`*^9, 
  3.744745062411103*^9}},ExpressionUUID->"c058ce51-42b2-48f3-8330-\
099cc06bf84e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "&"}], "/@", 
  "delta120p4"}]], "Input",
 CellChangeTimes->{{3.744477817308751*^9, 3.7444778178604116`*^9}, {
  3.744745064693825*^9, 
  3.7447450649406586`*^9}},ExpressionUUID->"41e96805-bc71-4492-bf66-\
cf8e40ecb9d2"],

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"delta120p3", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)(meV)\>\"", ",", 
      "\"\<\[Mu](meV)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7444778298455915`*^9, 
  3.7444778299644985`*^9}},ExpressionUUID->"9c28502d-fa6a-4701-86b2-\
ab8df4d233a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Mu] from 0-2", "Subsection",
 CellChangeTimes->{{3.7448347623315897`*^9, 
  3.74483477734002*^9}},ExpressionUUID->"ef0d98f3-ef91-4c8f-8268-\
96feb09feb23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"muvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", "\"\<mu\>\"",
        "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.dat\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2.0", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.74474523156453*^9, 3.7447453467897296`*^9}, {
   3.744745497135309*^9, 3.744745511801927*^9}, {3.7447455506627426`*^9, 
   3.744745620665741*^9}, {3.744745760264023*^9, 3.744745786304152*^9}, 
   3.7447458517038293`*^9, {3.7447475491362925`*^9, 3.744747564981228*^9}, 
   3.7447523425631037`*^9, {3.744834576142435*^9, 3.74483458121465*^9}, {
   3.74483469115557*^9, 3.7448347004229927`*^9}, {3.745169597310978*^9, 
   3.745169607827976*^9}},ExpressionUUID->"c74eba06-08ac-4fc6-a629-\
c4f99013f697"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.744749202639727*^9, 
  3.744749204861477*^9}},ExpressionUUID->"97f3446a-a532-4bd5-8dec-\
8f1f5c64a008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fnmuvaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.0", ",", "2.0", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.744838118870496*^9, 3.7448381586238956`*^9}, {
  3.7451696169247847`*^9, 
  3.74516961831699*^9}},ExpressionUUID->"9023d925-be86-43c7-88a2-\
5583cd2941b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"mu0.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.05Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.1Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.15Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.2Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.25Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.3Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.35Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.4Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.45Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.5Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.55Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.6Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.65Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.7Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.75Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu0.8Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu0.85Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.9Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu0.95Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.05Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.1Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.15Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.2Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.25Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.3Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.35Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.4Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.45Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.5Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.55Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.6Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.65Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.7Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.75Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu1.8Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>", 
   ",", "\<\"mu1.85Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.9Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>",
    ",", "\<\"mu1.95Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>\
", ",", "\<\"mu2.0Delta0.4alpha2Deltac0.4epsilon0.5L3000-2.048,0.8-.png\"\>"}]\
, "}"}]], "Output",
 CellChangeTimes->{
  3.745169621003457*^9},ExpressionUUID->"73845f08-e5f1-434f-b2d2-\
bdea2730d5d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<Delta0.2alpha2Deltac0.2epsilon1L3000-1.024,0.3-.dat\>\""}], 
       "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.05"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7447458575594673`*^9, 3.7447458839414206`*^9}, {
   3.7447459600339413`*^9, 3.744745969808384*^9}, {3.7447462987708235`*^9, 
   3.744746301356326*^9}, 3.74474700912817*^9, 
   3.7447475621418467`*^9},ExpressionUUID->"fe574cb9-135c-4574-806b-\
2023e56aa893"],

Cell[BoxData[
 RowBox[{"conductanceplot\[Mu]", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.002", "*", 
             RowBox[{"2", "^", "10"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".8"}], ",", ".8"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", ".8"}], ",", ".8", ",", ".2"}], "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".5", ",", "1", ",", "1.5", ",", "2"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Mu]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"muvaries", ",", 
      RowBox[{"(*", 
       RowBox[{"delta120p2", ","}], "*)"}], 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.05"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.7448355284073133`*^9, 
   3.744835585932886*^9}, {3.744835643197753*^9, 3.7448356433456526`*^9}, {
   3.744853183973321*^9, 3.744853189092292*^9}, {3.744853383878191*^9, 
   3.74485339688457*^9}, {3.7451696259506335`*^9, 
   3.7451696361248283`*^9}},ExpressionUUID->"763b0d62-4146-42d7-beb1-\
cc98b06786a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnmuvaries", ",", "conductanceplot\[Mu]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.744761564636625*^9, {3.7447725127835035`*^9, 3.744772588288953*^9}, {
   3.7447727672378254`*^9, 3.744772776541478*^9}, {3.744838185370886*^9, 
   3.7448381863782935`*^9}, 3.744838493923781*^9, 3.7448385254284873`*^9, {
   3.744839022335852*^9, 
   3.7448390507112317`*^9}},ExpressionUUID->"7269419c-4297-42a8-b24d-\
52e20646ad84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.05Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.1Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.15Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.2Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.25Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.3Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.35Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.4Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.45Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.5Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.55Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.6Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.65Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.7Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.75Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.8Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.85Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.9Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu0.95Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.05Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.1Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.15Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.2Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.25Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.3Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.35Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.4Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.45Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.5Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.55Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.6Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.65Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.7Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.75Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.8Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.85Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.9Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu1.95Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>", 
   ",", "\<\"D:\\\\Nanowire\\\\fitexpSA\\\\multiband_mma\\\\mu2.0Delta0.\
2alpha2Deltac0.2epsilon1L3000-2.048,0.3-.png\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.74485340592432*^9, 
  3.744855189299383*^9},ExpressionUUID->"14bae9ad-ae88-4807-943b-\
0f1841916072"]
}, Open  ]]
}, Open  ]],

Cell["", "Subsection",ExpressionUUID->"96060d94-2783-4aff-b420-b079558d5e8f"],

Cell[CellGroupData[{

Cell["\[CapitalDelta]c varies", "Subsection",
 CellChangeTimes->{{3.7448347956816163`*^9, 3.7448348003823166`*^9}, {
  3.744834959547308*^9, 3.744834961168947*^9}, {3.744835051535283*^9, 
  3.7448350527885675`*^9}},ExpressionUUID->"f941901e-9a41-4db4-9acd-\
f540b4435f28"],

Cell[BoxData[
 RowBox[{"fndeltavaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<epsilon1.0L3000-1.024,0.3-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7448349631088386`*^9, 3.7448349663749733`*^9}, {
   3.7448475296762023`*^9, 3.744847570367942*^9}, {3.744847708026814*^9, 
   3.744847710489725*^9}, 
   3.744847883789257*^9},ExpressionUUID->"8f1b2f55-e15b-4baf-8e59-\
9bf7acf5c710"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<epsilon1.0L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", 
      "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7448349952755575`*^9, 3.744835014499342*^9}, {
  3.744835063488674*^9, 3.7448350877104187`*^9}, {3.744835187933354*^9, 
  3.744835214767276*^9}, {3.744835307719739*^9, 
  3.7448353079446273`*^9}},ExpressionUUID->"1f36528b-93ce-45aa-9de0-\
00ea1704c85b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deltacvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
       "\"\<mu0.2Delta0.2alpha2Deltac\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<epsilon1.0L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", ".4", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.74474523156453*^9, 3.7447453467897296`*^9}, {
   3.744745497135309*^9, 3.744745511801927*^9}, {3.7447455506627426`*^9, 
   3.744745620665741*^9}, {3.744745760264023*^9, 3.744745786304152*^9}, 
   3.7447458517038293`*^9, {3.7447475491362925`*^9, 3.744747564981228*^9}, 
   3.7447523425631037`*^9, {3.744834576142435*^9, 3.74483458121465*^9}, {
   3.74483469115557*^9, 3.7448347004229927`*^9}, {3.7448353631181707`*^9, 
   3.744835364208576*^9}, {3.744835468257755*^9, 
   3.7448355118717227`*^9}},ExpressionUUID->"fa1c33c0-29a5-4b02-b1ae-\
03ec947a01ed"],

Cell[BoxData[
 RowBox[{"conductanceplot\[CapitalDelta]c", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\), \(C\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"deltacvaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", ".4", ",", "0.05"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 
   3.7448356328050036`*^9}},ExpressionUUID->"f36fb924-bcb9-4dd4-b9a9-\
e437cb57e951"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fndeltavaries", ",", "conductanceplot\[CapitalDelta]c"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.744761564636625*^9, {3.7447725127835035`*^9, 3.744772588288953*^9}, {
   3.7447727672378254`*^9, 3.744772776541478*^9}, {3.744838185370886*^9, 
   3.7448381863782935`*^9}, 3.744838493923781*^9, 3.7448385254284873`*^9, {
   3.744839022335852*^9, 3.7448390507112317`*^9}, {3.744847686797475*^9, 
   3.744847693295437*^9}},ExpressionUUID->"ceea8a41-52f3-4dd9-8d83-\
db3df9927c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Epsilon] (\[Mu] to the bottom) varies", "Subsection",
 CellChangeTimes->{{3.744835683058298*^9, 3.744835698738778*^9}, {
  3.744835971613984*^9, 
  3.744835974775179*^9}},ExpressionUUID->"14e052f7-e290-440c-9e9d-\
4f8a39ca9f9e"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448357586694956`*^9, 3.7448357703557844`*^9}, {
  3.74483580967109*^9, 3.7448358277120037`*^9}, {3.7448482462333117`*^9, 
  3.7448482607277236`*^9}},ExpressionUUID->"43f26a91-55b6-4d7d-b6e1-\
199ea336249c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fnepsilonbottomvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
        RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
      "\"\<L3000-1.024,0.3-.png\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744848158973011*^9, 3.744848189103468*^9}, {
  3.744848253375334*^9, 
  3.744848254415722*^9}},ExpressionUUID->"40af13d8-8a17-4256-a667-\
45419d6fc671"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epsilonbottomvaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
       "\"\<mu0.2Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744835843243782*^9, 
  3.744835899122765*^9}},ExpressionUUID->"a6b65db1-7044-4bf8-9ab9-\
22618518e919"],

Cell[BoxData[
 RowBox[{"conductanceplotepsilonbottom", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"epsilonbottomvaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.25"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 3.7448356328050036`*^9}, {3.744835915995617*^9, 
   3.744835943423028*^9}, {3.744836011568924*^9, 
   3.744836021859753*^9}},ExpressionUUID->"49778792-14d2-435e-9470-\
505c7f59b279"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnepsilonbottomvaries", ",", "conductanceplotepsilonbottom"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744848237247243*^9, 
  3.744848294710757*^9}},ExpressionUUID->"719eeef3-2d11-405e-ae42-\
a8a7ac4716b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Epsilon] (\[Mu] to the upper) varies", "Subsection",
 CellChangeTimes->{{3.744835953042535*^9, 
  3.744835967669237*^9}},ExpressionUUID->"45daf945-bf98-448e-b420-\
2d7d437b69d7"],

Cell[BoxData[
 RowBox[{"fnepsilonuppervaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\"\<mu\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"i", "+", ".2"}], "]"}], "<>", 
     "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
     "\"\<L3000-1.024,0.3-.png\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.744836816194275*^9, 3.744836873052038*^9}, {
  3.7448375956608825`*^9, 3.7448375965603695`*^9}, {3.744837627765473*^9, 
  3.744837629127659*^9}},ExpressionUUID->"cd10202e-b518-476f-af64-\
7f56efa781eb"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", 
       RowBox[{
       "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", 
        "\"\<mu\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "+", ".2"}], "]"}], "<>", 
        "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
        "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], "\[Equal]", "False"}], ",", 
     RowBox[{"Print", "[", "i", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0.0", ",", "2", ",", "0.25"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448357586694956`*^9, 3.7448357703557844`*^9}, {
  3.74483580967109*^9, 3.7448358277120037`*^9}, {3.744836066774046*^9, 
  3.744836071439659*^9}, {3.7448361022774196`*^9, 
  3.7448361066974735`*^9}},ExpressionUUID->"96c498a1-37c2-488b-8502-\
33aa256c596f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"epsilonuppervaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<D:\\\\Nanowire\\\\Conductance\\\\Data\\\\\>\"", "<>", "\"\<mu\>\"",
        "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", "+", ".2"}], "]"}], "<>", 
       "\"\<Delta0.2alpha2Deltac0.2epsilon\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", "i", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<0\>\""}], ",", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], "<>", 
       "\"\<L3000-1.024,0.3-.dat\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "2", ",", ".25"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.744836114319871*^9, 
  3.7448362056296268`*^9}},ExpressionUUID->"2e86e336-1c3a-45ec-9839-\
2ebfc75a20f4"],

Cell[BoxData[
 RowBox[{"conductanceplotepsilonupper", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", "#1"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0.008", "*", "128"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", ".3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", 
            RowBox[{"-", ".15"}], ",", "0", ",", "0.15", ",", "0.3"}], "}"}], 
          " ", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(V\), \(bias\)]\)(meV)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), \(Z\)]\)\>\""}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Transpose", "@", "data"}], ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{".75", "^", "2"}], "+", 
                    RowBox[{".2", "^", "2"}]}]]}]}], "}"}]}]}], "]"}]}], 
           "}"}]}]}], "*)"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"enlist2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", ".5"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}]}]}],
         "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", " ", 
           RowBox[{"First", "@", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"DataRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}]}]}], 
        "*)"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<\[Epsilon]=\>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<(meV)\>\""}]}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"epsilonuppervaries", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "2", ",", "0.25"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.733089998293191*^9, 3.7330900394444914`*^9}, {
   3.7330908800325065`*^9, 3.733090907737771*^9}, {3.7330982084709606`*^9, 
   3.733098231546451*^9}, {3.738799151578232*^9, 3.738799153817046*^9}, {
   3.7387996416606936`*^9, 3.7387996470816784`*^9}, {3.7387996819707737`*^9, 
   3.738799766553339*^9}, {3.738799855047926*^9, 3.7387999125475874`*^9}, 
   3.7388001635716305`*^9, 3.7388061891092353`*^9, {3.7388072811110845`*^9, 
   3.7388072990454464`*^9}, {3.7388073500321026`*^9, 3.7388073690305457`*^9}, 
   3.738809149523303*^9, 3.7388416233253174`*^9, {3.738842045827659*^9, 
   3.7388421103622184`*^9}, {3.7388521751485806`*^9, 3.738852194125704*^9}, {
   3.7388529369072447`*^9, 3.738852967275284*^9}, {3.7401808688123727`*^9, 
   3.740180872609394*^9}, {3.7401809891294727`*^9, 3.740180993253669*^9}, {
   3.7402431970620685`*^9, 3.740243207897874*^9}, {3.7402564670766587`*^9, 
   3.7402564970118055`*^9}, {3.740272586715424*^9, 3.7402725968021126`*^9}, 
   3.740308862679792*^9, {3.7403110809812098`*^9, 3.7403110812680454`*^9}, {
   3.7403138570461025`*^9, 3.7403138637572384`*^9}, {3.740316633663245*^9, 
   3.740316633806146*^9}, {3.740316736715267*^9, 3.740316740438136*^9}, {
   3.740316800079033*^9, 3.7403168039128437`*^9}, {3.740318862888073*^9, 
   3.7403188876878586`*^9}, 3.740319084405327*^9, {3.7403191183779163`*^9, 
   3.740319124247557*^9}, {3.7403191547601*^9, 3.740319171154718*^9}, {
   3.7403192066813655`*^9, 3.7403192424139466`*^9}, {3.7403194634994497`*^9, 
   3.7403194687004485`*^9}, {3.7447236294812183`*^9, 
   3.7447236316329727`*^9}, {3.744723688522021*^9, 3.744723829529332*^9}, {
   3.7447456470966473`*^9, 3.7447456778950787`*^9}, {3.744745726993021*^9, 
   3.7447457495801387`*^9}, {3.7447457961515265`*^9, 3.744745843781344*^9}, 
   3.744747578286626*^9, 3.7447492118004956`*^9, {3.7447617195969925`*^9, 
   3.7447617598844643`*^9}, 3.744773003273941*^9, {3.744835344433646*^9, 
   3.744835375081848*^9}, {3.744835406963872*^9, 3.7448354516267176`*^9}, {
   3.7448356326800933`*^9, 3.7448356328050036`*^9}, {3.744835915995617*^9, 
   3.744835943423028*^9}, {3.744836011568924*^9, 3.744836021859753*^9}, {
   3.744836214476415*^9, 
   3.7448362248940134`*^9}},ExpressionUUID->"d5bdf225-47b5-49c6-8807-\
b4735fc47c34"],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "#1"}], ",", "#2"}], 
     "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"fnepsilonuppervaries", ",", "conductanceplotepsilonupper"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7448376040652122`*^9, 3.7448376529408617`*^9}, {
  3.744848353536125*^9, 
  3.7448483601720963`*^9}},ExpressionUUID->"d9b40c9f-3c58-45e9-a946-\
bcfdabb3dcb5"]
}, Open  ]]
},
WindowSize->{1540, 825},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "\[Gamma]2"->{
  Cell[18288, 463, 19345, 432, 610, "Input",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa",
   CellTags->"\[Gamma]2"],
  Cell[37636, 897, 19485, 435, 629, "Input",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a",
   CellTags->"\[Gamma]2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"\[Gamma]2", 832325, 15142}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 371, 8, 28, "Input",ExpressionUUID->"3793eb9a-45c0-48a2-a8db-52706051035f"],
Cell[932, 30, 8470, 211, 313, "Input",ExpressionUUID->"5eb6bed8-f965-40ad-858d-6172a270e736"],
Cell[9405, 243, 8880, 218, 293, "Input",ExpressionUUID->"b2843131-6f27-492d-a187-ef1eed0b3b28"],
Cell[18288, 463, 19345, 432, 610, "Input",ExpressionUUID->"e8383ce6-7085-4f9b-b169-0d1e744498fa",
 CellTags->"\[Gamma]2"],
Cell[37636, 897, 19485, 435, 629, "Input",ExpressionUUID->"c74b2898-2ade-4705-9053-86e1b1ab922a",
 CellTags->"\[Gamma]2"],
Cell[CellGroupData[{
Cell[57146, 1336, 955, 14, 28, "Input",ExpressionUUID->"c7af5f6b-8df6-4f4d-b95b-d5a155001542"],
Cell[58104, 1352, 346339, 5921, 342, "Output",ExpressionUUID->"e35c407f-9a26-4567-8644-6f1c8870a24f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404480, 7278, 690, 14, 28, "Input",ExpressionUUID->"4ea59d98-313b-46d2-ae1a-a70352a30486"],
Cell[405173, 7294, 347391, 5939, 350, "Output",ExpressionUUID->"e8608f0e-c79a-45bf-83aa-5d7466bdc415"]
}, Open  ]],
Cell[752579, 13236, 6288, 157, 238, "Input",ExpressionUUID->"2329ef32-6948-4764-99fc-9476436d9b3f"],
Cell[CellGroupData[{
Cell[758892, 13397, 778, 18, 28, "Input",ExpressionUUID->"5d7c6d22-10dd-47cf-848c-604b3d6fc09b"],
Cell[759673, 13417, 5552, 105, 457, "Output",ExpressionUUID->"321ffe08-2f86-4b2d-9271-e276b27cbe1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765262, 13527, 1690, 42, 48, "Input",ExpressionUUID->"3d298fc4-e2ba-460c-9842-c9418c895a41"],
Cell[766955, 13571, 1865, 31, 98, "Output",ExpressionUUID->"d992fb7e-81d4-4457-bc9e-b27e4f2c4595"]
}, Open  ]],
Cell[768835, 13605, 1417, 37, 48, "Input",ExpressionUUID->"48b50dfb-5f90-47e8-a67c-c01e5aa5929a"],
Cell[770255, 13644, 1688, 42, 48, "Input",ExpressionUUID->"45535e27-d6ab-4fde-ae68-e0c48dad0aa4"],
Cell[771946, 13688, 191, 4, 28, "Input",ExpressionUUID->"b67fed22-b137-428f-8e83-9fa5fbf9d438"],
Cell[772140, 13694, 184, 4, 28, "Input",ExpressionUUID->"aa2e6e9b-deee-4d84-8374-e31ae74e5925"],
Cell[772327, 13700, 311, 7, 28, "Input",ExpressionUUID->"9bd5f7ce-e207-43af-83aa-9d334789c8c9"],
Cell[CellGroupData[{
Cell[772663, 13711, 225, 4, 53, "Subsection",ExpressionUUID->"d2fa7534-b927-4086-804e-470bd2bdd27d"],
Cell[772891, 13717, 441, 10, 28, "Input",ExpressionUUID->"34647beb-c01b-4899-8372-d7e6d3420d96"],
Cell[773335, 13729, 524, 14, 28, "Input",ExpressionUUID->"9cd1ff17-ebd9-4181-9173-a230bd45743c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773896, 13748, 175, 3, 53, "Subsection",ExpressionUUID->"8a2dc1f5-4005-4933-a865-d180e4eb6a1c"],
Cell[774074, 13753, 490, 11, 28, "Input",ExpressionUUID->"26771f19-db62-4ebc-9884-3c064962128a"],
Cell[774567, 13766, 596, 15, 28, "Input",ExpressionUUID->"da3f7cc7-f781-40d9-b7a8-ccb4dcd46b35"],
Cell[775166, 13783, 835, 20, 28, "Input",ExpressionUUID->"d6f7f71b-c640-466d-aac6-e21f199896e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776038, 13808, 223, 4, 53, "Subsection",ExpressionUUID->"bd9d587e-7198-42db-9194-a5b4b4b6fc01"],
Cell[776264, 13814, 439, 10, 28, "Input",ExpressionUUID->"21e43e58-c7a4-4fa3-8998-21cf05bea92a"],
Cell[776706, 13826, 522, 14, 28, "Input",ExpressionUUID->"ae61ee0f-6951-4865-97b2-642a9918cd6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777265, 13845, 172, 3, 53, "Subsection",ExpressionUUID->"9d23e9fb-b40b-4819-a935-ac217423d33c"],
Cell[777440, 13850, 387, 10, 28, "Input",ExpressionUUID->"5501f436-abe2-455c-9ddd-813758344d3b"],
Cell[777830, 13862, 470, 13, 28, "Input",ExpressionUUID->"b42e5751-77e7-47bf-b263-c46592fc5b08"],
Cell[778303, 13877, 886, 21, 28, "Input",ExpressionUUID->"18f66eb0-d412-492e-b1b4-93cbc7d5a2c4"],
Cell[779192, 13900, 325, 9, 28, "Input",ExpressionUUID->"99ca0bd4-9919-4eeb-a9e9-1eb32c461820"],
Cell[779520, 13911, 319, 9, 28, "Input",ExpressionUUID->"3412c9e6-bfc8-4776-a61b-4deab007aa2a"],
Cell[779842, 13922, 728, 19, 28, "Input",ExpressionUUID->"cd002c36-e319-4686-bfb0-09080a6d2cae"],
Cell[780573, 13943, 780, 20, 28, "Input",ExpressionUUID->"5067bb2d-d01a-4924-9e0b-178053edec8a"],
Cell[781356, 13965, 1045, 25, 28, "Input",ExpressionUUID->"fb80be6a-a773-45d1-b092-7207e799fc4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782438, 13995, 173, 3, 53, "Subsection",ExpressionUUID->"d767949e-2baf-4208-b47c-5f9c69fa854d"],
Cell[782614, 14000, 389, 10, 28, "Input",ExpressionUUID->"141319a9-c5e1-4337-91c6-f1386cd1dcc8"],
Cell[783006, 14012, 470, 13, 28, "Input",ExpressionUUID->"1016eba9-6578-4472-a62c-31f9f2492cf6"]
}, Closed]],
Cell[CellGroupData[{
Cell[783513, 14030, 222, 4, 37, "Subsection",ExpressionUUID->"c5c2a5b2-b8ed-42cf-a83e-554fc461b34b"],
Cell[783738, 14036, 437, 10, 28, "Input",ExpressionUUID->"c058ce51-42b2-48f3-8330-099cc06bf84e"],
Cell[784178, 14048, 521, 14, 28, "Input",ExpressionUUID->"41e96805-bc71-4492-bf66-cf8e40ecb9d2"],
Cell[784702, 14064, 736, 19, 28, "Input",ExpressionUUID->"9c28502d-fa6a-4701-86b2-ab8df4d233a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[785475, 14088, 163, 3, 37, "Subsection",ExpressionUUID->"ef0d98f3-ef91-4c8f-8268-96feb09feb23"],
Cell[785641, 14093, 1244, 28, 28, "Input",ExpressionUUID->"c74eba06-08ac-4fc6-a629-c4f99013f697"],
Cell[786888, 14123, 186, 4, 28, "Input",ExpressionUUID->"97f3446a-a532-4bd5-8dec-8f1f5c64a008"],
Cell[CellGroupData[{
Cell[787099, 14131, 746, 19, 28, "Input",ExpressionUUID->"9023d925-be86-43c7-88a2-5583cd2941b6"],
Cell[787848, 14152, 3390, 46, 280, "Output",ExpressionUUID->"73845f08-e5f1-434f-b2d2-bdea2730d5d6"]
}, Open  ]],
Cell[791253, 14201, 1085, 26, 48, "Input",ExpressionUUID->"fe574cb9-135c-4574-806b-2023e56aa893"],
Cell[792341, 14229, 5522, 118, 136, "Input",ExpressionUUID->"763b0d62-4146-42d7-beb1-cc98b06786a7"],
Cell[CellGroupData[{
Cell[797888, 14351, 681, 18, 28, "Input",ExpressionUUID->"7269419c-4297-42a8-b24d-52e20646ad84"],
Cell[798572, 14371, 5358, 86, 413, "Output",ExpressionUUID->"14bae9ad-ae88-4807-943b-0f1841916072"]
}, Open  ]]
}, Open  ]],
Cell[803957, 14461, 77, 0, 53, "Subsection",ExpressionUUID->"96060d94-2783-4aff-b420-b079558d5e8f"],
Cell[CellGroupData[{
Cell[804059, 14465, 272, 4, 37, "Subsection",ExpressionUUID->"f941901e-9a41-4db4-9acd-f540b4435f28"],
Cell[804334, 14471, 825, 20, 28, "Input",ExpressionUUID->"8f1b2f55-e15b-4baf-8e59-9bf7acf5c710"],
Cell[805162, 14493, 1086, 27, 48, "Input",ExpressionUUID->"1f36528b-93ce-45aa-9de0-00ea1704c85b"],
Cell[806251, 14522, 1294, 28, 48, "Input",ExpressionUUID->"fa1c33c0-29a5-4b02-b1ae-03ec947a01ed"],
Cell[807548, 14552, 5444, 116, 136, "Input",ExpressionUUID->"f36fb924-bcb9-4dd4-b9a9-e437cb57e951"],
Cell[812995, 14670, 743, 18, 28, "Input",ExpressionUUID->"ceea8a41-52f3-4dd9-8d83-db3df9927c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813775, 14693, 236, 4, 53, "Subsection",ExpressionUUID->"14e052f7-e290-440c-9e9d-4f8a39ca9f9e"],
Cell[814014, 14699, 1029, 24, 48, "Input",ExpressionUUID->"43f26a91-55b6-4d7d-b6e1-199ea336249c"],
Cell[815046, 14725, 782, 20, 28, "Input",ExpressionUUID->"40af13d8-8a17-4256-a667-45419d6fc671"],
Cell[815831, 14747, 850, 22, 48, "Input",ExpressionUUID->"a6b65db1-7044-4bf8-9ab9-22618518e919"],
Cell[816684, 14771, 5505, 117, 136, "Input",ExpressionUUID->"49778792-14d2-435e-9470-505c7f59b279"],
Cell[822192, 14890, 472, 14, 28, "Input",ExpressionUUID->"719eeef3-2d11-405e-ae42-a8a7ac4716b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822701, 14909, 186, 3, 53, "Subsection",ExpressionUUID->"45daf945-bf98-448e-b420-2d7d437b69d7"],
Cell[822890, 14914, 892, 21, 28, "Input",ExpressionUUID->"cd10202e-b518-476f-af64-7f56efa781eb"],
Cell[823785, 14937, 1185, 28, 48, "Input",ExpressionUUID->"96c498a1-37c2-488b-8502-33aa256c596f"],
Cell[824973, 14967, 952, 25, 67, "Input",ExpressionUUID->"2e86e336-1c3a-45ec-9839-2ebfc75a20f4"],
Cell[825928, 14994, 5555, 118, 136, "Input",ExpressionUUID->"d5bdf225-47b5-49c6-8807-b4735fc47c34"],
Cell[831486, 15114, 525, 15, 28, "Input",ExpressionUUID->"d9b40c9f-3c58-45e9-a946-bcfdabb3dcb5"]
}, Open  ]]
}
]
*)

